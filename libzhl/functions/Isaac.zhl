// Throwing anything from the global namespace here so ZHL doesn't throw a fit

"558bec6aff68????????64a1????????5051535657a1????????33c5508d45??64a3????????8bda":
static cleanup GridEntity* Isaac::CreateGridEntity(int Type<ecx>, unsigned int Index<edx>);

"568bf185f6750433c05ec3e8":
static __fastcall int Isaac::Random(int Max);

"558bec83ec0c53568b75??57803e23":
static const char* Isaac::GetString(StringTable* table, const char* key);

"558bec83e4f883ec0ca1????????5356578b7018":
static __cdecl void* Isaac::GetRoomEntities(void* unk);

"558bec8b55??83fa49":
static __cdecl void Isaac::SetBuiltInCallbackState(int callbackid, bool enabled);

"558becff75??ff15????????83c4045dc3??????????????????????????????558bec83e4c0":
static __cdecl void Isaac::free(void *block);

"558beceb":
static __cdecl void* Isaac::operator_new(unsigned int size);

"53578bf98bda":
static cleanup Weapon* Isaac::CreateWeapon(WeaponType type<ecx>, Entity* ent<edx>);

"568bf18b0e85c974??8b01ff50":
static cleanup void Isaac::DestoryWeapon(Weapon** wep<ecx>);

"558bec6aff68????????64a1????????5083ec68a1????????33c58945??535657508d45??64a3????????8bf2":
static cleanup void Isaac::SpawnLocust(Entity_Player* player<ecx>, int collectibleType<edx>, Vector* pos);

"558bec6aff68????????64a1????????5081ec1c01000056":
static __stdcall unsigned int Isaac::genrand_int32();

"558bec83e4f883ec14f30f7e05????????53":
static __x86_64_output Vector Isaac::RandomUnitVector(unsigned int seed);

"558bec6aff68????????64a1????????50515657a1????????33c5508d45??64a3????????68":
static __cdecl void Isaac::Shutdown();

"558BEC83EC08807D0800F30F1002F30F5C05????????F30F10":
static __x86_64_output Vector Isaac::GetRenderPosition(Vector* source, bool scale);

"558bec83e4f883ec24f30f1005":
static __fastcall void Isaac::GetRandomPickupVelocity(Vector * buffer, Vector * position, unsigned int ePickupVelType, RNG * rng);

// this is under the Entity_Pickup namespace internally, but placing it here for more intuitive calling
"558bec83e4f883ec148b02":
static __x86_64_output Vector Isaac::GetCollectibleSpawnPosition(Vector* target);

"538bda578bf9":
static __x86_64_output Vector Isaac::GetAxisAlignedUnitVectorFromDir(int eDir);

struct Isaac {
    {{
    LIBZHL_API static bool IsInGame();
    }}
} : 0;
