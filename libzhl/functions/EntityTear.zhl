"558bec83e4c083ec3453568bf15780be????????000f84????????80be????????000f84????????f30f108e????????83ec08f30f588e????????f30f1005????????f30f5c05????????f30f101d????????f30f591d????????f30f5c0d????????f30f5905????????f30f115c24??f30f590d????????f30f58c8f30f59cbf30f580d????????f30f114c24??d94424??dd1c24e8????????d95c24??d94424??d95c24??f30f104424??f30f5e4424??f30f108e????????f30f588e????????f30f114424??f30f1005????????f30f5c05????????f30f5c0d????????f30f5905????????f30f590d????????f30f58c8f30f594c24??f30f580d????????f30f114c24??d94424??dd1c24e8????????d95c24??d94424??8dbe????????d95c24??f30f104424??83c408":
__thiscall void Entity_Tear::Render(Vector *offset);

"558bec6aff68????????64a1????????5081eca0010000a1????????33c58945??5657508d45??64a3????????8bf989bd????????ff75":
__thiscall bool Entity_Tear::HandleCollision(Entity* collider, bool low);

"558bec83e4f083ec1856":
__thiscall Entity_Tear* Entity_Tear::MakeMultidimensionalCopy(Entity * spawner);

"558bec83e4f883ec4ca1????????33c4894424??f30f100d":
__thiscall void Entity_Tear::ResetSpriteScale();

"558bec6aff68????????64a1????????505156a1????????33c5508d45??64a3????????8bf18975??e8????????c745??00000000c706":
__thiscall void Entity_Tear::Constructor();

struct Entity_Tear depends (ANM2, BitSet128) : public Entity {
	__vtable {
		skip; // Free
		skip; // Init
		skip; // PreUpdate
		
		override
		"558bec6aff68????????64a1????????50b8a0210000":
		void Update();
		
		skip; // Interpolate
		skip; // Render
		skip; // RenderShadowLayer
		skip; // PostRender
		skip; // TakeDamage
		skip; // Kill
		skip; // Remove
		skip; // TriggerGlowingHourglass
		skip; // GetRenderZ
		skip; // CanOverwrite
		skip; // SetColor
		skip; // SetCollisionDamage
		skip; // ClearReferences
		skip; // CanShutDoors
		skip; // IsBoss
		skip; // IsValidTarget
		skip; // TryThrow
		skip; // GetForwardVector
		skip; // HandleCollision
		skip; // ResetColor
		skip; // LoadEntityConfig
	};
	
	int _scaleAnimNum : 0x3ac;
	float _deadEyeIntensity : 0x3b4;
	ANM2 _tearHaloANM2 : 0x3fc;
	ANM2 _tearEffectANM2 : 0x510;
	ANM2 _deadEyeANM2 : 0x624;
	BitSet128 _tearFlags : 0x378;
	bool _multidimensionalTouched : 0x3b8;
	bool _prismTouched : 0x3b9;
} : 0x778;
