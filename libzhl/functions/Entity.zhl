"558bec6aff68????????64a1????????5083ec085657a1????????33c5508d45??64a3????????8bf9897d??c707????????c747??00000000c747??00000000":
__thiscall void Entity::constructor();

/*
"558bec518b45088d4d08": //bad signature
static void Entity::PlaySound(int ID, float Volume, int FrameDelay, bool Loop, float Pitch);
*/

"558bec83e4f8515356578bd9e8????????84c0":
__thiscall void Entity::CopyStatusEffects();
"558bec83e4f8515356578b7d??8bf157e8????????84c00f85????????57":
__thiscall void Entity::AddBleeding(const EntityRef& ref, int duration);

"558bec83e4f883ec10568b75??5756":
__thiscall void Entity::AddShrink(const EntityRef& ref, int duration);

"558bec83e4f883ec38a1????????33c4894424??56578b7d??8bf1":
__thiscall void Entity::AddMagnetized(const EntityRef& ref, int duration);

"558bec83e4f883ec30a1????????33c4894424??56578b7d??8bf157e8????????84c00f85????????57ff75??8bcee8????????8bce8bd0":
__thiscall void Entity::AddBaited(const EntityRef& ref, int duration);

"558bec83ec30a1????????33c58945??56578b7d??8bf157e8????????84c00f85????????57ff75":
__thiscall void Entity::AddBrimstoneMark(const EntityRef& ref, int duration);

"558bec83ec30a1????????33c58945??56578b7d??8bf157e8????????84c00f85????????576afd":
__thiscall void Entity::AddWeakness(const EntityRef& ref, int duration);

"558bec5156ff75":
__thiscall void Entity::AddIce(const EntityRef& ref, int duration);

"558bec83e4f85156ff75??8bf1e8":
__thiscall void Entity::AddKnockback(const EntityRef& ref, const Vector& pushDirection, int duration, bool takeImpactDamage);

"558bec518379??01":
__thiscall unsigned int Entity::ComputeStatusEffectDuration(int initial, EntityRef* source);

"558bec83e4f883ec14568bf1837e??00":
__thiscall Vector Entity::GetNullOffset(const char* nullLayerName);

"558bec83e4f883ec24568bf1837e7000":
__thiscall Capsule Entity::GetNullCapsule(const char* nullLayerName);

"558bec83e4c081ecb4000000f30f1005":
__thiscall bool Entity::RenderShadowLayer(Vector *offset);

"558becff05":
static cleanup bool Entity::ForceCollide(Entity* boom<ecx>, Entity *collider<edx>, bool low);

"558bec83e4f883ec088b45":
__thiscall Capsule Entity::GetCollisionCapsule(Vector* vec);

"8b51??8d42??3ddd0300000f87????????8bc2":
__thiscall uint32_t Entity::GetHitListIndex();

"558bec83e4f883ec5c53568b35":
static void Entity::DoGroundImpactEffects(Vector * pos, Vector * velocity, float strength<xmm3>);

"558bec51568b75??f30f115d":
__thiscall void Entity::GetPredictedTargetPosition(Vector * buffer, Entity * target, float distanceStrength<xmm3>);

"558bec83e4f883ec088b81":
__thiscall bool Entity::IgnoreEffectFromFriendly(EntityRef* source);

"558bec83e4f883ec0c535657f30f115424??8bd9e8????????8b7d??8b0d????????6a00506a03":
__thiscall Entity_Effect * Entity::MakeBloodPoof(Vector * pos, ColorMod * color, float size<xmm2>);

"558bec83e4f883ec0c535657f30f115424??8bd9e8????????8b7d??8b0d????????6a00506a01":
__thiscall Entity_Effect * Entity::MakeGroundPoof(Vector * pos, ColorMod * color, float size<xmm2>);

"558bec83e4f881ec94000000f30f1005":
__thiscall void Entity::TeleportToRandomPosition(bool unused);

struct Entity depends (AnimationState, ANM2, RNG, Vector) {
{{
	inline int GetIndex() { return *(int*)((char*)this + 0x20); }
	inline unsigned int* GetType() { return (unsigned int*)((char*)this + 0x28); }
	inline unsigned int* GetVariant() { return (unsigned int*)((char*)this + 0x2c); }
	inline unsigned int* GetSubType() { return (unsigned int*)((char*)this + 0x30); }
	inline AnimationState* GetAnimationState() { return (AnimationState*)((char*)this + 0x6c); }
	inline bool IsAnimationExist() {
		int animSomething = *(int*)((char*)this + 0x70); //unknown type, so use int instead
		return animSomething != NULL;
	}
	inline AnimationState* GetOverlayAnimationState() { return (AnimationState*)((char*)this + 0x8c); }
	inline bool IsOverlayAnimationExist() {
		int overlayAnimSomething = *(int*)((char*)this + 0x90); //unknown type, so use int instead
		return overlayAnimSomething != NULL;
	}
	inline float* GetShadowSize() { return (float*)((char*)this + 0x150); }
	inline bool* GetVisible() { return (bool*)((char*)this + 0x169); }
	inline bool* IsDead() { return (bool*)((char*)this + 0x16b); }
	inline int* GetBossStatusEffectCooldown() { return (int*)((char*)this + 0x230); }
	inline int* GetPauseTime() { return (int*)((char*)this + 0x274); }
	inline Vector* GetPosition() { return (Vector*)((char*)this + 0x294); }
	inline bool* IsInvincible() { return (bool*)((char*)this + 0x308); }
	inline int* GetFireDamageCountdown() { return (int*)((char*)this + 0x208); }
	inline int* GetDamageCountdown() { return (int*)((char*)this + 0x20c); }

    template<typename T>
    inline T Downcast(void* target) {
        return (T)__RTDynamicCast(this, 0, (void*)__ptr_EntityRTTI, target, false); 
    }

    inline Entity_NPC* GetMinecart() { return *(Entity_NPC**)((char*)this + 0x32C); }
	
	inline LuaBridgeRef** GetLuaRef() { return (LuaBridgeRef**)((char*)this + 0x35C); }
	
    inline Entity_NPC* ToNPC() { return Downcast<Entity_NPC*>(__ptr_EntityNPCRTTI); } 
    inline Entity_Player* ToPlayer() { return Downcast<Entity_Player*>(__ptr_EntityPlayerRTTI); }
    inline Entity_Familiar* ToFamiliar() { return Downcast<Entity_Familiar*>(__ptr_EntityFamiliarRTTI); }
    inline Entity_Projectile* ToProjectile() { return Downcast<Entity_Projectile*>(__ptr_EntityProjectileRTTI); }
	
	Entity() 
	{
		this->constructor();
	}
}} 
    unsigned int _index : 0x20;
    unsigned int _collisionIndex : 0x24;
    unsigned int _type : 0x28;
    unsigned int _variant : 0x2c;
    unsigned int _subtype : 0x30;
	unsigned int _spawnerType : 0x34;
	unsigned int _spawnerVariant: 0x38;
	ANM2 _sprite : 0x3c;
    unsigned int _shadowSize : 0x150;
	unsigned long long _flags : 0x160;
    bool _dead : 0x168; 
    bool _visible : 0x169;
	bool _collidesWithGrid : 0x188;
	vector_ColorParams _colorParams : 0x1a4;
	int _fireDamageCountdown : 0x208;
	int _damageCountdown : 0x20c;
	int _freezeCountdown : 0x210;
	int _poisonCountdown : 0x214;
	int _slowingCountdown : 0x218;
	int _charmedCountdown : 0x21c;
	int _confusionCountdown : 0x220;
	int _midasFreezeCountdown : 0x224;
	int _fearCountdown : 0x228;
	int _burnCountdown : 0x22c;
	int _bossStatusEffectCooldown : 0x230;
	int _shrinkCountdown : 0x234;
	int _poisonDamageTimer : 0x238;
	int _burnDamageTimer : 0x23c;
	int _bleedingCountdown : 0x240;
	int _magnetizedCountdown : 0x248;
	int _baitedCountdown : 0x24c;
	int _knockbackCountdown : 0x250;
	int _weaknessCountdown : 0x254;
	int _iceCountdown : 0x258;
	int _brimstoneMarkCountdown : 0x25c;
	Vector _knockbackDirection : 0x260;
	float _poisonDamage : 0x278;
	float _burnDamage : 0x27c;
	float _depthOffset : 0x2b0;
	float _collisionDamage : 0x2e0;
    float _speedMultiplier : 0x2F4;
	float _shrinkStatus1 : 0x30c;
	float _shrinkStatus2 : 0x310;
	Entity * _parent : 0x314;
	Entity * _child : 0x318;
	Entity * _spawnerEntity : 0x320;
	RNG _dropRNG : 0x334;

    __vtable {
		skip; // Free
		
        "558bec83ec308b45??f30f7e05":
        void Init(unsigned int type, unsigned int variant, unsigned int subtype, unsigned int initSeed);
		
		skip; // PreUpdate
		
        "558bec83e4f081ecd8010000":
        void Update();
		
		skip; // Interpolate
		skip; // Render
		skip; // RenderShadowLayer
		skip; // PostRender
		
        "558bec83e4f883ec3c5356578bf9837f??01":
        bool TakeDamage(float Damage, unsigned long long DamageFlags, EntityRef *Source, int DamageCountdown);
		
		skip; // Kill
		
        "51568bf15780be????????00c686????????007507":
        void Remove(); 
		
		skip; // TriggerGlowingHourglass
		skip; // GetRenderZ
		skip; // CanOverwrite

		"558bec83e4f883ec4c538b5d??56":
		void SetColor(ColorMod *color, int Duration, int Priority, bool Fadeout, bool Shared);
		
		skip; // SetCollisionDamage
		skip; // ClearReferences
		skip; // CanShutDoors
		skip; // IsBoss
		skip; // IsValidTarget
		
		"32c0c20c00":
		bool TryThrow(const EntityRef& Source, Vector* dir, float force);
		
		skip; // GetForwardVector
		skip; // HandleCollision
		
		"8d81????????81c1e4000000":
		void ResetColor();
		
		skip; // LoadEntityConfig
    };
} : 0x360;

"568bf18b861403000085c074306a0068????????68(????????)":
reference void* EntityRTTI;

"558bec51535657894dfce8914d03008b75088b0d????????506a006a0068????????566a0068c5030000e8013ed9ff":
__thiscall Entity_NPC* Entity::GiveMinecart(Vector* position, Vector* velocity);

/* For convenience's sake:
		skip; // Free
		skip; // Init
		skip; // PreUpdate
		skip; // Update
		skip; // Interpolate
		skip; // Render
		skip; // RenderShadowLayer
		skip; // PostRender
		skip; // TakeDamage
		skip; // Kill
		skip; // Remove
		skip; // TriggerGlowingHourglass
		skip; // GetRenderZ
		skip; // CanOverwrite
		skip; // SetColor
		skip; // SetCollisionDamage
		skip; // ClearReferences
		skip; // CanShutDoors
		skip; // IsBoss
		skip; // IsValidTarget
		skip; // TryThrow
		skip; // GetForwardVector
		skip; // HandleCollision
		skip; // ResetColor
		skip; // LoadEntityConfig
*/