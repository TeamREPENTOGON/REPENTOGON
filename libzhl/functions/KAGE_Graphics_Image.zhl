struct KAGE_Graphics_ImageBase_VertexAttributeDescriptor {
    char const* const* name : 0x0;
    uint32_t param : 0x4;
} : 0x8;

struct KAGE_Graphics_ImageBase depends (SourceQuad, DestinationQuad, KAGE_Graphics_Color) {
	char* _filepath : 0x3c;
    __vtable {
		skip; // IsLoaded
		skip; // IsProcedural
		skip; // Render
		
        "558bec8b45108b1150505050ff750cff7508ff5208":
        void Render(SourceQuad& source, DestinationQuad& dest, KAGE_Graphics_Color& color);
		
        "558bec83ec248b4508568bf10f1000":
        void Render(SourceQuad& source, DestinationQuad& dest, KAGE_Graphics_Color& col1, KAGE_Graphics_Color& col2, KAGE_Graphics_Color& col3, KAGE_Graphics_Color& col4);
		
		skip; // Render
		skip; // Render
		skip; // Render
		skip; // Render
		skip; // Render
		skip; // Render
		skip; // GetWidth
		skip; // GetHeight
		skip; // GetPaddedWidth
		skip; // GetPaddedHeight
		skip; // GetBytesPerPixel
		skip; // SetVertexFormat
		skip; // SetFilterMode
		skip; // SetWrapMode
		skip; // IsPalleted
		skip; // SetPalette
		skip; // SetTexel
		skip; // GetTexel
		skip; // GetTexelRegion
		skip; // RenderTexturedTriangle
		skip; // Free?
		skip; // Load
		skip; // Load
		skip; // Load
		skip; // SwapBatches
		skip; // FreeBatches
		skip; // Unload
		skip; // Reload
		skip; // UnloadImageData
		skip; // Bind
		skip; // ApplyPallete
		skip; // apply_image
		skip; // SetTexelData
    };
} : 0x78;

struct KAGE_Graphics_ImagePNG : public KAGE_Graphics_ImageBase {

};

struct KAGE_Graphics_ImagePIC : public KAGE_Graphics_ImageBase {

};

struct KAGE_Graphics_ImagePCX : public KAGE_Graphics_ImageBase {

};

"8b098b8710010000c1e80924010fb6c05068(????????)518d45d850":
reference KAGE_Graphics_ImageBase_VertexAttributeDescriptor g_VertexAttributeDescriptor_Position;

/* For convenience's sake:
		skip; // IsLoaded
		skip; // IsProcedural
		skip; // Render
		skip; // Render
		skip; // Render
		skip; // Render
		skip; // Render
		skip; // Render
		skip; // Render
		skip; // Render
		skip; // GetWidth
		skip; // GetHeight
		skip; // GetPaddedWidth
		skip; // GetPaddedHeight
		skip; // GetBytesPerPixel
		skip; // SetVertexFormat
		skip; // SetFilterMode
		skip; // SetWrapMode
		skip; // IsPalleted
		skip; // SetPalette
		skip; // SetTexel
		skip; // GetTexel
		skip; // GetTexelRegion
		skip; // RenderTexturedTriangle
		skip; // Free?
		skip; // Load
		skip; // Load
		skip; // Load
		skip; // SwapBatches
		skip; // FreeBatches
		skip; // Unload
		skip; // Reload
		skip; // UnloadImageData
		skip; // Bind
		skip; // ApplyPallete
		skip; // apply_image
		skip; // SetTexelData
*/