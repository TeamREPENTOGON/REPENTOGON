"c700(????????)c740??00000000c740??00000000c740??0000000066c740??00008946":
reference void* SteamCloudFile_vftable;

"558bec83ec08568bf1578b4e":
__thiscall void* SteamCloudFile::ReadPGD();

"558bec6aff68????????64a1????????5083ec3ca1????????33c58945??535657508d45??64a3????????8bd96a24e8????????8bf08d4d??83c4048975??8d43??c746??0200000050c746??00000000c706????????c746??00000000c746??00000000c746??0000000066c746??0000e8????????c745??00000000b90f0000008b3d????????894d??c745??04000000897d??c645??00c645??018d45??837d??108d4d??8b55??0f434d??6a045051e8????????83c40c83f8ff74??6a0468????????6a04508d4d??e8????????837d??108d4d??8b060f434d??518bce8b40??3d????????75??e8????????eb??ffd084c074??8b068b40??3d????????75??837e??020f95c0eb??8bceffd084c074??568bcbe8????????84c08bce0f95c08883????????8b068b40??3d????????75??e8????????8a9b????????eb??ffd08a9b????????eb??837d??108d45??0f4345??5068????????6a00e8????????8b0683c40c8bce8b40??3d????????75??e8????????eb??ffd032db8b55??83fa1072??8b4d??428bc181fa0010000072??8b49??83c2232bc183c0fc83f81f76??ff15????????5251e8????????83c4088ac38b4d??64890d????????595f5e5b8b4d??33cde8????????8be55dc3????????????????????53":
__thiscall bool SteamCloudFile::ReadABPGD();

"558bec5368":
__thiscall bool SteamCloudFile::PushToSteamCloud(const char* path, uint32_t size);


struct SteamCloudFile : public KAGE_Filesys_FileStream {
	{{
        SteamCloudFile()
        {
            this->_vtable = __ptr_SteamCloudFile_vftable;
            this->_status = 2;
            this->_filePath = nullptr;
            this->_steamCloudFilename = nullptr;
            this->_buffer = nullptr;
            this->_bufferSize = 0;
            this->_position = 0;
            this->_size = 0;
            this->_unk = false;
            this->_isEof = false;
        }
    }}

	char* _steamCloudFilename : 0xc;
	char* _buffer : 0x10;
	uint32_t _bufferSize : 0x14;  // Total size of the currently allocated buffer.
	uint32_t _position : 0x18;
	uint32_t _size : 0x1c;  // How many bytes have been written into the buffer so far.
	bool _unk : 0x20;
	bool _isEof : 0x21;
} : 0x24;
