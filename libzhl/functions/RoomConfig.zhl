"558bec6aff68????????64a1????????5051b884000100e8????????a1????????33c58945??535657508d45??64a3????????8965??898d":
__thiscall void RoomConfig::LoadCurses(char* xmlpath,bool ismod);

"558bec8b45??83f8ff75??a1":
static cleanup unsigned int RoomConfig::GetStageID(unsigned int LevelStage<ecx>, unsigned int StageType<edx>, unsigned int Mode);

"538bdc83ec0883e4f883c404558b6b??896c24??8bec6aff68????????64a1????????50515351b894010100":
__thiscall void RoomConfig::LoadStages(char *xmlpath);

"538bdc83ec0883e4f883c404558b6b??896c24??8bec6aff68????????64a1????????505383ec6c":
__thiscall void RoomConfig::LoadStageBinary(unsigned int Stage, unsigned int Mode);

// RoomConfigHolder

"558bec518b55??5356578b7d":
__thiscall RoomConfig_Room* RoomConfig::GetRoomByStageTypeAndVariant(uint32_t stage, uint32_t type, uint32_t variant, int32_t difficulty);

"558bec6aff68????????64a1????????5083ec74a1????????33c58945??535657508d45??64a3????????894d":
__thiscall RoomConfig_Room* RoomConfig::GetRandomRoom(unsigned int seed, bool reduceWeight, int stage, int roomType, int roomShape, unsigned int minVariant, int maxVariant, int minDifficulty, int maxDifficulty, unsigned int* requiredDoors, unsigned int roomSubtype, int mode);

"558bec6aff68????????64a1000000005083ec18535657a1????????33c5508d45f464a3000000008b7d0c8b553069f7c4000000":
RoomConfigRoomPtrVector RoomConfig::GetRooms(int stage, int type, int shape, int minVariant, int maxVariant, int minDifficulty, int maxDifficulty, unsigned int* doors, unsigned int subtype, int mode);

struct RoomConfig depends (RoomConfig_Stage, RoomConfig_Curse, RoomConfig_Miniboss)
{
    RoomConfig_Stage _stages[37] : 0x0;
	vector_Curse _curses : 0x1c54;
	RoomConfig_Miniboss _miniboss : 0x1c60;
	RoomConfig_Room* _rooms : 0x1e20;
	unsigned int _roomCount : 0x1e24;
} : 0x1e28;
