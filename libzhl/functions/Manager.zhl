"558bec83e4f081ec68040000":
static void Manager::Update(bool unk);

"558bec83ec08568b35????????85f6":
static __stdcall void Manager::RecordPlayerCompletion(int eCompletionEvent);

"558bec83e4f881ec34040000":
__thiscall void Manager::LoadGameState(int saveslot);

"538bdc83ec0883e4f883c404558b6b??896c24??8bec6aff68????????64a1????????505383ec58a1????????33c58945??5657508d45??64a3????????8bf9897d??f30f7e05":
__thiscall void Manager::LoadConfigs();

"558bec6aff68????????64a1????????5051b820020100":
__thiscall void Manager::LoadChallenges(char *xmlpath, bool ismod);


"68(????????)68????????8d8424":
reference std_string g_SaveDataPath;

"a2(????????)75??6a00":
reference bool g_isfullscreenrendering;

"8915(????????)a3":
reference unsigned int g_WindowSizeX;

"a3(????????)75??803d????????00":
reference unsigned int g_WindowSizeY;

/*
"":
__stdcall static void __stdcall Manager::RestartGame(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >) //from remix 2 zhl
__cdecl void Manager::RestartGame(Seeds param_1,bool param_2,bool param_3) //switch ver
__stdcall void Manager::RestartGame() //v1.7.9b maybe
*/

"558beca1????????568bb0":
__thiscall ChallengeParam* Manager::GetChallengeParams(int challengeID);

"558BEC6AFF68????????64a1000000005083EC60A1????????33C58945F05650":
__thiscall void Manager::StartNewGame(int playerType, int challenge, Seeds unk, int difficulty);

"558bec5153568b35????????8b86":
__thiscall bool Manager::AchievementUnlocksDisallowed(bool unk);

"538bdc83ec0883e4f883c404558b6b??896c24??8bec6aff68????????64a1????????505381ecf8000000a1????????33c58945??5657508d45??64a3????????8bf989bd????????80bf????????000f84":
__thiscall void Manager::ExecuteStartGame();

"558bec6aff68????????64a1????????5083ec60a1????????33c58945??535657508d45??64a3????????c745??00000000":
static void Manager::RestartGame(Seeds seeds, bool clearSeedEffects, bool progresScaredHeart);

"568bf18b46??83e801":
__thiscall void Manager::cleanup_current_state();
 
"558bec6aff68????????64a1000000005083ec3ca1????????33c58945f0535657508d45f464a3000000008b550c8bca":
static ReferenceCounter_ImageBase* Manager::LoadImage(ReferenceCounter_ImageBase* result, const char* path, KAGE_Graphics_ImageBase_VertexAttributeDescriptor* descriptor, bool unk);

"558bec83e4f883ec6856578b3d":
__thiscall void Manager::Render();

"558bec83e4c083ec34a1":
__thiscall void Manager::ResizeWindow(int windowWidth,int windowHeight);

"558bec83e4f8515356578b7d??85ff":
__thiscall void Manager::ResizeWindowCallback(int windowWidth,int windowHeight);

"558bec83ec48a1????????33c58945??538a5d":
__thiscall void Manager::SetFullscreenRendering(bool value);

"558bec81ec10040000":
__thiscall void Manager::SetSaveSlot(unsigned int slot);

"558bec518b55??8b0d????????83fa1a":
__thiscall void Manager::ShowCutscene(uint32_t cutsceneID, bool shouldCleanup, unsigned int UNKNOWN);

"a1????????8b80????????83f813":
static char* Manager::GetLanguage();

struct Manager depends (Seeds, GameState, StringTable, PersistentGameData, NightmareScene, UnknownGameStartStruct, ModManager, ReferenceCounter_ImageBase, Cutscene, OptionsConfig, AchievementOverlay, SoundEffects, ItemConfig, EntityConfig, ANM2, Font, ChallengeParam, Music, NetplayManager, DailyChallenge) { {{
	inline int GetState() { return this->_state; }
	inline PersistentGameData* GetPersistentGameData() { return &this->_persistentGameData; }
	inline NightmareScene* GetNightmareScene() { return &this->_nightmareScene; }
	inline bool GetDebugConsoleEnabled() { return this->_isConsoleEnabled; }
	inline int GetMaxRenderScale() { return this->_optionsConfig._maxRenderScale; }
	inline ModManager* GetModManager() { return &this->_modManager; }
	inline DailyChallenge* GetDailyChallenge() { return &this->_dailyChallenge; }
	inline StringTable* GetStringTable() { return &this->_stringTable; }
	inline bool GetNetStart() { return this->_networkPlay; }
	inline Cutscene* GetCutscene() { return &this->_cutsceneManager; }
	inline OptionsConfig* GetOptions() { return &this->_optionsConfig; }
	inline AchievementOverlay* GetAchievementOverlay() { return &this->_achievementOverlay; }
	inline ItemConfig* GetItemConfig() { return &this->_itemConfig; }
	inline EntityConfig* GetEntityConfig() { return &this->_entityConfig; }
	inline std::vector<EntityConfig_Player>* GetPlayerConfig() { return this->GetEntityConfig()->GetPlayers(); }
	inline NetplayManager* GetNetplayManager() { return &this->_netplayManager; }
}} 
	
	int _state : 0x8;
	uint32_t _currentSaveSlot : 0x10;
	PersistentGameData _persistentGameData : 0x14;
	GameState _gamestate : 0xfa4;
	Cutscene _cutsceneManager : 0x20d10;
	NightmareScene _nightmareScene : 0x21560;
	AchievementOverlay _achievementOverlay : 0x21b54;
	Music _musicmanager : 0x29ec0;
	SoundEffects _sfxManager : 0x2a228;
	OptionsConfig _optionsConfig : 0x2a240;
	ItemConfig _itemConfig : 0x2a2f8;
	EntityConfig _entityConfig : 0x2a430;
	ModManager _modManager : 0x2a480;
	StringTable _stringTable : 0x4a6e0;
	unsigned int _framecount : 0x4a97c;
	bool _isConsoleEnabled : 0x4a991;
	ANM2 _buttonsSprite : 0x4a9a4;
	Font _font1_TeamMeatEx10 : 0x4aacc;
	Font _font2_TeamMeatEx12 : 0x4ab18;
	Font _font3_TeamMeatEx16 : 0x4ab64;
	Font _font4_terminus : 0x4abb0;
	Font _font5_terminus8 : 0x4abfc;
	Font _font6_PFTempestaSevenCondensed : 0x4ac48;
	Font _font7_Upheaval : 0x4ac94;
	Font _font8_LuaMiniOutlined : 0x4ace0;
	Font _font9_PFTempestaSevenCondensedAgain : 0x4ad2c;
	bool _starting : 0x4add4;
	bool _rerunAvailable : 0x4add5;
	bool _startingFromRerun : 0x4add6;
	Seeds _startSeeds : 0x4ade0;
	bool _debugStart : 0x4ae40;
	DailyChallenge _dailyChallenge : 0x4ae64;
	bool _networkPlay : 0x4af18;
	ANM2 _cursorSprite : 0x4af4c;
	NetplayManager _netplayManager : 0x4b080;
	
} : 0x4cdfc;

"a1(????????)8b80????????83e800":
reference Manager *g_Manager;
