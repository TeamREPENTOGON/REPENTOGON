"558bec81ec8000000053":
__thiscall void EntityList::RenderShadows(Vector *offset);

"558bec6aff68????????64a1????????5083ec24535657a1????????33c5508d45??64a3????????8bf18b5d":
__thiscall EntityList_EL* EntityList::QueryType(EntityList_EL* result, int Type, int Variant, int Subtype, bool Cache, bool IgnoreFriendly);

"558bec83e4f883ec14535657f3":
__thiscall EntityList_EL EntityList::QueryRadius(Vector* Position, float Radius<xmm3>, unsigned int Partitions);

"558bec83e4f883ec4056578bf1":
__thiscall EntityList_EL* EntityList::QueryCapsule(EntityList_EL* result, Capsule* Capsule, unsigned int Partitions);

struct EntityList depends (Entity, EntityList_EL) {
{{
    inline EntityList_EL* GetUpdateEL() { return (EntityList_EL*)((char*)this + 0x40); }
    inline EntityList_EL* GetTempEL() { return (EntityList_EL*)((char*)this + 0x70); }
	inline EntityList_EL* GetWispEL() { return (EntityList_EL*)((char*)this + 0x90); }
    inline EntityList_EL* GetPersistentEL() { return (EntityList_EL*)((char*)this + 0x30); }

	// This exists in the original source code as evidenced in the Switch decomp, but was inlined on PC.
	int CountWisps(unsigned int WispSubtype) {
	
		EntityList_EL* wisps = this->GetWispEL();
		unsigned int size = wisps->_size;
		unsigned int wispCount = 0;
		
		if (size) {
			Entity** data = wisps->_data;

			while (size) {
				Entity* wisp = *data;
				++data;
				if (wisp->_subtype == WispSubtype) // int WispSubtype
					wispCount++;
				--size;
			}
		}
		
		return wispCount;
	}
	
	
}} 

	EntityList_EL _wispEL : 0x90;

} : 0x400;
