"558bec83ec08f30f1005????????56578bf9f30f1145??8b0d":
__thiscall float Room::GetDevilRoomChance();

"558bec8b45??3dbf01000077??8b44":
__thiscall GridEntity* Room::GetGridEntity(uint32_t idx);

"558bec6aff68????????64a1????????5083ec7ca1????????33c58945??535657508d45??64a3????????8bd9":
__thiscall void Room::ShopRestockFull();

"558bec83ec1c53568bf1":
__thiscall void Room::ShopRestockPartial();

"558bec83ec30f30f7e05":
__thiscall int Room::GetShopItemPrice(unsigned int entVariant, unsigned int entSubType, int shopItemID);

"558bec53568b75??8bd95785f6":
__thiscall bool Room::SpawnGridEntity(int GridIndex, unsigned int Type, unsigned int Variant, unsigned int Seed, int VarData);

"558bec5153568b75??8bd95785f6":
__thiscall bool Room::SpawnGridEntityDesc(int GridIndex, GridEntityDesc *Desc);

"558bec8b55??568bf181fabf010000":
__thiscall void Room::RemoveGridEntityImmediate(int GridIndex, int PathTrail, bool KeepDecoration);

"558bec83ec08538bd956578b3d":
__thiscall void Room::TriggerClear(bool playSound);

"558bec83e4f883ec5ca1????????33c4894424??8b45??894424??":
__thiscall bool Room::CanSpawnObstacleAtPosition(int GridIndex, bool Force);

"558bec83e4f883ec14538bd9565783bb????????39":
__thiscall float Room::GetLightingAlpha();

"558bec83e4f881ec8000000056578bf9897c24??e8":
__thiscall void Room::PreRender();

"558bec83ec6cf30f7e05":
__thiscall void Room::RenderGridLight(GridEntity* grid, Vector &offset);

"538bdc83ec0883e4f883c404558b6b??896c24??8bec81ec30010000":
__thiscall void Room::RenderEntityLight(Entity* ent, Vector &offset);

"558bec8bc18b4d??81f9bf01000077??8b4c????85c974??8379??00":
__thiscall bool Room::CanPickupGridEntity(int GridIndex);

"538bdc83ec0883e4f883c404558b6b??896c24??8bec6aff68????????64a1????????505381ec4001000056":
__thiscall bool Room::PickupGridEntity(int GridIndex, GridEntityDesc* Desc, ANM2* Sprite);

"538bdc83ec0883e4f883c404558b6b??896c24??8bec6aff68????????64a1????????505381ec40010000a1????????33c58945??5657508d45??64a3????????8bf98d8d":
__thiscall Entity_Effect* Room::PickupGridEntity(int GridIndex);

"558bec8b55??568bf185d2":
__thiscall int Room::GetGridIndexByTile(int GridRow, int GridColumn);

"538bdc83ec0883e4f883c404558b6b??896c24??8bec6aff68????????64a1????????505381ec18080000":
__thiscall void Room::Init(int param_1, RoomDescriptor* descriptor);

"558bec568bf133c03986":
__thiscall void Room::SetPauseTimer(int Duration);

"558bec568b75??578bf98b87":
__thiscall ColorModState Room::ComputeColorModifier();

"558bec83ec0c5356578b7d??8bd9895d??85ff":
__thiscall int Room::TryGetShopDiscount(int shopItemIdx, int price);

"558bec8b45??83f82a":
bool Room::IsPersistentRoomEntity(int type, int variant, int subtype);

"558bec83ec0ca1????????53894d":
__thiscall bool Room::TrySpawnSpecialQuestDoor();

struct Room depends (EntityList, RoomDescriptor, TemporaryEffects, RailManager) {
{{
	inline Camera* GetCamera() { return *(Camera**)((char*)this + 0x11F8); }
	inline bool GetRedHeartDamage() { return *(bool*)((char*)this + 0x120C); }
	inline EntityList* GetEntityList() { return (EntityList*)((char*)this + 0x1218); }
	inline FXParams* GetFXParams() { return (FXParams*)((char*)this + 0x1c90); } // doing this the lazy way while FXLayers isn't exposed
	inline float* GetWaterAmount() { return &this->_waterAmount; }
	inline KColor* GetWaterColor() { return (KColor*)((char*)this + 0x7158 ); }
	inline KColor* GetWaterColorMultiplier() { return (KColor*)((char*)this + 0x7168 ); }
	
	// Initially, the base water color was erroneously defined as a Color and not a KColor occupying 0x7168. Color takes more bytes in memory.
	// Due to this, when setting the color, some arbitrary bytes ahead of the water color were being set.
	// While the true nature of these bytes aren't yet understood, the one at 0x7178 seems to control whether water color is rendered.
	inline int* GetUnknownWaterInt() { return (int*)((char*)this + 0x7178 ); }
	
	inline ColorMod* GetFloorColor() { return (ColorMod*)((char*)this + 0x7188 ); }
	inline TemporaryEffects* GetTemporaryEffects() {return (TemporaryEffects*)((char*)this + 0x71F4); }
    inline Backdrop* GetBackdrop() { return (Backdrop*)((char*)this + 0x1D34); }
	inline Vector* GetWaterCurrent() {return (Vector*)((char*)this + 0x7344); }
    inline RailType* GetRails() { return (RailType*)((char*)this + 0x7350); }
    inline RailType GetRailType(uint8_t gridIndex) { return GetRails()[gridIndex]; }
    inline void SetRailType(uint8_t gridIndex, RailType railType) { GetRails()[gridIndex] = railType; }
    static bool LIBZHL_API IsValidRailType(lua_Integer rail);
    inline bool IsValidGridIndex(lua_Integer index, bool includeWalls = true) const {
        return _descriptor->Data->IsValidGridIndex(index, includeWalls);
    }
    bool LIBZHL_API IsChampionBossSeed() const;
    float LIBZHL_API GetChampionBossChance() const;
}} 
    RoomDescriptor* _descriptor : 0x4; //0x04
	uint32_t _roomType : 0x8; //0x08
    GridEntity* _gridEntities[0x1BF] : 0x24; // 0x24
    GridEntity* _doors[8] : 0x724; // 0x724
    uint32_t _doorGridPositions[8] : 0x744; // 0x744
	int _roomClearDelay : 0x11ec;
    Camera *_Camera : 0x11f8; //0x11F8
    bool _redHeartDamage : 0x120c; //0x120C
    EntityList _entityList : 0x1218; //0x1218
	int _greedWaveTimer : 0x7130;
	float _waterAmount : 0x7134;
	bool _pacifist : 0x7185;
    TemporaryEffects _temporaryEffects : 0x71f4; //0x71F4
	RailManager _railManager : 0x734c; //0x734c

    "558bec6aff68????????64a1000000005083ec305657a1????????33c550":
    bool save_entity(Entity* entity, EntitySaveState* data, bool unk);

    "558bec83e4f883ec1c5356578b7d088bf1":
    void restore_entity(Entity* entity, EntitySaveState* data);
} : 0x777c;
