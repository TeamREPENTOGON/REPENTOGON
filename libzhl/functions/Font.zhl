"558bec6aff68????????64a1????????5081ec4c040000":
__thiscall void Font::Load(const char * path, bool unusedIsLoading);

"558bec6aff68????????64a1????????5083ec18535657a1????????33c5508d45??64a3????????8bd98b75??8d45??56ff75??50e8????????8bf88b55??f30f1045":
__thiscall void Font::DrawString(const char* str, Vector pos, Vector scale, KColor* color, FontSettings* settings);

"558bec6affff75":
__thiscall int Font::GetStringWidth(const char* str);


//most of the variables are parsed from .fnt binary (https://www.angelcode.com/products/bmfont/doc/file_format.html)
struct Font {
	bool _isLoaded : 0x0;
	//block info
	int16_t _fontSize : 0x4;
	uint8_t _infoBitField : 0x6;
	uint8_t _charSet : 0x7;
	uint16_t _stretchH : 0x8;
	uint8_t _aa : 0xa;
	uint8_t _paddingUp : 0xb;
	uint8_t _paddingRight : 0xc;
	uint8_t _paddingDown : 0xd;
	uint8_t _paddingLeft : 0xe;
	uint8_t _spacingHoriz : 0xf;
	uint8_t _spacingVert : 0x10;
	uint8_t _outline : 0x11;
	
	//block common
	uint16_t _lineHeight : 0x14;
	uint16_t _base : 0x16;
	uint16_t _scaleW : 0x18;
	uint16_t _scaleH : 0x1a;
	uint16_t _pages : 0x1c;
	uint8_t _commonBitField : 0x1e;
	uint8_t _alphaChannel : 0x1f;
	uint8_t _redChannel : 0x20;
	uint8_t _greenChannel : 0x21;
	uint8_t _blueChannel : 0x22;
	
	uint32_t _numChars : 0x24;
	FontCharBlock* _chars : 0x28;
	vector_KerningPair _kerningPairs : 0x2c;
	std_map_CharBlocks _charsBlock : 0x40; //character mapped to it's id
	int _missingCharacter : 0x48;
} : 0x4c;
