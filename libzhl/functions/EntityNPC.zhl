
"558bec83e4f883ec30a1????????33c4894424??8b45": 
__thiscall void Entity_NPC::Morph(int EntityType,int Variant,int SubType,int Championid);

"558bec6aff68????????64a1????????5081ece8000000":
__thiscall void Entity_NPC::Render(Vector *offset);

"538bdc83ec0883e4f883c404558b6b04896c24048bec6aff68????????64a100000000505381ec88000000a1????????33c58945ec5657508d45f464a3000000008bf18975a833c08945b88945a4384308":
__thiscall void Entity_NPC::UpdateDirtColor(bool unk);

"558beca1????????83ec14":
static cleanup bool Entity_NPC::Redirect(int* EntityType<ecx>,int* Variant<edx>);

"558bec83e4f851538bd9565783bb????????007c":
__thiscall bool Entity_NPC::TryForceTarget(Entity* Target, int Duration);

"558bec6aff68????????64a1????????5081ec60010000":
__thiscall bool Entity_NPC::HandleCollision(Entity* collider, bool low);

"538bdc83ec0883e4f883c404558b6b??896c24??8bec6aff68????????64a1????????505383ec405657a1????????33c5508d45??64a3????????894d??33f6":
__thiscall void Entity_NPC::FireProjectiles(Vector* position, Vector* velocity, uint32_t mode, ProjectileParams* params);

"558bec83e4f883ec2cf30f1005????????33c0538bd9":
__thiscall Entity_Projectile* Entity_NPC::FireBossProjectiles(int32_t numProjectiles, Vector const& targetPos, float trajectoryModifier, ProjectileParams const& params);

"558bec83e4f881ec3001000056":
__thiscall Entity_Projectile* Entity_NPC::FireGridEntity(ANM2 * anm2, GridEntityDesc * desc, Vector * velocity, unsigned int backdrop);

"558bec8b81????????f30f1045":
__thiscall void Entity_NPC::PlaySound(int id, float volume, int framedelay, bool loop, float pitch);

"558bec6aff68????????64a1????????5083ec3c535657a1????????33c5508d45??64a3????????8bf1837e??35":
__thiscall Entity* Entity_NPC::GetPlayerTarget();

"558bec83ec208b81????????0f28ca":
__thiscall bool Entity_NPC::CheckPlayerProximity(Vector * pos, float margin<xmm2>);

"558beca1????????83ec34":
__thiscall void Entity_NPC::CreateBling();

"558bec83ec74a1":
__thiscall void Entity_NPC::CreateGoldParticles(unsigned int unused, unsigned int count);

"558bec5156f30f1155":
__thiscall Entity_Effect* Entity_NPC::MakeBloodCloud(Vector* pos, ColorMod * color);

"558bec83e4f883ec445356578bf9897c24??e8":
__thiscall void Entity_NPC::MakeBloodSplash();

// :uncanny:
"558bec83e4f883ec4453568b35????????8bd957f30f115424??895c24??8b86????????894424??e8????????894424??8d4424??508d4424??c74424??00000000506a0068????????538d4424??c74424??00000000508d4424??c74424??5503000050e8????????8b8e????????6a00ff7424??e8????????8bf885ff0f84????????ff15????????8b8f????????894424??8d87????????c747??00000000c747??0000000085c974??894424??81c1240300008d4424??50e8????????8d87????????ff7424??c700000000008bcf8b03ff7424??8987????????8b43??ff7424??8987????????f30f1005????????8b07ff7424??f30f1187????????f30f1005????????f30f1187????????ff50??8b96????????578b8a????????8d41??8982????????894f??8d8a????????e8????????57e8????????84c074??5157e8????????80bf????????000f84????????8b86????????3b86????????0f84????????8b47??8d8e????????8b5f":
static cleanup Entity_NPC* Entity_NPC::ThrowMaggot(Vector * origin<ecx>, Vector* velocity, float yOffset<xmm2>, float unk);

// two larger, actually
"558bec83e4f883ec4453568b35????????8bd957f30f115424??895c24??8b86????????894424??e8????????894424??8d4424??508d4424??c74424??00000000506a0068????????538d4424??c74424??00000000508d4424??c74424??5503000050e8????????8b8e????????6a00ff7424??e8????????8bf885ff0f84????????ff15????????8b8f????????894424??8d87????????c747??00000000c747??0000000085c974??894424??81c1240300008d4424??50e8????????8d87????????ff7424??c700000000008bcf8b03ff7424??8987????????8b43??ff7424??8987????????f30f1005????????8b07ff7424??f30f1187????????f30f1005????????f30f1187????????ff50??8b96????????578b8a????????8d41??8982????????894f??8d8a????????e8????????57e8????????84c074??5157e8????????80bf????????000f84????????8b86????????3b86????????0f84????????8b47??8d8e????????894424":
static cleanup Entity_NPC* Entity_NPC::ThrowMaggotAtPos(Vector * pos<ecx>, Vector* targetPos, float yOffset<xmm2>);

"558bec83ec1c5356578b3d":
static cleanup Entity_NPC* Entity_NPC::ShootMaggotProjectile(Vector* pos<ecx>, Vector* dir, float velocity<xmm2>, float yOffset);

"558bec83e4f856578bf2":
static cleanup Entity_NPC* Entity_NPC::ThrowStrider(Vector* pos<ecx>,  Entity* spanwer<edx>, Vector* targetPos);

"558bec83e4f883ec348b45??f30f115c24":
static cleanup Entity_NPC* Entity_NPC::ThrowRockSpider(Vector* pos<ecx>, Vector* targetPos<edx>, Entity* spanwer, int variant, float yPosOffset<xmm3>);

"558bec83e4f883ec0c538b1d????????5657f30f115424":
static cleanup Entity_NPC* Entity_NPC::ThrowLeech(Vector* pos<ecx>, Entity* spanwer<edx>, float yPosOffset<xmm2>, Vector* targetPos, bool big);

/*
// Minecart functions
"558bec51538bd98b8b":
__thiscall void Entity_NPC::MinecartUpdateChild(Entity * child);

"538bdc83ec0883e4f083c404558b6b??896c24??8bec81ec88000000":
__thiscall void Entity_NPC::MinecartBreak();

"558becf30f100d????????538b5d":
__thiscall void Entity_NPC::SetMinecartPosVel(Vector * pos, Vector * vel);
*/

struct Entity_NPC depends (Vector) : public Entity {
{{
	inline ColorMod* GetDirtColor() { return (ColorMod*)((char*)this + 0xBFC); }
    inline uint32_t* GetDeliriumBossType() { return (uint32_t*)((char*)this + 0xB18); }
    inline uint32_t* GetDeliriumBossVariant() { return (uint32_t*)((char*)this + 0xB1C); }
    inline uint16_t* GetDeliriumTransformationTimer() { return (uint16_t*)((char*)this + 0xB20); }
    inline uint8_t* GetDeliriumRemainingAttacks() { return (uint8_t*)((char*)this + 0xB22); }
    inline uint8_t* GetDeliriumState() { return (uint8_t*)((char*)this + 0xB23); }
    inline uint32_t* GetDeliriumAttackID() { return (uint32_t*)((char*)this + 0xB28); }
    inline uint8_t* GetDeliriumAttackAngle() { return (uint8_t*)((char*)this + 0xB2C); }
    inline uint32_t* GetDeliriumCycleID() { return (uint32_t*)((char*)this + 0xB30); }
	inline float* GetShieldStrength() { return (float*)((char*)this + 0xB90); }
	inline std_vector_uint GetHitList() { return *(std_vector_uint*)((char*)this + 0xE5C); }
	inline int32_t * GetControllerId() { return (int32_t *)((char*)this + 0xE6C); }
	inline void SetControllerId(int32_t  x) { *(int32_t *)((char*)this + 0xE6C) = x; }
}} 
    int _stateFrame : 0x360;
    int _state : 0xAB4;
    int _projectileCooldown : 0xAF0;
    int _projectileDelay : 0xAF4;
    Vector _v1 : 0xB00;
    Vector _v2 : 0xB08;
    int _i1 : 0xB10;
    int _i2 : 0xB14;
	bool _isBoss : 0xb8d;
	
    __vtable {
		skip; // Free
		skip; // Init
		skip; // PreUpdate
		skip; // Update
		skip; // Interpolate
		skip; // Render
		skip; // RenderShadowLayer
		skip; // PostRender
		skip; // TakeDamage
		skip; // Kill
		skip; // Remove
		skip; // TriggerGlowingHourglass
		skip; // GetRenderZ
		skip; // CanOverwrite
		skip; // SetColor
		skip; // SetCollisionDamage
		skip; // ClearReferences
		skip; // CanShutDoors
		skip; // IsBoss
		skip; // IsValidTarget

        override
        "558bec83e4f8518bd1":
        bool TryThrow(const EntityRef& Source, Vector* pos, float unk);

		skip; // GetForwardVector
		skip; // HandleCollision
		
		override
		"558bec81ecdc000000":
		void ResetColor();
		
		skip; // LoadEntityConfig
    };	
	
} : 0xeb0;



"568bf18b861403000085c074306a0068(????????)68":
reference void* EntityNPCRTTI;
