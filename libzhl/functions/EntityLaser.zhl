"558bec83e4f883ec2ca1????????33c4894424??5356578bf9837f??02":
__thiscall void Entity_Laser::ResetSpriteScale();

"558bec83ec60a1????????33c58945??538bd9":
__thiscall void Entity_Laser::DoDamage(Entity* entity, float damage<xmm2>);

"558bec83ec0853568b75??8bd9":
__thiscall bool Entity_Laser::CanDamageEntity(Entity* entity);

"538bdc83ec0883e4f883c404558b6b??896c24??8bec51568bf1f30f1155":
__thiscall void Entity_Laser::RotateToAngle(float angle<xmm1>, float speed<xmm2>);

"8b91????????538b99":
__thiscall void Entity_Laser::ClearLaserSamples();

"558bec6aff68????????64a1????????50515657a1????????33c5508d45??64a3????????8bf9897d??e8????????c745??000000008d8f????????c707":
__thiscall void Entity_Laser::Constructor();

struct Entity_Laser depends (BitSet128, HomingLaser) : public Entity { {{
	inline uint32_t* GetHomingType() { return &this->_homingType; }
	inline float* GetScale() { return &this->_scale; }
	
	inline int* GetTimeout() { return &this->_timeout; }
	inline bool* GetShrink() { return &this->_shrink; }
	inline bool* GetDisableFollowParent() { return &this->_disableFollowParent; }
	inline bool* GetOneHit() { return &this->_oneHit; }
	inline std_vector_uint* GetHitList() { return &this->_hitList; }

}} 
	BitSet128 _tearFlags : 0x420;
	int _timeout : 0x450;
	bool _sampleLaser : 0x455;
	bool _shrink : 0x456;
	HomingLaser _homingLaser : 0x45c;
	uint32_t _homingType : 0x4cc;
	float _scale : 0x4d8;
	bool _disableFollowParent : 0x4dc;
	bool _multidimensionalTouched: 0x4f8;
	bool _prismTouched: 0x50c;
	bool _oneHit: 0x50d;
	float _damageMultiplier : 0x514;
	std_vector_uint _hitList : 0x518;

	__vtable {
		skip; // Free
		
		override
		"558bec83e4f851535657ff75??8bf9ff75??ff75??ff75??e8????????8b87????????85c0":
		void Init(uint32_t type, uint32_t variant, uint32_t subtype, uint32_t seed);

		skip; // PreUpdate
		
		override
		"558bec6aff68????????64a1????????5081ec80000000a1????????33c58945??56":
		void Update();
		
		skip; // Interpolate
		skip; // Render
		skip; // RenderShadowLayer
		skip; // PostRender
		skip; // TakeDamage
		skip; // Kill
		
		override
		"5356578bd9e8????????8db3????????bf02000000":
		void Remove();

		skip; // TriggerGlowingHourglass
		skip; // GetRenderZ
		skip; // CanOverwrite
		skip; // SetColor
		skip; // SetCollisionDamage
		skip; // ClearReferences
		skip; // CanShutDoors
		skip; // IsBoss
		skip; // IsValidTarget
		skip; // TryThrow
		skip; // GetForwardVector
		skip; // HandleCollision
		skip; // ResetColor
		skip; // LoadEntityConfig
	};
} : 0x560;
