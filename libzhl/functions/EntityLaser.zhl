"558bec83e4f883ec2ca1????????33c4894424??5356578bf9837f??02":
__thiscall void Entity_Laser::ResetSpriteScale();

"558bec83ec58a1????????33c58945??538bd9":
__thiscall void Entity_Laser::DoDamage(Entity* entity, float damage<xmm2>);

"558bec515356578b7d??894d??8b77":
__thiscall bool Entity_Laser::CanDamageEntity(Entity* entity);

"538bdc83ec0883e4f883c404558b6b??896c24??8bec5156":
__thiscall void Entity_Laser::RotateToAngle(float angle, float speed);

"8b91????????538b99":
__thiscall void Entity_Laser::ClearLaserSamples();

"558bec6aff68????????64a1????????50515657a1????????33c5508d45??64a3????????8bf9897d??e8????????c745??000000008d8f????????c707":
__thiscall void Entity_Laser::Constructor();

struct Entity_Laser depends (BitSet128, HomingLaser) : public Entity { {{
	inline uint32_t* GetHomingType() { return (uint32_t*)((char*)this + 0x420); }
	inline float* GetScale() { return (float*)((char*)this + 0x430); }
	
	inline int* GetTimeout() { return (int*)((char*)this + 0x3a8); }
	inline bool* GetShrink() { return (bool*)((char*)this + 0x3ae); }
	inline bool* GetDisableFollowParent() { return (bool*)((char*)this + 0x434); }
	inline bool* GetOneHit() { return (bool*)((char*)this + 0x465); }
	inline std_vector_uint* GetHitList() { return (std_vector_uint*)((char*)this + 0x470); }

}} 
	BitSet128 _tearFlags : 0x378;
	bool _sampleLaser : 0x3ad;
	HomingLaser _homingLaser : 0x3b4;
	float _damageMultiplier : 0x46c;

	__vtable {
		skip; // Free
		
		override
		"558bec83e4f851535657ff75??8bf9ff75??ff75??ff75??e8????????8b87":
		void Init(uint32_t type, uint32_t variant, uint32_t subtype, uint32_t seed);

		skip; // PreUpdate
		
		override
		"558bec6aff68????????64a1????????5083ec54a1????????33c58945??5657508d45??64a3????????8bf9":
		void Update();
		
		skip; // Interpolate
		skip; // Render
		skip; // RenderShadowLayer
		skip; // PostRender
		skip; // TakeDamage
		skip; // Kill
		
		override
		"5356578bd9e8????????8db3????????bf02000000":
		void Remove();

		skip; // TriggerGlowingHourglass
		skip; // GetRenderZ
		skip; // CanOverwrite
		skip; // SetColor
		skip; // SetCollisionDamage
		skip; // ClearReferences
		skip; // CanShutDoors
		skip; // IsBoss
		skip; // IsValidTarget
		skip; // TryThrow
		skip; // GetForwardVector
		skip; // HandleCollision
		skip; // ResetColor
		skip; // LoadEntityConfig
	};
} : 0x4b8;
