{"config":{"lang":["en"],"separator":"[\\s\\-,:!=\\[\\]()\"/_]+|(?!\\b)(?=[A-Z][a-z])|\\.(?!\\d)|&[lg]t;","pipeline":["stopWordFilter"]},"docs":[{"location":"Ambush.html","title":"Global Class \"Ambush\"","text":"Info <p>You can get this class by using the <code>Ambush</code> global table.</p> <p>Note that to call these functions, you must use a <code>.</code> (period) instead of a <code>:</code> (colon)!</p> Example Code <pre><code>local currwave = Ambush.GetCurrentWave()\n</code></pre>","tags":["Global","Class"]},{"location":"Ambush.html#functions","title":"Functions","text":"","tags":["Global","Class"]},{"location":"Ambush.html#getcurrentwave","title":"GetCurrentWave ()","text":"","tags":["Global","Class"]},{"location":"Ambush.html#int-getcurrentwave","title":"int GetCurrentWave ( )","text":"<p>Returns the current wave number of the current challenge room or boss rush room.</p>","tags":["Global","Class"]},{"location":"Ambush.html#getmaxbosschallengewaves","title":"GetMaxBossChallengeWaves ()","text":"","tags":["Global","Class"]},{"location":"Ambush.html#int-getmaxbosschallengewaves","title":"int GetMaxBossChallengeWaves ( )","text":"<p>Returns the maximum amount of boss challenge room waves. </p> <p>By default, the maximum amount of challenge room waves are <code>2</code>. It's important to note that mods can modify the maximum amount of challenge room waves.</p>","tags":["Global","Class"]},{"location":"Ambush.html#getmaxbossrushwaves","title":"GetMaxBossrushWaves ()","text":"","tags":["Global","Class"]},{"location":"Ambush.html#int-getmaxbossrushwaves","title":"int GetMaxBossrushWaves ( )","text":"<p>Returns the maximum amount of boss rush waves. </p> <p>By default, the maximum amount of boss rush waves are <code>15</code>. It's important to note that mods can modify the maximum amount of boss rush waves.</p>","tags":["Global","Class"]},{"location":"Ambush.html#getmaxchallengewaves","title":"GetMaxChallengeWaves ()","text":"","tags":["Global","Class"]},{"location":"Ambush.html#int-getmaxchallengewaves","title":"int GetMaxChallengeWaves ( )","text":"<p>Returns the maximum amount of challenge room waves. </p> <p>By default, the maximum amount of challenge room waves are <code>3</code>. It's important to note that mods can modify the maximum amount of challenge room waves.</p>","tags":["Global","Class"]},{"location":"Ambush.html#getnextwave","title":"GetNextWave ()","text":"","tags":["Global","Class"]},{"location":"Ambush.html#roomconfigroom-getnextwave","title":"RoomConfigRoom GetNextWave ( )","text":"<p>Returns the RoomConfigRoom of the next challenge room wave. Calling this function outside of a challenge room will result in an error.</p>","tags":["Global","Class"]},{"location":"Ambush.html#getnextwaves","title":"GetNextWaves ()","text":"","tags":["Global","Class"]},{"location":"Ambush.html#roomconfigroom-getnextwaves","title":"RoomConfigRoom[] GetNextWaves ( )","text":"<p>Returns a table containing the RoomConfigRoom of the next challenge room waves.</p>","tags":["Global","Class"]},{"location":"Ambush.html#setmaxbosschallengewaves","title":"SetMaxBossChallengeWaves ()","text":"","tags":["Global","Class"]},{"location":"Ambush.html#void-setmaxbosschallengewaves-int-waves","title":"void SetMaxBossChallengeWaves ( int Waves )","text":"<p>Sets the maximum amount of boss challenge room waves.</p> Bug <p>Currently this value is not reset on game restart. This will be fixed as soon as we figure out how to cleanly run code on init on the C++ side!</p>","tags":["Global","Class"]},{"location":"Ambush.html#setmaxbossrushwaves","title":"SetMaxBossrushWaves ()","text":"","tags":["Global","Class"]},{"location":"Ambush.html#void-setmaxbossrushwaves-int-waves","title":"void SetMaxBossrushWaves ( int Waves )","text":"<p>Sets the maximum amount of boss rush waves. As of now, there is a maximum cap of <code>25</code> waves.</p>","tags":["Global","Class"]},{"location":"Ambush.html#setmaxchallengewaves","title":"SetMaxChallengeWaves ()","text":"","tags":["Global","Class"]},{"location":"Ambush.html#void-setmaxchallengewaves-int-waves","title":"void SetMaxChallengeWaves ( int Waves )","text":"<p>Sets the maximum amount of challenge room waves.</p> Bug <p>Currently this value is not reset on game restart. This will be fixed as soon as we figure out how to cleanly run code on init on the C++ side!</p>","tags":["Global","Class"]},{"location":"Ambush.html#spawnbossrushwave","title":"SpawnBossrushWave ()","text":"","tags":["Global","Class"]},{"location":"Ambush.html#void-spawnbossrushwave","title":"void SpawnBossrushWave ( )","text":"<p>Spawns a boss rush wave in the current room.</p> Bug <p>Calling this function will do nothing unless a boss rush has been triggered at least once during the current game session.</p>","tags":["Global","Class"]},{"location":"Ambush.html#spawnwave","title":"SpawnWave ()","text":"","tags":["Global","Class"]},{"location":"Ambush.html#void-spawnwave","title":"void SpawnWave ( )","text":"<p>Spawns a challenge room wave associated with the current floor.</p> Bug <p>Calling this function crashes the game if the current game mode is Greed or Greedier.</p> <p>The game also crashes if the current floor is Blue Womb.</p>","tags":["Global","Class"]},{"location":"Ambush.html#startchallenge","title":"StartChallenge ()","text":"","tags":["Global","Class"]},{"location":"Ambush.html#void-startchallenge","title":"void StartChallenge ( )","text":"<p>Triggers the challenge room or boss rush.</p> Bug <p>Calling this function outside of the boss rush room or a challenge room will do nothing except permanently close the doors, resulting in a softlock.</p>","tags":["Global","Class"]},{"location":"AnimationData.html","title":"Class \"AnimationData\"","text":"<p>Cached data for one animation from a loaded ANM2 file. Shared by all Sprites using the same ANM2 and cannot be modified.</p> <p>Can be obtained via Sprite:GetAnimationData(), Sprite:GetCurrentAnimationData() or Sprite:GetOverlayAnimationData().</p>","tags":["Class"]},{"location":"AnimationData.html#functions","title":"Functions","text":"","tags":["Class"]},{"location":"AnimationData.html#getalllayers","title":"GetAllLayers ()","text":"","tags":["Class"]},{"location":"AnimationData.html#animationlayer-getalllayers","title":"AnimationLayer[] GetAllLayers ( )","text":"<p>Returns a table of AnimationLayers, in order from bottom to top (NOT ordered by layer ID).</p>","tags":["Class"]},{"location":"AnimationData.html#getlayer","title":"GetLayer ()","text":"","tags":["Class"]},{"location":"AnimationData.html#animationlayer-getlayer-int-layerid","title":"AnimationLayer GetLayer ( int LayerId )","text":"<p>Gets an AnimationLayer by that layer's ID number.</p>","tags":["Class"]},{"location":"AnimationData.html#getlength","title":"GetLength ()","text":"","tags":["Class"]},{"location":"AnimationData.html#int-getlength","title":"int GetLength ( )","text":"<p>Length of this animation in frames.</p>","tags":["Class"]},{"location":"AnimationData.html#getname","title":"GetName ()","text":"","tags":["Class"]},{"location":"AnimationData.html#string-getname","title":"string GetName ( )","text":"","tags":["Class"]},{"location":"AnimationData.html#isloopinganimation","title":"IsLoopingAnimation ()","text":"","tags":["Class"]},{"location":"AnimationData.html#boolean-isloopinganimation","title":"boolean IsLoopingAnimation ( )","text":"","tags":["Class"]},{"location":"AnimationFrame.html","title":"Class \"AnimationFrame\"","text":"<p>Cached data for a single frame of one layer of an animation from an ANM2 file. Shared by all Sprites using the same ANM2 and cannot be modified.</p> <p>Note that interpolation and root animations have already been baked into these values.</p> <p>Otherwise, these values correspond to the same ones viewable in the ANM2 editor, and have been named the same way.</p> <p>Obtained via AnimationLayer:GetFrame().</p>","tags":["Class"]},{"location":"AnimationFrame.html#functions","title":"Functions","text":"","tags":["Class"]},{"location":"AnimationFrame.html#getcolor","title":"GetColor ()","text":"","tags":["Class"]},{"location":"AnimationFrame.html#const-color-getcolor","title":"const Color GetColor ( )","text":"","tags":["Class"]},{"location":"AnimationFrame.html#getcrop","title":"GetCrop ()","text":"","tags":["Class"]},{"location":"AnimationFrame.html#const-vector-getcrop","title":"const Vector GetCrop ( )","text":"","tags":["Class"]},{"location":"AnimationFrame.html#getendframe","title":"GetEndFrame ()","text":"","tags":["Class"]},{"location":"AnimationFrame.html#int-getendframe","title":"int GetEndFrame ( )","text":"<p>Note that the \"end frame\" is the start frame of the NEXT AnimationFrame.</p> <p>That is, THIS AnimationFrame is no longer shown on this frame.</p>","tags":["Class"]},{"location":"AnimationFrame.html#getheight","title":"GetHeight ()","text":"","tags":["Class"]},{"location":"AnimationFrame.html#float-getheight","title":"float GetHeight ( )","text":"","tags":["Class"]},{"location":"AnimationFrame.html#getpivot","title":"GetPivot ()","text":"","tags":["Class"]},{"location":"AnimationFrame.html#const-vector-getpivot","title":"const Vector GetPivot ( )","text":"","tags":["Class"]},{"location":"AnimationFrame.html#getpos","title":"GetPos ()","text":"","tags":["Class"]},{"location":"AnimationFrame.html#const-vector-getpos","title":"const Vector GetPos ( )","text":"","tags":["Class"]},{"location":"AnimationFrame.html#getrotation","title":"GetRotation ()","text":"","tags":["Class"]},{"location":"AnimationFrame.html#float-getrotation","title":"float GetRotation ( )","text":"","tags":["Class"]},{"location":"AnimationFrame.html#getscale","title":"GetScale ()","text":"","tags":["Class"]},{"location":"AnimationFrame.html#const-vector-getscale","title":"const Vector GetScale ( )","text":"","tags":["Class"]},{"location":"AnimationFrame.html#getstartframe","title":"GetStartFrame ()","text":"","tags":["Class"]},{"location":"AnimationFrame.html#int-getstartframe","title":"int GetStartFrame ( )","text":"","tags":["Class"]},{"location":"AnimationFrame.html#getwidth","title":"GetWidth ()","text":"","tags":["Class"]},{"location":"AnimationFrame.html#float-getwidth","title":"float GetWidth ( )","text":"","tags":["Class"]},{"location":"AnimationFrame.html#isinterpolated","title":"IsInterpolated ()","text":"","tags":["Class"]},{"location":"AnimationFrame.html#boolean-isinterpolated","title":"boolean IsInterpolated ( )","text":"","tags":["Class"]},{"location":"AnimationFrame.html#isvisible","title":"IsVisible ()","text":"","tags":["Class"]},{"location":"AnimationFrame.html#boolean-isvisible","title":"boolean IsVisible ( )","text":"","tags":["Class"]},{"location":"AnimationLayer.html","title":"Class \"AnimationLayer\"","text":"<p>Cached data for one layer of an animation from a loaded ANM2 file. Shared by all Sprites using the same ANM2 and cannot be modified.</p> <p>Obtained via AnimationData:GetLayer().</p>","tags":["Class"]},{"location":"AnimationLayer.html#functions","title":"Functions","text":"","tags":["Class"]},{"location":"AnimationLayer.html#getframe","title":"GetFrame ()","text":"","tags":["Class"]},{"location":"AnimationLayer.html#animationframe-getframe-int-frame","title":"AnimationFrame GetFrame ( int Frame )","text":"","tags":["Class"]},{"location":"AnimationLayer.html#getlayerid","title":"GetLayerID ()","text":"","tags":["Class"]},{"location":"AnimationLayer.html#int-getlayerid","title":"int GetLayerID ( )","text":"","tags":["Class"]},{"location":"AnimationLayer.html#isvisible","title":"IsVisible ()","text":"","tags":["Class"]},{"location":"AnimationLayer.html#boolean-isvisible","title":"boolean IsVisible ( )","text":"","tags":["Class"]},{"location":"Backdrop.html","title":"Class \"Backdrop\"","text":"Info <p>You can get this class by using the following functions:</p> <ul> <li>Room:GetBackdrop()</li> </ul> Example Code <pre><code>local backdrop = Game():GetRoom():GetBackdrop()\n</code></pre>","tags":["Class"]},{"location":"Backdrop.html#functions","title":"Functions","text":"","tags":["Class"]},{"location":"Backdrop.html#getcontrolsanm2","title":"GetControlsANM2 ()","text":"","tags":["Class"]},{"location":"Backdrop.html#sprite-getcontrolsanm2","title":"Sprite GetControlsANM2 ( )","text":"","tags":["Class"]},{"location":"Backdrop.html#getcontrolsbuttonsanm2","title":"GetControlsButtonsANM2 ()","text":"","tags":["Class"]},{"location":"Backdrop.html#sprite-getcontrolsbuttonsanm2","title":"Sprite GetControlsButtonsANM2 ( )","text":"","tags":["Class"]},{"location":"Backdrop.html#getdetailanm2","title":"GetDetailANM2 ()","text":"","tags":["Class"]},{"location":"Backdrop.html#sprite-getdetailanm2","title":"Sprite GetDetailANM2 ( )","text":"","tags":["Class"]},{"location":"Backdrop.html#getflooranm2","title":"GetFloorANM2 ()","text":"","tags":["Class"]},{"location":"Backdrop.html#sprite-getflooranm2","title":"Sprite GetFloorANM2 ( )","text":"","tags":["Class"]},{"location":"Backdrop.html#getfloorimage","title":"GetFloorImage ()","text":"","tags":["Class"]},{"location":"Backdrop.html#image-getfloorimage","title":"Image GetFloorImage ( )","text":"<p>Returns the buffer containing the floor texture of the current room.</p>","tags":["Class"]},{"location":"Backdrop.html#getwallimage","title":"GetWallImage ()","text":"","tags":["Class"]},{"location":"Backdrop.html#image-getwallimage","title":"Image GetWallImage ( )","text":"<p>Returns the buffer containing the wall texture of the current room.</p>","tags":["Class"]},{"location":"BossPool.html","title":"BossPool","text":"","tags":["Class"]},{"location":"BossPool.html#functions","title":"Functions","text":"","tags":["Class"]},{"location":"BossPool.html#getdoubletroubleroomid","title":"GetDoubleTroubleRoomID ()","text":"","tags":["Class"]},{"location":"BossPool.html#int-getdoubletroubleroomid","title":"int GetDoubleTroubleRoomID ( )","text":"","tags":["Class"]},{"location":"BossPool.html#getentries","title":"GetEntries ()","text":"","tags":["Class"]},{"location":"BossPool.html#int-getentries","title":"int[] GetEntries ( )","text":"<p>The table contains the following fields</p> Field Type Comment bossID BossType weight float weightAlt float achievementID Achievement","tags":["Class"]},{"location":"BossPool.html#getname","title":"GetName ()","text":"","tags":["Class"]},{"location":"BossPool.html#string-getname","title":"string GetName ( )","text":"","tags":["Class"]},{"location":"BossPool.html#getrng","title":"GetRNG ()","text":"","tags":["Class"]},{"location":"BossPool.html#rng-getrng","title":"RNG GetRNG ( )","text":"","tags":["Class"]},{"location":"BossPool.html#getweight","title":"GetWeight ()","text":"","tags":["Class"]},{"location":"BossPool.html#float-getweight","title":"float GetWeight ( )","text":"","tags":["Class"]},{"location":"BossPoolManager.html","title":"Global Class \"BossPoolManager\"","text":"Info <p>You can get this class by using the <code>BossPoolManager</code> global table.</p> <p>Note that to call these functions, you must use a <code>.</code> (period) instead of a <code>:</code> (colon)!</p> Example Code <pre><code>local bossPool = BossPoolManager.GetPool()\n</code></pre>","tags":["Global","Class"]},{"location":"BossPoolManager.html#functions","title":"Functions","text":"","tags":["Global","Class"]},{"location":"BossPoolManager.html#getpool","title":"GetPool ()","text":"","tags":["Global","Class"]},{"location":"BossPoolManager.html#bosspool-getpool-stbtype-stbtype","title":"BossPool GetPool ( StbType StbType )","text":"","tags":["Global","Class"]},{"location":"BossPoolManager.html#getremovedbosses","title":"GetRemovedBosses ()","text":"","tags":["Global","Class"]},{"location":"BossPoolManager.html#boolean-getremovedbosses","title":"boolean[] GetRemovedBosses ( )","text":"","tags":["Global","Class"]},{"location":"BossPoolManager.html#getremovedspecialbosses","title":"GetRemovedSpecialBosses ()","text":"","tags":["Global","Class"]},{"location":"BossPoolManager.html#boolean-getremovedspecialbosses","title":"boolean[] GetRemovedSpecialBosses ( )","text":"","tags":["Global","Class"]},{"location":"Camera.html","title":"Class \"Camera\"","text":"Info <p>You can get this class by using the following functions:</p> <ul> <li>Room:GetCamera()</li> </ul> Example Code <pre><code>local camera = Game():GetRoom():GetCamera()\n</code></pre>","tags":["Class"]},{"location":"Camera.html#functions","title":"Functions","text":"","tags":["Class"]},{"location":"Camera.html#isposvisible","title":"IsPosVisible ()","text":"","tags":["Class"]},{"location":"Camera.html#boolean-isposvisible-vector-pos","title":"boolean IsPosVisible ( Vector Pos )","text":"<p>Returns if the in-world position is visible to the camera.</p>","tags":["Class"]},{"location":"Camera.html#setfocusposition","title":"SetFocusPosition ()","text":"","tags":["Class"]},{"location":"Camera.html#void-setfocusposition-vector-pos","title":"void SetFocusPosition ( Vector Pos )","text":"<p>Sets the camera's current focus position, causing it to shift towards the specified position</p> <p>The camera will only move if the current room size is larger than 1x1. If the room size is 1x1 or smaller, the camera will remain stationary and this function will do nothing. </p> <p>This function must be called inside an update callback such as <code>ModCallbacks.MC_POST_UPDATE</code>, otherwise the game will override the camera's position.</p>","tags":["Class"]},{"location":"Camera.html#snaptoposition","title":"SnapToPosition ()","text":"","tags":["Class"]},{"location":"Camera.html#void-snaptoposition-vector-pos","title":"void SnapToPosition ( Vector Pos )","text":"<p>Sets the camera's position instantly to the specified position.</p> <p>The camera will only move if the current room size is larger than 1x1. If the room size is 1x1 or smaller, the camera will remain stationary and this function will do nothing.</p> <p>This function must be called inside a render callback such as <code>ModCallbacks.MC_POST_RENDER</code>, otherwise the game will override the camera's position.</p> Bug <p>This function seems to only work when Active Camera is off.</p>","tags":["Class"]},{"location":"Capsule.html","title":"Class \"Capsule\"","text":"<p>An example mod using the Capsule class can be found here.</p> Info <p>You can get this class by using the following functions:</p> <ul> <li>Entity:GetCollisionCapsule()</li> <li>Entity:GetNullCapsule()</li> </ul>","tags":["Class"]},{"location":"Capsule.html#constructors","title":"Constructors","text":"","tags":["Class"]},{"location":"Capsule.html#capsule","title":"Capsule ()","text":"","tags":["Class"]},{"location":"Capsule.html#capsule-capsule-vector-position-vector-sizemult-float-rotation-float-size","title":"Capsule Capsule ( Vector Position, Vector SizeMult, float Rotation, float Size )","text":"","tags":["Class"]},{"location":"Capsule.html#capsule-capsule-vector-position-vector-targetposition-float-size","title":"Capsule Capsule ( Vector Position, Vector TargetPosition, float Size )","text":"","tags":["Class"]},{"location":"Capsule.html#functions","title":"Functions","text":"","tags":["Class"]},{"location":"Capsule.html#collide","title":"Collide ()","text":"","tags":["Class"]},{"location":"Capsule.html#boolean-collide-capsule-capsule-vector-point","title":"boolean Collide ( Capsule Capsule, Vector Point )","text":"","tags":["Class"]},{"location":"Capsule.html#getdirection","title":"GetDirection ()","text":"","tags":["Class"]},{"location":"Capsule.html#vector-getdirection","title":"Vector GetDirection ( )","text":"","tags":["Class"]},{"location":"Capsule.html#getf1","title":"GetF1 ()","text":"","tags":["Class"]},{"location":"Capsule.html#float-getf1","title":"float GetF1 ( )","text":"<p>Returns the size of the capsule (consistent with <code>size</code> in both constructors)</p>","tags":["Class"]},{"location":"Capsule.html#getf2","title":"GetF2 ()","text":"","tags":["Class"]},{"location":"Capsule.html#float-getf2","title":"float GetF2 ( )","text":"","tags":["Class"]},{"location":"Capsule.html#getposition","title":"GetPosition ()","text":"","tags":["Class"]},{"location":"Capsule.html#vector-getposition","title":"Vector GetPosition ( )","text":"","tags":["Class"]},{"location":"Capsule.html#getvec2","title":"GetVec2 ()","text":"","tags":["Class"]},{"location":"Capsule.html#vector-getvec2","title":"Vector GetVec2 ( )","text":"<p>Returns the starting position of the capsule (can be set with <code>position</code>)</p>","tags":["Class"]},{"location":"Capsule.html#getvec3","title":"GetVec3 ()","text":"","tags":["Class"]},{"location":"Capsule.html#vector-getvec3","title":"Vector GetVec3 ( )","text":"<p>Returns the ending position of the capsule (can be set with <code>targetposition</code>)</p>","tags":["Class"]},{"location":"CcpContainer_RoomConfigSet.html","title":"Class \"RoomConfigSet\"","text":"Info <p>You can get this class by using the following function:</p> <ul> <li>RoomConfigStage.GetRoomSet()</li> </ul> Example Code <p><code>local roomConfigSet = RoomConfig.GetStage(StbType.BASEMENT):GetRoomSet(0)</code></p>","tags":["Class"],"boost":0.25},{"location":"CcpContainer_RoomConfigSet.html#operators","title":"Operators","text":"","tags":["Class"],"boost":0.25},{"location":"CcpContainer_RoomConfigSet.html#__len","title":"__len ()","text":"","tags":["Class"],"boost":0.25},{"location":"CcpContainer_RoomConfigSet.html#int-__len","title":"int __len ( )","text":"<p>The length (#) operation. Returns the amount of entities in the list.</p>","tags":["Class"],"boost":0.25},{"location":"CcpContainer_RoomConfigSet.html#functions","title":"Functions","text":"","tags":["Class"],"boost":0.25},{"location":"CcpContainer_RoomConfigSet.html#get","title":"Get ()","text":"","tags":["Class"],"boost":0.25},{"location":"CcpContainer_RoomConfigSet.html#roomconfigroom-get-int-idx","title":"RoomConfigRoom Get ( int idx )","text":"<p>Returns a RoomConfigRoom at the index of the list provided.</p>","tags":["Class"],"boost":0.25},{"location":"CcpContainer_RoomConfigSet.html#variables","title":"Variables","text":"","tags":["Class"],"boost":0.25},{"location":"CcpContainer_RoomConfigSet.html#size","title":"Size","text":"","tags":["Class"],"boost":0.25},{"location":"CcpContainer_RoomConfigSet.html#const-int-size","title":"const int Size","text":"<p>The amount of entities in the list.</p>","tags":["Class"],"boost":0.25},{"location":"ChallengeParam.html","title":"Class \"ChallengeParam\"","text":"Info <p>You can get this class by using the following functions:</p> <ul> <li>Game():GetChallengeParams()</li> <li>DailyChallenge.GetChallengeParams()</li> </ul> Example Code <pre><code>local params = Game():GetChallengeParams()\n</code></pre>","tags":["Class"]},{"location":"ChallengeParam.html#functions","title":"Functions","text":"","tags":["Class"]},{"location":"ChallengeParam.html#canshoot","title":"CanShoot ()","text":"","tags":["Class"]},{"location":"ChallengeParam.html#boolean-canshoot","title":"boolean CanShoot ( )","text":"","tags":["Class"]},{"location":"ChallengeParam.html#getachievementlist","title":"GetAchievementList ()","text":"","tags":["Class"]},{"location":"ChallengeParam.html#achievement-getachievementlist","title":"Achievement[] GetAchievementList ( )","text":"","tags":["Class"]},{"location":"ChallengeParam.html#getadddamage","title":"GetAddDamage ()","text":"","tags":["Class"]},{"location":"ChallengeParam.html#float-getadddamage","title":"float GetAddDamage ( )","text":"","tags":["Class"]},{"location":"ChallengeParam.html#getblackhearts","title":"GetBlackHearts ()","text":"","tags":["Class"]},{"location":"ChallengeParam.html#int-getblackhearts","title":"int GetBlackHearts ( )","text":"","tags":["Class"]},{"location":"ChallengeParam.html#getcoins","title":"GetCoins ()","text":"","tags":["Class"]},{"location":"ChallengeParam.html#int-getcoins","title":"int GetCoins ( )","text":"","tags":["Class"]},{"location":"ChallengeParam.html#getcollectiblelist","title":"GetCollectibleList ()","text":"","tags":["Class"]},{"location":"ChallengeParam.html#collectibletype-getcollectiblelist","title":"CollectibleType[] GetCollectibleList ( )","text":"","tags":["Class"]},{"location":"ChallengeParam.html#getcollectibletwinlist","title":"GetCollectibleTwinList ()","text":"","tags":["Class"]},{"location":"ChallengeParam.html#collectibletype-getcollectibletwinlist","title":"CollectibleType[] GetCollectibleTwinList ( )","text":"","tags":["Class"]},{"location":"ChallengeParam.html#getcurse","title":"GetCurse ()","text":"","tags":["Class"]},{"location":"ChallengeParam.html#int-getcurse","title":"int GetCurse ( )","text":"","tags":["Class"]},{"location":"ChallengeParam.html#getcursefilter","title":"GetCurseFilter ()","text":"","tags":["Class"]},{"location":"ChallengeParam.html#int-getcursefilter","title":"int GetCurseFilter ( )","text":"","tags":["Class"]},{"location":"ChallengeParam.html#getdifficulty","title":"GetDifficulty ()","text":"","tags":["Class"]},{"location":"ChallengeParam.html#difficulty-getdifficulty","title":"Difficulty GetDifficulty ( )","text":"","tags":["Class"]},{"location":"ChallengeParam.html#getendstage","title":"GetEndStage ()","text":"","tags":["Class"]},{"location":"ChallengeParam.html#levelstage-getendstage","title":"LevelStage GetEndStage ( )","text":"","tags":["Class"]},{"location":"ChallengeParam.html#gethearts","title":"GetHearts ()","text":"","tags":["Class"]},{"location":"ChallengeParam.html#int-gethearts","title":"int GetHearts ( )","text":"","tags":["Class"]},{"location":"ChallengeParam.html#getmaxhearts","title":"GetMaxHearts ()","text":"","tags":["Class"]},{"location":"ChallengeParam.html#int-getmaxhearts","title":"int GetMaxHearts ( )","text":"","tags":["Class"]},{"location":"ChallengeParam.html#getminfirerate","title":"GetMinFireRate ()","text":"","tags":["Class"]},{"location":"ChallengeParam.html#float-getminfirerate","title":"float GetMinFireRate ( )","text":"","tags":["Class"]},{"location":"ChallengeParam.html#getname","title":"GetName ()","text":"","tags":["Class"]},{"location":"ChallengeParam.html#string-getname","title":"string GetName ( )","text":"","tags":["Class"]},{"location":"ChallengeParam.html#getplayertype","title":"GetPlayerType ()","text":"","tags":["Class"]},{"location":"ChallengeParam.html#playertype-getplayertype","title":"PlayerType GetPlayerType ( )","text":"","tags":["Class"]},{"location":"ChallengeParam.html#getroomfilter","title":"GetRoomFilter ()","text":"","tags":["Class"]},{"location":"ChallengeParam.html#roomtype-getroomfilter","title":"RoomType[] GetRoomFilter ( )","text":"","tags":["Class"]},{"location":"ChallengeParam.html#getsoulhearts","title":"GetSoulHearts ()","text":"","tags":["Class"]},{"location":"ChallengeParam.html#int-getsoulhearts","title":"int GetSoulHearts ( )","text":"","tags":["Class"]},{"location":"ChallengeParam.html#getstartingcard","title":"GetStartingCard ()","text":"","tags":["Class"]},{"location":"ChallengeParam.html#card-getstartingcard","title":"Card GetStartingCard ( )","text":"","tags":["Class"]},{"location":"ChallengeParam.html#getstartingpill","title":"GetStartingPill ()","text":"","tags":["Class"]},{"location":"ChallengeParam.html#pilleffect-getstartingpill","title":"PillEffect GetStartingPill ( )","text":"","tags":["Class"]},{"location":"ChallengeParam.html#gettrinketlist","title":"GetTrinketList ()","text":"","tags":["Class"]},{"location":"ChallengeParam.html#trinkettype-gettrinketlist","title":"TrinketType[] GetTrinketList ( )","text":"","tags":["Class"]},{"location":"ChallengeParam.html#isaltpath","title":"IsAltPath ()","text":"","tags":["Class"]},{"location":"ChallengeParam.html#boolean-isaltpath","title":"boolean IsAltPath ( )","text":"","tags":["Class"]},{"location":"ChallengeParam.html#isbigrangeenabled","title":"IsBigRangeEnabled ()","text":"","tags":["Class"]},{"location":"ChallengeParam.html#boolean-isbigrangeenabled","title":"boolean IsBigRangeEnabled ( )","text":"","tags":["Class"]},{"location":"ChallengeParam.html#ismaxdamageenabled","title":"IsMaxDamageEnabled ()","text":"","tags":["Class"]},{"location":"ChallengeParam.html#boolean-ismaxdamageenabled","title":"boolean IsMaxDamageEnabled ( )","text":"","tags":["Class"]},{"location":"ChallengeParam.html#ismegasatanrun","title":"IsMegaSatanRun ()","text":"","tags":["Class"]},{"location":"ChallengeParam.html#boolean-ismegasatanrun","title":"boolean IsMegaSatanRun ( )","text":"","tags":["Class"]},{"location":"ChallengeParam.html#isminshotspeedenabled","title":"IsMinShotSpeedEnabled ()","text":"","tags":["Class"]},{"location":"ChallengeParam.html#boolean-isminshotspeedenabled","title":"boolean IsMinShotSpeedEnabled ( )","text":"","tags":["Class"]},{"location":"ChallengeParam.html#issecretpath","title":"IsSecretPath ()","text":"","tags":["Class"]},{"location":"ChallengeParam.html#boolean-issecretpath","title":"boolean IsSecretPath ( )","text":"","tags":["Class"]},{"location":"Color.html","title":"Class \"Color\"","text":"Info <p>This class can be accessed using its constructor:</p> Example Code <pre><code>local redColor = Color(1,0,0,1)\n</code></pre>","tags":["Class"]},{"location":"Color.html#modified-constructors","title":"Modified Constructors","text":"","tags":["Class"]},{"location":"Color.html#color","title":"Color ()","text":"","tags":["Class"]},{"location":"Color.html#color-color-float-r-1-float-g-1-float-b-1-float-a-1-float-ro-0-float-go-0-float-bo-0-float-rc-0-float-gc-0-float-bc-0-float-ac-0","title":"Color Color ( float R = 1, float G = 1, float B = 1, float A = 1, float RO = 0, float GO = 0, float BO = 0, float RC = 0, float GC = 0, float BC = 0, float AC = 0 )","text":"<p>All arguments are now optional. <code>Colorize</code> can now be set through the constructor.</p>","tags":["Class"]},{"location":"Color.html#functions","title":"Functions","text":"","tags":["Class"]},{"location":"Color.html#getcolorize","title":"GetColorize ()","text":"","tags":["Class"]},{"location":"Color.html#table-getcolorize","title":"table GetColorize ( )","text":"<p>Returns a table corresponding to the color's current Colorize values: <code>{R, G, B, A}</code></p>","tags":["Class"]},{"location":"Color.html#getoffset","title":"GetOffset ()","text":"","tags":["Class"]},{"location":"Color.html#table-getoffset","title":"table GetOffset ( )","text":"<p>Returns a table corresponding to the color's current Offset values: <code>{R, G, B}</code></p> <p>While the Color class does already contain .RO, .GO and .BO variables for this, GetOffset() has been measured to be ~30% faster in cases where access to all three values is necessary and is recommended in that scenario as a result. Performance is near identical when accessing two variables, and worse when accessing one. In cases where only one or two offset values are needed, stick with the variables.</p>","tags":["Class"]},{"location":"Color.html#gettint","title":"GetTint ()","text":"","tags":["Class"]},{"location":"Color.html#table-gettint","title":"table GetTint ( )","text":"<p>Returns a table corresponding to the color's current Tint values: <code>{R, G, B, A}</code></p>","tags":["Class"]},{"location":"Color.html#print","title":"Print ()","text":"","tags":["Class"]},{"location":"Color.html#string-print","title":"string Print ( )","text":"<p>Returns a string representation of the color object.</p>","tags":["Class"]},{"location":"Color.html#__tostring","title":"__tostring ()","text":"","tags":["Class"]},{"location":"Color.html#string-__tostring","title":"string __tostring ( )","text":"<p>Creates a string representation of the color object.</p> <p>This enables direct printing of the object by doing <code>print(myColorObj)</code></p>","tags":["Class"]},{"location":"Color.html#constants","title":"Constants","text":"","tags":["Class"]},{"location":"Color.html#coloremberfade","title":"Color.EmberFade","text":"","tags":["Class"]},{"location":"Color.html#color-emberfade","title":"Color EmberFade","text":"<p>Used for enemies like Crackles and Coal Spiders. This color has a hardcoded special property; gibs start orange and fade into grey.</p> Info <p>Color of (0, 0, 0, 1.1)</p> <p>Colorize of (0, 0, 0, 0)</p> <p>Offset of (1, 0.514, 0.004)</p>","tags":["Class"]},{"location":"Color.html#colorlaseralmond","title":"Color.LaserAlmond","text":"","tags":["Class"]},{"location":"Color.html#color-laseralmond","title":"Color LaserAlmond","text":"<p>Used for lasers with the Almond Milk effect.</p> Info <p>Color of (1, 1, 1, 1)</p> <p>Colorize of (5.6, 5.2, 3.8, 1)</p> <p>Offset of (0, 0, 0)</p>","tags":["Class"]},{"location":"Color.html#colorlaserchocolate","title":"Color.LaserChocolate","text":"","tags":["Class"]},{"location":"Color.html#color-laserchocolate","title":"Color LaserChocolate","text":"<p>Used for lasers with the Chocolate Milk effect.</p> Info <p>Color of (1, 1, 1, 1)</p> <p>Colorize of (3, 1.7, 1.7, 1)</p> <p>Offset of (0, 0, 0)</p>","tags":["Class"]},{"location":"Color.html#colorlasercoal","title":"Color.LaserCoal","text":"","tags":["Class"]},{"location":"Color.html#color-lasercoal","title":"Color LaserCoal","text":"<p>Used for lasers with the A Lump of Coal effect.</p> Info <p>Color of (3, 3, 3, 1)</p> <p>Colorize of (1.3, 1.2, 1.2, 1)</p> <p>Offset of (-0.5, -0.5, -0.5)</p>","tags":["Class"]},{"location":"Color.html#colorlaserfiremind","title":"Color.LaserFireMind","text":"","tags":["Class"]},{"location":"Color.html#color-laserfiremind","title":"Color LaserFireMind","text":"<p>Used for lasers fired by players with Fire Mind.</p> Info <p>Color of (1, 1, 1, 1)</p> <p>Colorize of (5, 3, 1, 1)</p> <p>Offset of (0, 0, 0)</p>","tags":["Class"]},{"location":"Color.html#colorlaserhoming","title":"Color.LaserHoming","text":"","tags":["Class"]},{"location":"Color.html#color-laserhoming","title":"Color LaserHoming","text":"<p>Used for homing lasers.</p> Info <p>Color of (1, 1, 1, 1)</p> <p>Colorize of (3, 1, 3.5, 0)</p> <p>Offset of (0, 0, 0)</p>","tags":["Class"]},{"location":"Color.html#colorlaseripecac","title":"Color.LaserIpecac","text":"","tags":["Class"]},{"location":"Color.html#color-laseripecac","title":"Color LaserIpecac","text":"<p>Used for lasers with the Ipecac effect.</p> Info <p>Color of (1, 1, 1, 1)</p> <p>Colorize of (1.8, 3, 1, 1)</p> <p>Offset of (0, 0, 0)</p>","tags":["Class"]},{"location":"Color.html#colorlasermother","title":"Color.LaserMother","text":"","tags":["Class"]},{"location":"Color.html#color-lasermother","title":"Color LaserMother","text":"<p>Used for Mother's mega laser.</p> Info <p>Color of (1, 1, 1, 1)</p> <p>Colorize of (2, 2.2, 1, 1)</p> <p>Offset of (0, 0, 0)</p>","tags":["Class"]},{"location":"Color.html#colorlasernumberone","title":"Color.LaserNumberOne","text":"","tags":["Class"]},{"location":"Color.html#color-lasernumberone","title":"Color LaserNumberOne","text":"<p>Used for lasers fired by players with Number One.</p> Info <p>Color of (1, 1, 1, 1)</p> <p>Colorize of (5, 4.9, 1, 1)</p> <p>Offset of (0, 0, 0)</p>","tags":["Class"]},{"location":"Color.html#colorlasersoy","title":"Color.LaserSoy","text":"","tags":["Class"]},{"location":"Color.html#color-lasersoy","title":"Color LaserSoy","text":"<p>Used for lasers with the Soy Milk effect.</p> Info <p>Color of (1, 1, 1, 1)</p> <p>Colorize of (5.6, 5, 4.2, 1)</p> <p>Offset of (0, 0, 0)</p>","tags":["Class"]},{"location":"Color.html#colorlaserpoison","title":"Color.LaserPoison","text":"","tags":["Class"]},{"location":"Color.html#color-laserpoison","title":"Color LaserPoison","text":"<p>Used for poisonous lasers fired by players with items like Scorpio or Common Cold.</p> Info <p>Color of (1, 1, 1, 1)</p> <p>Colorize of (1.8, 4, 1, 1)</p> <p>Offset of (0, 0, 0)</p>","tags":["Class"]},{"location":"Color.html#colorprojectilecageblue","title":"Color.ProjectileCageBlue","text":"","tags":["Class"]},{"location":"Color.html#color-projectilecageblue","title":"Color ProjectileCageBlue","text":"<p>Used for <code>ProjectileVariant.PROJECTILE_PUKE</code>s fired by The Cage.</p> Info <p>Color of (1, 1, 1, 1)</p> <p>Colorize of (0.8, 1, 0.85, 1)</p> <p>Offset of (0, 0, 0)</p>","tags":["Class"]},{"location":"Color.html#colorprojectilecorpseclusterdark","title":"Color.ProjectileCorpseClusterDark","text":"","tags":["Class"]},{"location":"Color.html#color-projectilecorpseclusterdark","title":"Color ProjectileCorpseClusterDark","text":"<p>Used for clustered <code>ProjectileVariant.PROJECTILE_NORMAL</code>s fired in Corpse by enemies like Mother.</p> Info <p>Color of (1, 1, 1, 1)</p> <p>Colorize of (0.63, 0.85, 0.32, 0)</p> <p>Offset of (0, 0, 0)</p>","tags":["Class"]},{"location":"Color.html#colorprojectilecorpseclusterlight","title":"Color.ProjectileCorpseClusterLight","text":"","tags":["Class"]},{"location":"Color.html#color-projectilecorpseclusterlight","title":"Color ProjectileCorpseClusterLight","text":"<p>Used for clustered <code>ProjectileVariant.PROJECTILE_NORMAL</code>s fired in Corpse by enemies like Mother.</p> Info <p>Color of (1, 1, 1, 1)</p> <p>Colorize of (0.63, 0.85, 0.32, 0)</p> <p>Offset of (0, 0, 0)</p>","tags":["Class"]},{"location":"Color.html#colorprojectilecorpsegreen","title":"Color.ProjectileCorpseGreen","text":"","tags":["Class"]},{"location":"Color.html#color-projectilecorpsegreen","title":"Color ProjectileCorpseGreen","text":"<p>Used for green <code>ProjectileVariant.PROJECTILE_NORMAL</code>s fired in Corpse by enemies like Mother.</p> <p>Also used for the green laser fired by Chimera.</p> Info <p>Color of (1, 1, 1, 1)</p> <p>Colorize of (1.5, 2, 1, 1)</p> <p>Offset of (0, 0, 0)</p>","tags":["Class"]},{"location":"Color.html#colorprojectilecorpsepink","title":"Color.ProjectileCorpsePink","text":"","tags":["Class"]},{"location":"Color.html#color-projectilecorpsepink","title":"Color ProjectileCorpsePink","text":"<p>Used for pink-ish white-ish <code>ProjectileVariant.PROJECTILE_NORMAL</code>s fired in Corpse by enemies like Mother.</p> Info <p>Color of (1, 1, 1, 1)</p> <p>Colorize of (4, 3.5, 3.2, 1)</p> <p>Offset of (0, 0, 0)</p>","tags":["Class"]},{"location":"Color.html#colorprojectilecorpsewhite","title":"Color.ProjectileCorpseWhite","text":"","tags":["Class"]},{"location":"Color.html#color-projectilecorpsewhite","title":"Color ProjectileCorpseWhite","text":"<p>Used for white-ish grey-ish <code>ProjectileVariant.PROJECTILE_NORMAL</code>s fired in Corpse by enemies like Mother.</p> Info <p>Color of (1, 1, 1, 1)</p> <p>Colorize of (2.7, 3, 2, 1)</p> <p>Offset of (0, 0, 0)</p>","tags":["Class"]},{"location":"Color.html#colorprojectilecorpseyellow","title":"Color.ProjectileCorpseYellow","text":"","tags":["Class"]},{"location":"Color.html#color-projectilecorpseyellow","title":"Color ProjectileCorpseYellow","text":"<p>Used for yellow <code>ProjectileVariant.PROJECTILE_NORMAL</code>s fired in Corpse by enemies like The Scourge.</p> Info <p>Color of (1, 1, 1, 1)</p> <p>Colorize of (3.5, 2.5, 1, 1)</p> <p>Offset of (0, 0, 0)</p>","tags":["Class"]},{"location":"Color.html#colorprojectilefirewave","title":"Color.ProjectileFireWave","text":"","tags":["Class"]},{"location":"Color.html#color-projectilefirewave","title":"Color ProjectileFireWave","text":"<p>Used for fire-pillar-wave-spawning <code>ProjectileVariant.PROJECTILE_NORMAL</code>s fired by enemies like Crackle.</p> Info <p>Color of (1, 1, 1, 1)</p> <p>Colorize of (0, 0, 0, 0)</p> <p>Offset of (1, 0.3, 0)</p>","tags":["Class"]},{"location":"Color.html#colorprojectilehoming","title":"Color.ProjectileHoming","text":"","tags":["Class"]},{"location":"Color.html#color-projectilehoming","title":"Color ProjectileHoming","text":"<p>Used for homing <code>ProjectileVariant.PROJECTILE_NORMAL</code>s fired by enemies like Psychic Maw.</p> Info <p>Color of (1, 1, 1, 1)</p> <p>Colorize of (0.8, 0.15, 1, 1)</p> <p>Offset of (0.26, 0.05, 0.4)</p>","tags":["Class"]},{"location":"Color.html#colorprojectilehushblue","title":"Color.ProjectileHushBlue","text":"","tags":["Class"]},{"location":"Color.html#color-projectilehushblue","title":"Color ProjectileHushBlue","text":"<p>Used for blue <code>ProjectileVariant.PROJECTILE_HUSH</code>s fired by Hush.</p> Info <p>Color of (1, 1, 1, 1)</p> <p>Colorize of (0, 0, 0, 0)</p> <p>Offset of (0, 0.2, 0.4)</p>","tags":["Class"]},{"location":"Color.html#colorprojectilehushgreen","title":"Color.ProjectileHushGreen","text":"","tags":["Class"]},{"location":"Color.html#color-projectilehushgreen","title":"Color ProjectileHushGreen","text":"<p>Used for blue <code>ProjectileVariant.PROJECTILE_HUSH</code>s fired by Hush.</p> Info <p>Color of (1, 1, 1, 1)</p> <p>Colorize of (0, 0, 0, 0)</p> <p>Offset of (0.2, 0.2, 0)</p>","tags":["Class"]},{"location":"Color.html#colorprojectilehushyellow","title":"Color.ProjectileHushYellow","text":"","tags":["Class"]},{"location":"Color.html#color-projectilehushyellow","title":"Color ProjectileHushYellow","text":"<p>Used for blue <code>ProjectileVariant.PROJECTILE_HUSH</code>s fired by Hush.</p> Info <p>Color of (1, 1, 1, 1)</p> <p>Colorize of (0, 0, 0, 0)</p> <p>Offset of (0.4, 0.2, 0)</p>","tags":["Class"]},{"location":"Color.html#colorprojectileipecac","title":"Color.ProjectileIpecac","text":"","tags":["Class"]},{"location":"Color.html#color-projectileipecac","title":"Color ProjectileIpecac","text":"<p>Used for explosive <code>ProjectileVariant.PROJECTILE_NORMAL</code>s fired by enemies like Gurgles.</p> Info <p>Color of (1, 1, 1, 1)</p> <p>Colorize of (0.4, 2, 0.5, 1)</p> <p>Offset of (0, 0, 0)</p>","tags":["Class"]},{"location":"Color.html#colorprojectilemegasatanblack","title":"Color.ProjectileMegaSatanBlack","text":"","tags":["Class"]},{"location":"Color.html#color-projectilemegasatanblack","title":"Color ProjectileMegaSatanBlack","text":"<p>Used for black <code>ProjectileVariant.PROJECTILE_NORMAL</code>s fired by Mega Satan.</p> Info <p>Color of (1, 1, 1, 1)</p> <p>Colorize of (0.6, 0.6, 0.6, 1)</p> <p>Offset of (0, 0, 0)</p>","tags":["Class"]},{"location":"Color.html#colorprojectilemegasatanwhite","title":"Color.ProjectileMegaSatanWhite","text":"","tags":["Class"]},{"location":"Color.html#color-projectilemegasatanwhite","title":"Color ProjectileMegaSatanWhite","text":"<p>Used for white <code>ProjectileVariant.PROJECTILE_NORMAL</code>s fired by Mega Satan.</p> Info <p>Color of (1, 1, 1, 1)</p> <p>Colorize of (2, 2, 2, 1)</p> <p>Offset of (0, 0, 0)</p>","tags":["Class"]},{"location":"Color.html#colorprojectilesoy","title":"Color.ProjectileSoy","text":"","tags":["Class"]},{"location":"Color.html#color-projectilesoy","title":"Color ProjectileSoy","text":"<p>Used for soy <code>ProjectileVariant.PROJECTILE_NORMAL</code>s fired by enemies like Soy Creep.</p> Info <p>Color of (1, 1, 1, 1)</p> <p>Colorize of (1, 1, 1, 1)</p> <p>Offset of (0.8, 0.7, 0.5)</p>","tags":["Class"]},{"location":"Color.html#colorprojectiletar","title":"Color.ProjectileTar","text":"","tags":["Class"]},{"location":"Color.html#color-projectiletar","title":"Color ProjectileTar","text":"<p>Used for tar <code>ProjectileVariant.PROJECTILE_NORMAL</code>s fired by enemies like Clot.</p> Info <p>Color of (1, 1, 1, 1)</p> <p>Colorize of (0.5, 0.5, 0.5, 1)</p> <p>Offset of (0, 0, 0)</p>","tags":["Class"]},{"location":"Color.html#colortearalmond","title":"Color.TearAlmond","text":"","tags":["Class"]},{"location":"Color.html#color-tearalmond","title":"Color TearAlmond","text":"<p>Used for tears fired by players with Soy Milk.</p> Info <p>Color of (1.8, 1.7, 1, 1)</p> <p>Colorize of (0, 0, 0, 0)</p> <p>Offset of (0, 0, 0)</p>","tags":["Class"]},{"location":"Color.html#colortearchocolate","title":"Color.TearChocolate","text":"","tags":["Class"]},{"location":"Color.html#color-tearchocolate","title":"Color TearChocolate","text":"<p>Used for tears fired by players with Chocolate Milk.</p> Info <p>Color of (0.33, 0.18, 0.18, 1)</p> <p>Colorize of (0, 0, 0, 0)</p> <p>Offset of (0.258824, 0.156863, 0.156863)</p>","tags":["Class"]},{"location":"Color.html#colortearcoal","title":"Color.TearCoal","text":"","tags":["Class"]},{"location":"Color.html#color-tearcoal","title":"Color TearCoal","text":"<p>Used for tears fired by players with A Lump of Coal.</p> Info <p>Color of (0.2, 0.09, 0.065, 1)</p> <p>Colorize of (0, 0, 0, 0)</p> <p>Offset of (0, 0, 0)</p>","tags":["Class"]},{"location":"Color.html#colortearcommoncold","title":"Color.TearCommonCold","text":"","tags":["Class"]},{"location":"Color.html#color-tearcommoncold","title":"Color TearCommonCold","text":"<p>Used for poison tears fired by players with Common Cold.</p> Info <p>Color of (0.4, 0.97, 0.5, 1)</p> <p>Colorize of (0, 0, 0, 0)</p> <p>Offset of (0, 0, 0)</p>","tags":["Class"]},{"location":"Color.html#colortearhoming","title":"Color.TearHoming","text":"","tags":["Class"]},{"location":"Color.html#color-tearhoming","title":"Color TearHoming","text":"<p>Used for homing tears fired by players with Spoon Bender.</p> Info <p>Color of (0.4, 0.15, 0.38, 1)</p> <p>Colorize of (0, 0, 0, 0)</p> <p>Offset of (0.278431, 0, 0.454902)</p>","tags":["Class"]},{"location":"Color.html#colortearipecac","title":"Color.TearIpecac","text":"","tags":["Class"]},{"location":"Color.html#color-tearipecac","title":"Color TearIpecac","text":"<p>Used for explosive tears fired by players with Ipecac.</p> Info <p>Color of (0.5, 0.9, 0.4, 1)</p> <p>Colorize of (0, 0, 0, 0)</p> <p>Offset of (0, 0, 0)</p>","tags":["Class"]},{"location":"Color.html#colortearnumberone","title":"Color.TearNumberOne","text":"","tags":["Class"]},{"location":"Color.html#color-tearnumberone","title":"Color TearNumberOne","text":"<p>Used for tears fired by players with Number One.</p> Info <p>Color of (1, 1, 0, 1)</p> <p>Colorize of (0, 0, 0, 0)</p> <p>Offset of (0.176471, 0.0588235, 0)</p>","tags":["Class"]},{"location":"Color.html#colortearscorpio","title":"Color.TearScorpio","text":"","tags":["Class"]},{"location":"Color.html#color-tearscorpio","title":"Color TearScorpio","text":"<p>Used for poison tears fired by players with Scorpio.</p> Info <p>Color of (0.196078, 1, 0.196078, 1)</p> <p>Colorize of (0, 0, 0, 0)</p> <p>Offset of (0, 0, 0)</p>","tags":["Class"]},{"location":"Color.html#colortearserpentskiss","title":"Color.TearSerpentsKiss","text":"","tags":["Class"]},{"location":"Color.html#color-tearserpentskiss","title":"Color TearSerpentsKiss","text":"<p>Used for poison tears fired by players with Serpent's Kiss.</p> Info <p>Color of (0.5, 0.97, 0.5, 1)</p> <p>Colorize of (0, 0, 0, 0)</p> <p>Offset of (0, 0, 0)</p>","tags":["Class"]},{"location":"Color.html#colortearsoy","title":"Color.TearSoy","text":"","tags":["Class"]},{"location":"Color.html#color-tearsoy","title":"Color TearSoy","text":"<p>Used for tears fired by players with Soy Milk.</p> Info <p>Color of (1.5, 2, 2, 1)</p> <p>Colorize of (0, 0, 0, 0)</p> <p>Offset of (0, 0, 0)</p>","tags":["Class"]},{"location":"Color.html#colorteartar","title":"Color.TearTar","text":"","tags":["Class"]},{"location":"Color.html#color-teartar","title":"Color TearTar","text":"<p>Used for tar tears fired by familiars like Little Gish.</p> Info <p>Color of (0.95, 0.8, 0.6, 1)</p> <p>Colorize of (0, 0, 0, 0)</p> <p>Offset of (-0.588235, -0.588235, -0.588235)</p>","tags":["Class"]},{"location":"ColorModifier.html","title":"Class \"ColorModifier\"","text":"<p>An example mod using the ColorModifier class can be found here.</p> Info <p>You can get this class by using its constructor:</p> Example Code <pre><code>local tintRed = ColorModifier(1,0,0,0.33,0,1)\n</code></pre>","tags":["Class"]},{"location":"ColorModifier.html#constructors","title":"Constructors","text":"","tags":["Class"]},{"location":"ColorModifier.html#colormodifier","title":"ColorModifier ()","text":"","tags":["Class"]},{"location":"ColorModifier.html#colormodifier-colormodifier-float-r-1-float-g-1-float-b-1-float-a-0-float-brightness-0-float-contrast-1","title":"ColorModifier ColorModifier ( float R = 1, float G = 1, float B = 1, float A = 0, float Brightness = 0, float Contrast = 1 )","text":"","tags":["Class"]},{"location":"ColorModifier.html#variables","title":"Variables","text":"","tags":["Class"]},{"location":"ColorModifier.html#a","title":"A","text":"","tags":["Class"]},{"location":"ColorModifier.html#float-a","title":"float A","text":"Warning <p>This acts as a strength multiplier and must be non-zero in order for RGB to have any effect!</p>","tags":["Class"]},{"location":"ColorModifier.html#b","title":"B","text":"","tags":["Class"]},{"location":"ColorModifier.html#float-b","title":"float B","text":"","tags":["Class"]},{"location":"ColorModifier.html#brightness","title":"Brightness","text":"","tags":["Class"]},{"location":"ColorModifier.html#float-brightness","title":"float Brightness","text":"","tags":["Class"]},{"location":"ColorModifier.html#contrast","title":"Contrast","text":"","tags":["Class"]},{"location":"ColorModifier.html#float-contrast","title":"float Contrast","text":"","tags":["Class"]},{"location":"ColorModifier.html#g","title":"G","text":"","tags":["Class"]},{"location":"ColorModifier.html#float-g","title":"float G","text":"","tags":["Class"]},{"location":"ColorModifier.html#r","title":"R","text":"","tags":["Class"]},{"location":"ColorModifier.html#float-r","title":"float R","text":"","tags":["Class"]},{"location":"ColorModifier.html#operators","title":"Operators","text":"","tags":["Class"]},{"location":"ColorModifier.html#__add","title":"__add ()","text":"","tags":["Class"]},{"location":"ColorModifier.html#colormodifier-__add-colormodifier-right","title":"ColorModifier __add ( ColorModifier right )","text":"<p>Defines the addition of two ColorModifier objects using the <code>+</code> operator.</p>","tags":["Class"]},{"location":"ColorModifier.html#__div","title":"__div ()","text":"","tags":["Class"]},{"location":"ColorModifier.html#colormodifier-__div-colormodifier-right","title":"ColorModifier __div ( ColorModifier right )","text":"<p>Defines the division of a ColorModifier object and a <code>float</code> using the <code>/</code> operator. The <code>ColorModifier</code> must be on the left side.</p>","tags":["Class"]},{"location":"ColorModifier.html#__eq","title":"__eq ()","text":"","tags":["Class"]},{"location":"ColorModifier.html#colormodifier-__eq-colormodifier-right","title":"ColorModifier __eq ( ColorModifier right )","text":"<p>Defines equal of two ColorModifier objects using the <code>==</code> operator.</p>","tags":["Class"]},{"location":"ColorModifier.html#__mul","title":"__mul ()","text":"","tags":["Class"]},{"location":"ColorModifier.html#colormodifier-__mul-colormodifier-right","title":"ColorModifier __mul ( ColorModifier right )","text":"<p>Defines the multiplication of a ColorModifier object and a <code>float</code> using the <code>*</code> operator. The <code>ColorModifier</code> must be on the left side.</p>","tags":["Class"]},{"location":"ColorModifier.html#__sub","title":"__sub ()","text":"","tags":["Class"]},{"location":"ColorModifier.html#colormodifier-__sub-colormodifier-right","title":"ColorModifier __sub ( ColorModifier right )","text":"<p>Defines the subtraction of two ColorModifier objects using the <code>-</code> operator.</p>","tags":["Class"]},{"location":"ColorParams.html","title":"Class \"ColorParams\"","text":"Info <p>This class can be accessed using its constructor:</p> Example Code <pre><code>local fiveSecondRedColor = ColorParams(Color(1,0,0,1),255,150,false,false)\n</code></pre>","tags":["Class"]},{"location":"ColorParams.html#constructors","title":"Constructors","text":"","tags":["Class"]},{"location":"ColorParams.html#colorparams","title":"ColorParams ()","text":"","tags":["Class"]},{"location":"ColorParams.html#colorparams-colorparams-color-color-int-priority-int-duration1-int-duration2-boolean-fadeout-boolean-shared","title":"ColorParams ColorParams ( Color color, int priority, int duration1, int duration2, boolean fadeout, boolean shared )","text":"","tags":["Class"]},{"location":"ColorParams.html#functions","title":"Functions","text":"","tags":["Class"]},{"location":"ColorParams.html#getcolor","title":"GetColor ()","text":"","tags":["Class"]},{"location":"ColorParams.html#color-getcolor","title":"Color GetColor ( )","text":"","tags":["Class"]},{"location":"ColorParams.html#getduration","title":"GetDuration ()","text":"","tags":["Class"]},{"location":"ColorParams.html#int-getduration","title":"int GetDuration ( )","text":"<p>Defines the time in update frames that these parameters should last. Has no effect on how many frames are left, but does affect fadeout speed (calculated as <code>Lifespan / Duration</code>) if <code>Fadeout</code> is enabled.</p>","tags":["Class"]},{"location":"ColorParams.html#getfadeout","title":"GetFadeout ()","text":"","tags":["Class"]},{"location":"ColorParams.html#boolean-getfadeout","title":"boolean GetFadeout ( )","text":"","tags":["Class"]},{"location":"ColorParams.html#getlifespan","title":"GetLifespan ()","text":"","tags":["Class"]},{"location":"ColorParams.html#int-getlifespan","title":"int GetLifespan ( )","text":"<p>Defines how many update frames are left before this expires. This is decremented by <code>1</code> each non-interpolation update at a rate of <code>30</code> per second. Altering this will directly effect how many frames are left before these parameters expire.</p>","tags":["Class"]},{"location":"ColorParams.html#getpriority","title":"GetPriority ()","text":"","tags":["Class"]},{"location":"ColorParams.html#int-getpriority","title":"int GetPriority ( )","text":"","tags":["Class"]},{"location":"ColorParams.html#getshared","title":"GetShared ()","text":"","tags":["Class"]},{"location":"ColorParams.html#boolean-getshared","title":"boolean GetShared ( )","text":"","tags":["Class"]},{"location":"ColorParams.html#setcolor","title":"SetColor ()","text":"","tags":["Class"]},{"location":"ColorParams.html#void-setcolor-color-color","title":"void SetColor ( Color Color )","text":"","tags":["Class"]},{"location":"ColorParams.html#setduration","title":"SetDuration ()","text":"","tags":["Class"]},{"location":"ColorParams.html#void-setduration-int-duration","title":"void SetDuration ( int Duration )","text":"","tags":["Class"]},{"location":"ColorParams.html#setfadeout","title":"SetFadeout ()","text":"","tags":["Class"]},{"location":"ColorParams.html#void-setfadeout-boolean-value","title":"void SetFadeout ( boolean Value )","text":"","tags":["Class"]},{"location":"ColorParams.html#setlifespan","title":"SetLifespan ()","text":"","tags":["Class"]},{"location":"ColorParams.html#void-setlifespan-int-duration","title":"void SetLifespan ( int Duration )","text":"","tags":["Class"]},{"location":"ColorParams.html#setpriority","title":"SetPriority ()","text":"","tags":["Class"]},{"location":"ColorParams.html#void-setpriority-int-priority","title":"void SetPriority ( int Priority )","text":"","tags":["Class"]},{"location":"ColorParams.html#setshared","title":"SetShared ()","text":"","tags":["Class"]},{"location":"ColorParams.html#void-setshared-boolean-value","title":"void SetShared ( boolean Value )","text":"","tags":["Class"]},{"location":"Console.html","title":"Global Class \"Console\"","text":"Info <p>You can get this class by using the <code>Console</code> global table.</p> <p>Note that to call these functions, you must use a <code>.</code> (period) instead of a <code>:</code> (colon)!</p> Example Code <pre><code>local cmdhistory = Console.GetCommandHistory()\n</code></pre>","tags":["Global","Class"]},{"location":"Console.html#functions","title":"Functions","text":"","tags":["Global","Class"]},{"location":"Console.html#getcommandhistory","title":"GetCommandHistory ()","text":"","tags":["Global","Class"]},{"location":"Console.html#string-getcommandhistory","title":"string[] GetCommandHistory ( )","text":"<p>Returns a table containing current command history.</p>","tags":["Global","Class"]},{"location":"Console.html#gethistory","title":"GetHistory ()","text":"","tags":["Global","Class"]},{"location":"Console.html#string-gethistory","title":"string[] GetHistory ( )","text":"<p>Returns a table containing every previous entry printed to the console this run.</p> <p>This is ordered last-to-first- the first entry will be the currently blank line awaiting user input, followed by the previous print, and so on. The last line will always be <code>Repentance Console</code>.</p>","tags":["Global","Class"]},{"location":"Console.html#pophistory","title":"PopHistory ()","text":"","tags":["Global","Class"]},{"location":"Console.html#void-pophistory-int-amount-1","title":"void PopHistory ( int Amount = 1 )","text":"<p>Removes previous lines from history. Optionally, use amount to define how many entries should be removed. The line currently awaiting user input in the console counts as a part of the history, but this is already accounted for on the C++ side.</p>","tags":["Global","Class"]},{"location":"Console.html#printerror","title":"PrintError ()","text":"","tags":["Global","Class"]},{"location":"Console.html#void-printerror-string-error","title":"void PrintError ( string Error )","text":"<p>Prints an error to the console, errors display in red text.</p>","tags":["Global","Class"]},{"location":"Console.html#printwarning","title":"PrintWarning ()","text":"","tags":["Global","Class"]},{"location":"Console.html#void-printwarning-string-warning","title":"void PrintWarning ( string Warning )","text":"<p>Prints a warning to the console, warnings display in yellow text.</p>","tags":["Global","Class"]},{"location":"Console.html#registercommand","title":"RegisterCommand ()","text":"","tags":["Global","Class"]},{"location":"Console.html#void-registercommand-string-name-string-desc-string-helptext-boolean-showonmenu-autocompletetype-type","title":"void RegisterCommand ( string Name, string Desc, string HelpText, boolean ShowOnMenu, AutocompleteType Type )","text":"<p>Registers a command in the new console. These will show up in the new console's autocomplete.</p> <ul> <li><code>Desc</code> will show when typing the <code>help</code> command.</li> <li><code>HelpText</code> will show when typing <code>help (Name)</code>.</li> <li><code>AutocompleteType</code> will make the command inherit that autocomplete type. If the command doesn't fit into any of the standard types, use <code>CUSTOM</code> combined with MC_CONSOLE_AUTOCOMPLETE to create a bespoke one for this command.</li> </ul>","tags":["Global","Class"]},{"location":"Console.html#registermacro","title":"RegisterMacro ()","text":"","tags":["Global","Class"]},{"location":"Console.html#void-registermacro-string-name-string-commands","title":"void RegisterMacro ( string Name, string[] Commands )","text":"<p>Registers a macro in the new console. These will show up in the new console's autocomplete for the <code>macro</code> command.</p> <ul> <li><code>Commands</code> is a table of strings containing the commands that should be executed, in order.</li> </ul>","tags":["Global","Class"]},{"location":"CostumeSpriteDesc.html","title":"Class \"CostumeSpriteDesc\"","text":"Info <p>You can get this class by using the following functions:</p> <ul> <li>EntityPlayer:GetCostumeSpriteDescs()</li> </ul> Example Code <pre><code>local firstCostumeDesc = Isaac.GetPlayer():GetCostumeSpriteDescs()[1]\n</code></pre>","tags":["Class"]},{"location":"CostumeSpriteDesc.html#functions","title":"Functions","text":"","tags":["Class"]},{"location":"CostumeSpriteDesc.html#canoverwritecolor","title":"CanOverwriteColor ()","text":"","tags":["Class"]},{"location":"CostumeSpriteDesc.html#boolean-canoverwritecolor","title":"boolean CanOverwriteColor ( )","text":"","tags":["Class"]},{"location":"CostumeSpriteDesc.html#getbodycolor","title":"GetBodyColor ()","text":"","tags":["Class"]},{"location":"CostumeSpriteDesc.html#int-getbodycolor","title":"int GetBodyColor ( )","text":"","tags":["Class"]},{"location":"CostumeSpriteDesc.html#getheadcolor","title":"GetHeadColor ()","text":"","tags":["Class"]},{"location":"CostumeSpriteDesc.html#int-getheadcolor","title":"int GetHeadColor ( )","text":"","tags":["Class"]},{"location":"CostumeSpriteDesc.html#getitemconfig","title":"GetItemConfig ()","text":"","tags":["Class"]},{"location":"CostumeSpriteDesc.html#itemconfig_item-getitemconfig","title":"ItemConfig_Item GetItemConfig ( )","text":"","tags":["Class"]},{"location":"CostumeSpriteDesc.html#getplayertype","title":"GetPlayerType ()","text":"","tags":["Class"]},{"location":"CostumeSpriteDesc.html#int-getplayertype","title":"int GetPlayerType ( )","text":"","tags":["Class"]},{"location":"CostumeSpriteDesc.html#getpriority","title":"GetPriority ()","text":"","tags":["Class"]},{"location":"CostumeSpriteDesc.html#int-getpriority","title":"int GetPriority ( )","text":"","tags":["Class"]},{"location":"CostumeSpriteDesc.html#getsprite","title":"GetSprite ()","text":"","tags":["Class"]},{"location":"CostumeSpriteDesc.html#sprite-getsprite","title":"Sprite GetSprite ( )","text":"<p>Returns sprite of associated to the costume.</p>","tags":["Class"]},{"location":"CostumeSpriteDesc.html#hasoverlay","title":"HasOverlay ()","text":"","tags":["Class"]},{"location":"CostumeSpriteDesc.html#boolean-hasoverlay","title":"boolean HasOverlay ( )","text":"","tags":["Class"]},{"location":"CostumeSpriteDesc.html#hasskinalt","title":"HasSkinAlt ()","text":"","tags":["Class"]},{"location":"CostumeSpriteDesc.html#boolean-hasskinalt","title":"boolean HasSkinAlt ( )","text":"","tags":["Class"]},{"location":"CostumeSpriteDesc.html#isflying","title":"IsFlying ()","text":"","tags":["Class"]},{"location":"CostumeSpriteDesc.html#boolean-isflying","title":"boolean IsFlying ( )","text":"","tags":["Class"]},{"location":"CostumeSpriteDesc.html#isitemanimplaying","title":"IsItemAnimPlaying ()","text":"","tags":["Class"]},{"location":"CostumeSpriteDesc.html#boolean-isitemanimplaying","title":"boolean IsItemAnimPlaying ( )","text":"","tags":["Class"]},{"location":"CostumeSpriteDesc.html#isitemstateonly","title":"IsItemStateOnly ()","text":"","tags":["Class"]},{"location":"CostumeSpriteDesc.html#boolean-isitemstateonly","title":"boolean IsItemStateOnly ( )","text":"","tags":["Class"]},{"location":"DailyChallenge.html","title":"Global Class \"DailyChallenge\"","text":"Info <p>You can get this class by using the <code>DailyChallenge</code> global table.</p> <p>Note that to call these functions, you must use a <code>.</code> (period) instead of a <code>:</code> (colon)!</p> Example Code <pre><code>local dailyparams = DailyChallenge.GetChallengeParams()\n</code></pre> Warning <p>This class' functions should not be called until the game fully initializes! Make sure not to try using them outside of callbacks.</p>","tags":["Global","Class"]},{"location":"DailyChallenge.html#functions","title":"Functions","text":"","tags":["Global","Class"]},{"location":"DailyChallenge.html#getchallengeparams","title":"GetChallengeParams ()","text":"","tags":["Global","Class"]},{"location":"DailyChallenge.html#challengeparam-getchallengeparams","title":"ChallengeParam GetChallengeParams ( )","text":"","tags":["Global","Class"]},{"location":"Debug.html","title":"Global Class \"Debug\"","text":"Info <p>You can get this class by using the <code>Debug</code> global table.</p> <p>Note that to call these functions, you must use a <code>.</code> (period) instead of a <code>:</code> (colon)!</p> Example Code <pre><code>local loadedFiles = Debug.ListLoadedFiles()\n</code></pre>","tags":["Global","Class"]},{"location":"Debug.html#functions","title":"Functions","text":"","tags":["Global","Class"]},{"location":"Debug.html#forceunload","title":"ForceUnload ()","text":"","tags":["Global","Class"]},{"location":"Debug.html#void-forceunload-string-modulename","title":"void ForceUnload ( string ModuleName )","text":"","tags":["Global","Class"]},{"location":"Debug.html#getsignature","title":"GetSignature ()","text":"","tags":["Global","Class"]},{"location":"Debug.html#string-getsignature-int-address","title":"string GetSignature ( int Address )","text":"","tags":["Global","Class"]},{"location":"Debug.html#listloadedfiles","title":"ListLoadedFiles ()","text":"","tags":["Global","Class"]},{"location":"Debug.html#string-listloadedfiles","title":"string[] ListLoadedFiles ( )","text":"<p>Returns a list of all files loaded into the LUA environment.</p>","tags":["Global","Class"]},{"location":"DebugRenderer.html","title":"Global Class \"DebugRenderer\"","text":"Info <p>You can get this class by using the <code>DebugRenderer</code> global table.</p> <p>Note that to call these functions, you must use a <code>.</code> (period) instead of a <code>:</code> (colon)!</p> Example Code <pre><code>local shapeone = DebugRenderer.Get(1,true)\n</code></pre>","tags":["Global","Class"]},{"location":"DebugRenderer.html#functions","title":"Functions","text":"","tags":["Global","Class"]},{"location":"DebugRenderer.html#get","title":"Get ()","text":"","tags":["Global","Class"]},{"location":"DebugRenderer.html#shape-get-int-index-boolean-unknown","title":"Shape Get ( int Index, boolean Unknown)","text":"","tags":["Global","Class"]},{"location":"EntitiesSaveState.html","title":"Class \"EntitiesSaveState\"","text":"","tags":["Class"]},{"location":"EntitiesSaveState.html#functions","title":"Functions","text":"","tags":["Class"]},{"location":"EntitiesSaveState.html#getb1","title":"GetB1 ()","text":"","tags":["Class"]},{"location":"EntitiesSaveState.html#boolean-getb1","title":"boolean GetB1 ( )","text":"","tags":["Class"]},{"location":"EntitiesSaveState.html#getb2","title":"GetB2 ()","text":"","tags":["Class"]},{"location":"EntitiesSaveState.html#boolean-getb2","title":"boolean GetB2 ( )","text":"","tags":["Class"]},{"location":"EntitiesSaveState.html#getdropseed","title":"GetDropSeed ()","text":"","tags":["Class"]},{"location":"EntitiesSaveState.html#int-getdropseed","title":"int GetDropSeed ( )","text":"","tags":["Class"]},{"location":"EntitiesSaveState.html#getf1","title":"GetF1 ()","text":"","tags":["Class"]},{"location":"EntitiesSaveState.html#float-getf1","title":"float GetF1 ( )","text":"","tags":["Class"]},{"location":"EntitiesSaveState.html#getf2","title":"GetF2 ()","text":"","tags":["Class"]},{"location":"EntitiesSaveState.html#float-getf2","title":"float GetF2 ( )","text":"","tags":["Class"]},{"location":"EntitiesSaveState.html#getgridspawnidx","title":"GetGridSpawnIdx ()","text":"","tags":["Class"]},{"location":"EntitiesSaveState.html#int-getgridspawnidx","title":"int GetGridSpawnIdx ( )","text":"","tags":["Class"]},{"location":"EntitiesSaveState.html#geti1","title":"GetI1 ()","text":"","tags":["Class"]},{"location":"EntitiesSaveState.html#int-geti1","title":"int GetI1 ( )","text":"","tags":["Class"]},{"location":"EntitiesSaveState.html#geti2","title":"GetI2 ()","text":"","tags":["Class"]},{"location":"EntitiesSaveState.html#int-geti2","title":"int GetI2 ( )","text":"<p>Used to store the charge of an active item pickup</p>","tags":["Class"]},{"location":"EntitiesSaveState.html#geti3","title":"GetI3 ()","text":"","tags":["Class"]},{"location":"EntitiesSaveState.html#int-geti3","title":"int GetI3 ( )","text":"<p>Used to store the shop price of pickups.</p>","tags":["Class"]},{"location":"EntitiesSaveState.html#geti4","title":"GetI4 ()","text":"","tags":["Class"]},{"location":"EntitiesSaveState.html#int-geti4","title":"int GetI4 ( )","text":"<p>Used to store the ShopItemId of pickups.</p>","tags":["Class"]},{"location":"EntitiesSaveState.html#geti5","title":"GetI5 ()","text":"","tags":["Class"]},{"location":"EntitiesSaveState.html#int-geti5","title":"int GetI5 ( )","text":"","tags":["Class"]},{"location":"EntitiesSaveState.html#geti6","title":"GetI6 ()","text":"","tags":["Class"]},{"location":"EntitiesSaveState.html#int-geti6","title":"int GetI6 ( )","text":"","tags":["Class"]},{"location":"EntitiesSaveState.html#geti7","title":"GetI7 ()","text":"","tags":["Class"]},{"location":"EntitiesSaveState.html#int-geti7","title":"int GetI7 ( )","text":"","tags":["Class"]},{"location":"EntitiesSaveState.html#geti8","title":"GetI8 ()","text":"","tags":["Class"]},{"location":"EntitiesSaveState.html#int-geti8","title":"int GetI8 ( )","text":"","tags":["Class"]},{"location":"EntitiesSaveState.html#getinitseed","title":"GetInitSeed ()","text":"","tags":["Class"]},{"location":"EntitiesSaveState.html#int-getinitseed","title":"int GetInitSeed ( )","text":"","tags":["Class"]},{"location":"EntitiesSaveState.html#getpos","title":"GetPos ()","text":"","tags":["Class"]},{"location":"EntitiesSaveState.html#vector-getpos","title":"Vector GetPos ( )","text":"","tags":["Class"]},{"location":"EntitiesSaveState.html#getspawnertype","title":"GetSpawnerType ()","text":"","tags":["Class"]},{"location":"EntitiesSaveState.html#entitytype-getspawnertype","title":"EntityType GetSpawnerType ( )","text":"","tags":["Class"]},{"location":"EntitiesSaveState.html#getspawnervariant","title":"GetSpawnerVariant ()","text":"","tags":["Class"]},{"location":"EntitiesSaveState.html#int-getspawnervariant","title":"int GetSpawnerVariant ( )","text":"","tags":["Class"]},{"location":"EntitiesSaveState.html#getsubtype","title":"GetSubType ()","text":"","tags":["Class"]},{"location":"EntitiesSaveState.html#int-getsubtype","title":"int GetSubType ( )","text":"","tags":["Class"]},{"location":"EntitiesSaveState.html#gettype","title":"GetType ()","text":"","tags":["Class"]},{"location":"EntitiesSaveState.html#entitytype-gettype","title":"EntityType GetType ( )","text":"","tags":["Class"]},{"location":"EntitiesSaveState.html#getu1","title":"GetU1 ()","text":"","tags":["Class"]},{"location":"EntitiesSaveState.html#int-getu1","title":"int GetU1 ( )","text":"","tags":["Class"]},{"location":"EntitiesSaveState.html#getvariant","title":"GetVariant ()","text":"","tags":["Class"]},{"location":"EntitiesSaveState.html#int-getvariant","title":"int GetVariant ( )","text":"","tags":["Class"]},{"location":"EntitiesSaveState.html#setb1","title":"SetB1 ()","text":"","tags":["Class"]},{"location":"EntitiesSaveState.html#void-setb1-boolean-b1","title":"void SetB1 ( boolean B1 )","text":"","tags":["Class"]},{"location":"EntitiesSaveState.html#setb2","title":"SetB2 ()","text":"","tags":["Class"]},{"location":"EntitiesSaveState.html#void-setb2-boolean-b2","title":"void SetB2 ( boolean B2 )","text":"","tags":["Class"]},{"location":"EntitiesSaveState.html#setf1","title":"SetF1 ()","text":"","tags":["Class"]},{"location":"EntitiesSaveState.html#void-setf1-float-num","title":"void SetF1 ( float Num )","text":"","tags":["Class"]},{"location":"EntitiesSaveState.html#setf2","title":"SetF2 ()","text":"","tags":["Class"]},{"location":"EntitiesSaveState.html#void-setf2-float-num","title":"void SetF2 ( float Num )","text":"","tags":["Class"]},{"location":"EntitiesSaveState.html#seti1","title":"SetI1 ()","text":"","tags":["Class"]},{"location":"EntitiesSaveState.html#void-seti1-int-num","title":"void SetI1 ( int Num )","text":"","tags":["Class"]},{"location":"EntitiesSaveState.html#seti2","title":"SetI2 ()","text":"","tags":["Class"]},{"location":"EntitiesSaveState.html#void-seti2-int-num","title":"void SetI2 ( int Num )","text":"<p>Used to store the charge of an active item pickup</p>","tags":["Class"]},{"location":"EntitiesSaveState.html#seti3","title":"SetI3 ()","text":"","tags":["Class"]},{"location":"EntitiesSaveState.html#void-seti3-int-num","title":"void SetI3 ( int Num )","text":"<p>Used to store the shop price of pickups.</p>","tags":["Class"]},{"location":"EntitiesSaveState.html#seti4","title":"SetI4 ()","text":"","tags":["Class"]},{"location":"EntitiesSaveState.html#void-seti4-int-num","title":"void SetI4 ( int Num )","text":"<p>Used to store the ShopItemId of pickups.</p>","tags":["Class"]},{"location":"EntitiesSaveState.html#seti5","title":"SetI5 ()","text":"","tags":["Class"]},{"location":"EntitiesSaveState.html#void-seti5-int-num","title":"void SetI5 ( int Num )","text":"","tags":["Class"]},{"location":"EntitiesSaveState.html#seti6","title":"SetI6 ()","text":"","tags":["Class"]},{"location":"EntitiesSaveState.html#void-seti6-int-num","title":"void SetI6 ( int Num )","text":"","tags":["Class"]},{"location":"EntitiesSaveState.html#seti7","title":"SetI7 ()","text":"","tags":["Class"]},{"location":"EntitiesSaveState.html#void-seti7-int-num","title":"void SetI7 ( int Num )","text":"","tags":["Class"]},{"location":"EntitiesSaveState.html#seti8","title":"SetI8 ()","text":"","tags":["Class"]},{"location":"EntitiesSaveState.html#void-seti8-int-num","title":"void SetI8 ( int Num )","text":"","tags":["Class"]},{"location":"EntitiesSaveState.html#setpos","title":"SetPos ()","text":"","tags":["Class"]},{"location":"EntitiesSaveState.html#void-setpos-vector-pos","title":"void SetPos ( Vector Pos )","text":"","tags":["Class"]},{"location":"EntitiesSaveState.html#setsubtype","title":"SetSubType ()","text":"","tags":["Class"]},{"location":"EntitiesSaveState.html#void-setsubtype-int-subtype","title":"void SetSubType ( int SubType )","text":"","tags":["Class"]},{"location":"EntitiesSaveState.html#settype","title":"SetType ()","text":"","tags":["Class"]},{"location":"EntitiesSaveState.html#void-settype-entitytype-type","title":"void SetType ( EntityType Type )","text":"","tags":["Class"]},{"location":"EntitiesSaveState.html#setu1","title":"SetU1 ()","text":"","tags":["Class"]},{"location":"EntitiesSaveState.html#void-setu1-int-num","title":"void SetU1 ( int Num )","text":"","tags":["Class"]},{"location":"EntitiesSaveState.html#setvariant","title":"SetVariant ()","text":"","tags":["Class"]},{"location":"EntitiesSaveState.html#void-setvariant-int-variant","title":"void SetVariant ( int Variant )","text":"","tags":["Class"]},{"location":"EntitiesSaveStateVector.html","title":"Class \"EntitiesSaveStateVector\"","text":"","tags":["Class"]},{"location":"EntitiesSaveStateVector.html#functions","title":"Functions","text":"","tags":["Class"]},{"location":"EntitiesSaveStateVector.html#clear","title":"Clear ()","text":"","tags":["Class"]},{"location":"EntitiesSaveStateVector.html#void-clear","title":"void Clear ( )","text":"","tags":["Class"]},{"location":"EntitiesSaveStateVector.html#functions_1","title":"Functions","text":"","tags":["Class"]},{"location":"EntitiesSaveStateVector.html#get","title":"Get ()","text":"","tags":["Class"]},{"location":"EntitiesSaveStateVector.html#entitiessavestate-get-int-index","title":"EntitiesSaveState Get ( int Index )","text":"","tags":["Class"]},{"location":"EntitiesSaveStateVector.html#getbytype","title":"GetByType ()","text":"","tags":["Class"]},{"location":"EntitiesSaveStateVector.html#entitiessavestate-getbytype-entitytype-type-int-variant-0-int-subtype-0","title":"EntitiesSaveState GetByType ( EntityType Type, int Variant = 0, int SubType = 0 )","text":"","tags":["Class"]},{"location":"EntitiesSaveStateVector.html#__len","title":"__len ()","text":"","tags":["Class"]},{"location":"EntitiesSaveStateVector.html#int-__len","title":"int __len ( )","text":"","tags":["Class"]},{"location":"Entity.html","title":"Class \"Entity\"","text":"","tags":["Class"]},{"location":"Entity.html#functions","title":"Functions","text":"","tags":["Class"]},{"location":"Entity.html#addbaited","title":"AddBaited ()","text":"","tags":["Class"]},{"location":"Entity.html#void-addbaited-entityref-source-int-duration","title":"void AddBaited ( EntityRef Source, int Duration )","text":"","tags":["Class"]},{"location":"Entity.html#addbleeding","title":"AddBleeding ()","text":"","tags":["Class"]},{"location":"Entity.html#void-addbleeding-entityref-source-int-duration","title":"void AddBleeding ( EntityRef Source, int Duration )","text":"","tags":["Class"]},{"location":"Entity.html#addbrimstonemark","title":"AddBrimstoneMark ()","text":"","tags":["Class"]},{"location":"Entity.html#void-addbrimstonemark-entityref-source-int-duration","title":"void AddBrimstoneMark ( EntityRef Source, int Duration )","text":"","tags":["Class"]},{"location":"Entity.html#addice","title":"AddIce ()","text":"","tags":["Class"]},{"location":"Entity.html#void-addice-entityref-source-int-duration","title":"void AddIce ( EntityRef Source, int Duration )","text":"","tags":["Class"]},{"location":"Entity.html#addknockback","title":"AddKnockback ()","text":"","tags":["Class"]},{"location":"Entity.html#void-addknockback-entityref-source-vector-pushdirection-int-duration-boolean-takeimpactdamage","title":"void AddKnockback ( EntityRef Source, Vector PushDirection, int Duration, boolean TakeImpactDamage )","text":"Duration info <p>The Duration has a maximum of 0.5 seconds / 15 frames.</p>","tags":["Class"]},{"location":"Entity.html#addmagnetized","title":"AddMagnetized ()","text":"","tags":["Class"]},{"location":"Entity.html#void-addmagnetized-entityref-source-int-duration","title":"void AddMagnetized ( EntityRef Source, int Duration )","text":"","tags":["Class"]},{"location":"Entity.html#addweakness","title":"AddWeakness ()","text":"","tags":["Class"]},{"location":"Entity.html#void-addweakness-entityref-source-int-duration","title":"void AddWeakness ( EntityRef Source, int Duration )","text":"","tags":["Class"]},{"location":"Entity.html#computestatuseffectduration","title":"ComputeStatusEffectDuration ()","text":"","tags":["Class"]},{"location":"Entity.html#int-computestatuseffectduration-int-initiallength-entityref-source","title":"int ComputeStatusEffectDuration ( int InitialLength, EntityRef Source )","text":"","tags":["Class"]},{"location":"Entity.html#copystatuseffects","title":"CopyStatusEffects ()","text":"","tags":["Class"]},{"location":"Entity.html#void-copystatuseffects-entity-target-boolean-overwrite-false","title":"void CopyStatusEffects ( Entity Target, boolean Overwrite = false )","text":"<p>If <code>Target</code> is left unspecified, this will recursively copy status effects to all Child Entities. <code>Overwrite</code> will additionally remove all other status effects from the target and set the properties of existing effects to match the entity.</p>","tags":["Class"]},{"location":"Entity.html#forcecollide","title":"ForceCollide ()","text":"","tags":["Class"]},{"location":"Entity.html#boolean-forcecollide-entity-entity-boolean-force","title":"boolean ForceCollide ( Entity Entity, boolean Force )","text":"<p>Returns true if the rest of the collision logic should be Skipped; either because the entities did not collide in the first place (if <code>Force</code> is false), or because one of the entities' internal collision logic decided so (which can be influenced by one of the <code>PRE_COLLISION</code> callbacks).</p> <p>if <code>Force</code> is set to false, then the game will check if the entities' EntityCollisionClass are compatible and if both entities are not Dead before triggering the collision.</p> Collision Logic Changes <p>The collision logic for some entity types changes when forced. For example: Slots do not make the player pay the regular prize for activation.</p>","tags":["Class"]},{"location":"Entity.html#getbaitedcountdown","title":"GetBaitedCountdown ()","text":"","tags":["Class"]},{"location":"Entity.html#int-getbaitedcountdown","title":"int GetBaitedCountdown ( )","text":"","tags":["Class"]},{"location":"Entity.html#getbleedingcountdown","title":"GetBleedingCountdown ()","text":"","tags":["Class"]},{"location":"Entity.html#int-getbleedingcountdown","title":"int GetBleedingCountdown ( )","text":"","tags":["Class"]},{"location":"Entity.html#getbossstatuseffectcooldown","title":"GetBossStatusEffectCooldown ()","text":"","tags":["Class"]},{"location":"Entity.html#int-getbossstatuseffectcooldown","title":"int GetBossStatusEffectCooldown ( )","text":"","tags":["Class"]},{"location":"Entity.html#getbrimstonemarkcountdown","title":"GetBrimstoneMarkCountdown ()","text":"","tags":["Class"]},{"location":"Entity.html#int-getbrimstonemarkcountdown","title":"int GetBrimstoneMarkCountdown ( )","text":"","tags":["Class"]},{"location":"Entity.html#getburncountdown","title":"GetBurnCountdown ()","text":"","tags":["Class"]},{"location":"Entity.html#int-getburncountdown","title":"int GetBurnCountdown ( )","text":"","tags":["Class"]},{"location":"Entity.html#getburndamagetimer","title":"GetBurnDamageTimer ()","text":"","tags":["Class"]},{"location":"Entity.html#int-getburndamagetimer","title":"int GetBurnDamageTimer ( )","text":"","tags":["Class"]},{"location":"Entity.html#getcharmedcountdown","title":"GetCharmedCountdown ()","text":"","tags":["Class"]},{"location":"Entity.html#int-getcharmedcountdown","title":"int GetCharmedCountdown ( )","text":"","tags":["Class"]},{"location":"Entity.html#getcollisioncapsule","title":"GetCollisionCapsule ()","text":"","tags":["Class"]},{"location":"Entity.html#capsule-getcollisioncapsule-vector-vector","title":"Capsule GetCollisionCapsule ( Vector Vector )","text":"","tags":["Class"]},{"location":"Entity.html#getcolorparams","title":"GetColorParams ()","text":"","tags":["Class"]},{"location":"Entity.html#colorparams-getcolorparams","title":"ColorParams[] GetColorParams ( )","text":"<p>Returns a table of all colors currently queued by <code>SetColor</code> alongside their parameters.</p>","tags":["Class"]},{"location":"Entity.html#getconfusioncountdown","title":"GetConfusionCountdown ()","text":"","tags":["Class"]},{"location":"Entity.html#int-getconfusioncountdown","title":"int GetConfusionCountdown ( )","text":"","tags":["Class"]},{"location":"Entity.html#getdamagecountdown","title":"GetDamageCountdown ()","text":"","tags":["Class"]},{"location":"Entity.html#int-getdamagecountdown","title":"int GetDamageCountdown ( )","text":"<p>If the entity recently took damage with the DAMAGE_COUNTDOWN DamageFlag, this returns how many more frames must pass before they can take damage with the DAMAGE_COUNTDOWN DamageFlag again.</p> <p>Note that this is NOT the same as the player's invincibility frames (<code>EntityPlayer:GetDamageCooldown()</code>). The DAMAGE_COUNTDOWN DamageFlag and this associated countdown are typically used to control how rapidly an enemy will take damage from the few sources that uses that flag, such as the the collision damage effects from the \"My Little Unicorn\", \"The Nail\", and \"The Gamekid\".</p>","tags":["Class"]},{"location":"Entity.html#getdebugshape","title":"GetDebugShape ()","text":"","tags":["Class"]},{"location":"Entity.html#shape-getdebugshape-boolean-unknown","title":"Shape GetDebugShape ( boolean Unknown )","text":"","tags":["Class"]},{"location":"Entity.html#getentityconfigentity","title":"GetEntityConfigEntity ()","text":"","tags":["Class"]},{"location":"Entity.html#entityconfigentity-getentityconfigentity","title":"EntityConfigEntity GetEntityConfigEntity ( )","text":"<p>Returns the corresponding EntityConfig entry for this entity.</p>","tags":["Class"]},{"location":"Entity.html#getfearcountdown","title":"GetFearCountdown ()","text":"","tags":["Class"]},{"location":"Entity.html#int-getfearcountdown","title":"int GetFearCountdown ( )","text":"","tags":["Class"]},{"location":"Entity.html#getfiredamagecooldown","title":"GetFireDamageCooldown ()","text":"","tags":["Class"]},{"location":"Entity.html#int-getfiredamagecooldown","title":"int GetFireDamageCooldown ( )","text":"","tags":["Class"]},{"location":"Entity.html#getfreezecountdown","title":"GetFreezeCountdown ()","text":"","tags":["Class"]},{"location":"Entity.html#int-getfreezecountdown","title":"int GetFreezeCountdown ( )","text":"","tags":["Class"]},{"location":"Entity.html#gethitlistindex","title":"GetHitListIndex ()","text":"","tags":["Class"]},{"location":"Entity.html#int-gethitlistindex","title":"int GetHitListIndex ( )","text":"","tags":["Class"]},{"location":"Entity.html#geticecountdown","title":"GetIceCountdown ()","text":"","tags":["Class"]},{"location":"Entity.html#int-geticecountdown","title":"int GetIceCountdown ( )","text":"","tags":["Class"]},{"location":"Entity.html#getknockbackcountdown","title":"GetKnockbackCountdown ()","text":"","tags":["Class"]},{"location":"Entity.html#int-getknockbackcountdown","title":"int GetKnockbackCountdown ( )","text":"","tags":["Class"]},{"location":"Entity.html#getknockbackdirection","title":"GetKnockbackDirection ()","text":"","tags":["Class"]},{"location":"Entity.html#vector-getknockbackdirection","title":"Vector GetKnockbackDirection ( )","text":"","tags":["Class"]},{"location":"Entity.html#getmagnetizedcountdown","title":"GetMagnetizedCountdown ()","text":"","tags":["Class"]},{"location":"Entity.html#int-getmagnetizedcountdown","title":"int GetMagnetizedCountdown ( )","text":"","tags":["Class"]},{"location":"Entity.html#getmidasfreezecountdown","title":"GetMidasFreezeCountdown ()","text":"","tags":["Class"]},{"location":"Entity.html#int-getmidasfreezecountdown","title":"int GetMidasFreezeCountdown ( )","text":"","tags":["Class"]},{"location":"Entity.html#getminecart","title":"GetMinecart ()","text":"","tags":["Class"]},{"location":"Entity.html#entitynpc-getminecart","title":"EntityNPC GetMinecart ( )","text":"<p>Returns the minecart the entity is riding.</p> Return behavior <p>If the entity is not riding a minecart, this function returns <code>nil</code>.</p>","tags":["Class"]},{"location":"Entity.html#getnullcapsule","title":"GetNullCapsule ()","text":"","tags":["Class"]},{"location":"Entity.html#capsule-getnullcapsule-string-nulllayername","title":"Capsule GetNullCapsule ( string NullLayerName )","text":"","tags":["Class"]},{"location":"Entity.html#getnulloffset","title":"GetNullOffset ()","text":"","tags":["Class"]},{"location":"Entity.html#vector-getnulloffset-string-nulllayername","title":"Vector GetNullOffset ( string NullLayerName )","text":"<p>Returns position of null layer mark. Alternatively returns Vector.Zero if the layer is not visible, has no frame available for the current animation, or for other unknown reasons.</p>","tags":["Class"]},{"location":"Entity.html#getpausetime","title":"GetPauseTime ()","text":"","tags":["Class"]},{"location":"Entity.html#int-getpausetime","title":"int GetPauseTime ( )","text":"","tags":["Class"]},{"location":"Entity.html#getpoisoncountdown","title":"GetPoisonCountdown ()","text":"","tags":["Class"]},{"location":"Entity.html#int-getpoisoncountdown","title":"int GetPoisonCountdown ( )","text":"","tags":["Class"]},{"location":"Entity.html#getpoisondamagetimer","title":"GetPoisonDamageTimer ()","text":"","tags":["Class"]},{"location":"Entity.html#int-getpoisondamagetimer","title":"int GetPoisonDamageTimer ( )","text":"","tags":["Class"]},{"location":"Entity.html#getposvel","title":"GetPosVel ()","text":"","tags":["Class"]},{"location":"Entity.html#posvel-getposvel","title":"PosVel GetPosVel ( )","text":"<p>Returns 2 values, both Vectors. 1st the Position of the entity, 2nd the Velocity of the entity.</p>","tags":["Class"]},{"location":"Entity.html#getpredictedtargetposition","title":"GetPredictedTargetPosition ()","text":"","tags":["Class"]},{"location":"Entity.html#vector-getpredictedtargetposition-entity-target-float-delay","title":"Vector GetPredictedTargetPosition ( Entity Target, float Delay )","text":"<p>The prediction is the target's current position plus their velocity multiplied by the distance between this and the target. <code>Delay</code> acts as a multiplier for how far ahead the prediction should be. For example, <code>1.0</code> would predict where the target's velocity would place them on the next update.</p>","tags":["Class"]},{"location":"Entity.html#getshadowsize","title":"GetShadowSize ()","text":"","tags":["Class"]},{"location":"Entity.html#float-getshadowsize","title":"float GetShadowSize ( )","text":"","tags":["Class"]},{"location":"Entity.html#getshrinkcountdown","title":"GetShrinkCountdown ()","text":"","tags":["Class"]},{"location":"Entity.html#int-getshrinkcountdown","title":"int GetShrinkCountdown ( )","text":"","tags":["Class"]},{"location":"Entity.html#getslowingcountdown","title":"GetSlowingCountdown ()","text":"","tags":["Class"]},{"location":"Entity.html#int-getslowingcountdown","title":"int GetSlowingCountdown ( )","text":"","tags":["Class"]},{"location":"Entity.html#getspeedmultiplier","title":"GetSpeedMultiplier ()","text":"","tags":["Class"]},{"location":"Entity.html#float-getspeedmultiplier","title":"float GetSpeedMultiplier ( )","text":"Depreciation notice <p>This variable is actually the Entity's time scale. A properly named replacement function will be added in a future version.</p>","tags":["Class"]},{"location":"Entity.html#gettype","title":"GetType ()","text":"","tags":["Class"]},{"location":"Entity.html#entitytype-gettype","title":"EntityType GetType ( )","text":"","tags":["Class"]},{"location":"Entity.html#getweaknesscountdown","title":"GetWeaknessCountdown ()","text":"","tags":["Class"]},{"location":"Entity.html#int-getweaknesscountdown","title":"int GetWeaknessCountdown ( )","text":"","tags":["Class"]},{"location":"Entity.html#giveminecart","title":"GiveMinecart ()","text":"","tags":["Class"]},{"location":"Entity.html#entitynpc-giveminecart-vector-position-vector-velocity","title":"EntityNPC GiveMinecart ( Vector Position, Vector Velocity )","text":"","tags":["Class"]},{"location":"Entity.html#ignoreeffectfromfriendly","title":"IgnoreEffectFromFriendly ()","text":"","tags":["Class"]},{"location":"Entity.html#boolean-ignoreeffectfromfriendly-entityref-source","title":"boolean IgnoreEffectFromFriendly ( EntityRef Source )","text":"<p>Used to determine if this entity should ignore any status effect coming from <code>Source</code>.</p>","tags":["Class"]},{"location":"Entity.html#makebloodpoof","title":"MakeBloodPoof ()","text":"","tags":["Class"]},{"location":"Entity.html#entityeffect-makebloodpoof-vector-position-selfposition-color-color-default-float-scale-10","title":"EntityEffect MakeBloodPoof ( Vector Position = self.Position, Color Color = default, float Scale = 1.0 )","text":"<p>This function spawns two blood poof effects of subtypes 3 and 4; the second of which will be the the Child of the one returned.</p>","tags":["Class"]},{"location":"Entity.html#makegroundpoof","title":"MakeGroundPoof ()","text":"","tags":["Class"]},{"location":"Entity.html#entityeffect-makegroundpoof-vector-position-selfposition-color-color-default-float-scale-10","title":"EntityEffect MakeGroundPoof ( Vector Position = self.Position, Color Color = default, float Scale = 1.0 )","text":"<p>This function spawns two dust poof effects of subtypes 1 and 2; the second of which will be the the Child of the one returned.</p>","tags":["Class"]},{"location":"Entity.html#setbaitedcountdown","title":"SetBaitedCountdown ()","text":"","tags":["Class"]},{"location":"Entity.html#void-setbaitedcountdown-int-countdown","title":"void SetBaitedCountdown ( int Countdown )","text":"","tags":["Class"]},{"location":"Entity.html#setbleedingcountdown","title":"SetBleedingCountdown ()","text":"","tags":["Class"]},{"location":"Entity.html#void-setbleedingcountdown-int-countdown","title":"void SetBleedingCountdown ( int Countdown )","text":"","tags":["Class"]},{"location":"Entity.html#setbossstatuseffectcooldown","title":"SetBossStatusEffectCooldown ()","text":"","tags":["Class"]},{"location":"Entity.html#void-setbossstatuseffectcooldown-int-cooldown","title":"void SetBossStatusEffectCooldown ( int Cooldown )","text":"","tags":["Class"]},{"location":"Entity.html#setbrimstonemarkcountdown","title":"SetBrimstoneMarkCountdown ()","text":"","tags":["Class"]},{"location":"Entity.html#void-setbrimstonemarkcountdown-int-countdown","title":"void SetBrimstoneMarkCountdown ( int Countdown )","text":"","tags":["Class"]},{"location":"Entity.html#setburncountdown","title":"SetBurnCountdown ()","text":"","tags":["Class"]},{"location":"Entity.html#void-setburncountdown-int-countdown","title":"void SetBurnCountdown ( int Countdown )","text":"","tags":["Class"]},{"location":"Entity.html#setburndamagetimer","title":"SetBurnDamageTimer ()","text":"","tags":["Class"]},{"location":"Entity.html#void-setburndamagetimer-int-timer","title":"void SetBurnDamageTimer ( int Timer )","text":"","tags":["Class"]},{"location":"Entity.html#setcharmedcountdown","title":"SetCharmedCountdown ()","text":"","tags":["Class"]},{"location":"Entity.html#void-setcharmedcountdown-int-countdown","title":"void SetCharmedCountdown ( int Countdown )","text":"","tags":["Class"]},{"location":"Entity.html#setcolorparams","title":"SetColorParams ()","text":"","tags":["Class"]},{"location":"Entity.html#void-setcolorparams-colorparams-params","title":"void SetColorParams ( ColorParams[] Params )","text":"<p>Sets colors to be used alongside their parameters.</p>","tags":["Class"]},{"location":"Entity.html#setconfusioncountdown","title":"SetConfusionCountdown ()","text":"","tags":["Class"]},{"location":"Entity.html#void-setconfusioncountdown-int-countdown","title":"void SetConfusionCountdown ( int Countdown )","text":"","tags":["Class"]},{"location":"Entity.html#setdamagecountdown","title":"SetDamageCountdown ()","text":"","tags":["Class"]},{"location":"Entity.html#void-setdamagecountdown-int-countdown","title":"void SetDamageCountdown ( int countdown )","text":"<p>Sets how many frames must pass before the entity can take damage that has the DAMAGE_COUNTDOWN DamageFlag.</p> <p>Note that this is NOT the same as the player's invincibility frames (<code>EntityPlayer:GetDamageCooldown()</code>). The DAMAGE_COUNTDOWN DamageFlag and this associated countdown are typically used to control how rapidly an enemy will take damage from the few sources that uses that flag, such as the the collision damage effects from the \"My Little Unicorn\", \"The Nail\", and \"The Gamekid\".</p>","tags":["Class"]},{"location":"Entity.html#setdead","title":"SetDead ()","text":"","tags":["Class"]},{"location":"Entity.html#void-setdead-boolean-isdead","title":"void SetDead ( boolean IsDead )","text":"","tags":["Class"]},{"location":"Entity.html#setfearcountdown","title":"SetFearCountdown ()","text":"","tags":["Class"]},{"location":"Entity.html#void-setfearcountdown-int-countdown","title":"void SetFearCountdown ( int Countdown )","text":"","tags":["Class"]},{"location":"Entity.html#setfiredamagecooldown","title":"SetFireDamageCooldown ()","text":"","tags":["Class"]},{"location":"Entity.html#void-setfiredamagecooldown-int-cooldown","title":"void SetFireDamageCooldown ( int Cooldown )","text":"","tags":["Class"]},{"location":"Entity.html#setfreezecountdown","title":"SetFreezeCountdown ()","text":"","tags":["Class"]},{"location":"Entity.html#void-setfreezecountdown-int-countdown","title":"void SetFreezeCountdown ( int Countdown )","text":"","tags":["Class"]},{"location":"Entity.html#seticecountdown","title":"SetIceCountdown ()","text":"","tags":["Class"]},{"location":"Entity.html#void-seticecountdown-int-countdown","title":"void SetIceCountdown ( int Countdown )","text":"","tags":["Class"]},{"location":"Entity.html#setinvincible","title":"SetInvincible ()","text":"","tags":["Class"]},{"location":"Entity.html#void-setinvincible-boolean-isinvincible","title":"void SetInvincible ( boolean IsInvincible )","text":"","tags":["Class"]},{"location":"Entity.html#setknockbackcountdown","title":"SetKnockbackCountdown ()","text":"","tags":["Class"]},{"location":"Entity.html#void-setknockbackcountdown-int-countdown","title":"void SetKnockbackCountdown ( int Countdown )","text":"","tags":["Class"]},{"location":"Entity.html#setknockbackdirection","title":"SetKnockbackDirection ()","text":"","tags":["Class"]},{"location":"Entity.html#void-setknockbackdirection-vector-direction","title":"void SetKnockbackDirection ( Vector Direction )","text":"","tags":["Class"]},{"location":"Entity.html#setmagnetizedcountdown","title":"SetMagnetizedCountdown ()","text":"","tags":["Class"]},{"location":"Entity.html#void-setmagnetizedcountdown-int-countdown","title":"void SetMagnetizedCountdown ( int Countdown )","text":"","tags":["Class"]},{"location":"Entity.html#setmidasfreezecountdown","title":"SetMidasFreezeCountdown ()","text":"","tags":["Class"]},{"location":"Entity.html#void-setmidasfreezecountdown-int-countdown","title":"void SetMidasFreezeCountdown ( int Countdown )","text":"","tags":["Class"]},{"location":"Entity.html#setpausetime","title":"SetPauseTime ()","text":"","tags":["Class"]},{"location":"Entity.html#void-setpausetime-int-duration","title":"void SetPauseTime ( int Duration )","text":"","tags":["Class"]},{"location":"Entity.html#setpoisoncountdown","title":"SetPoisonCountdown ()","text":"","tags":["Class"]},{"location":"Entity.html#void-setpoisoncountdown-int-countdown","title":"void SetPoisonCountdown ( int Countdown )","text":"","tags":["Class"]},{"location":"Entity.html#setpoisondamagetimer","title":"SetPoisonDamageTimer ()","text":"","tags":["Class"]},{"location":"Entity.html#void-setpoisondamagetimer-int-timer","title":"void SetPoisonDamageTimer ( int Timer )","text":"","tags":["Class"]},{"location":"Entity.html#setshadowsize","title":"SetShadowSize ()","text":"","tags":["Class"]},{"location":"Entity.html#float-setshadowsize-float-size","title":"float SetShadowSize ( float Size )","text":"","tags":["Class"]},{"location":"Entity.html#setshrinkcountdown","title":"SetShrinkCountdown ()","text":"","tags":["Class"]},{"location":"Entity.html#void-setshrinkcountdown-int-countdown","title":"void SetShrinkCountdown ( int Countdown )","text":"","tags":["Class"]},{"location":"Entity.html#setslowingcountdown","title":"SetSlowingCountdown ()","text":"","tags":["Class"]},{"location":"Entity.html#void-setslowingcountdown-int-countdown","title":"void SetSlowingCountdown ( int Countdown )","text":"","tags":["Class"]},{"location":"Entity.html#setspeedmultiplier","title":"SetSpeedMultiplier ()","text":"","tags":["Class"]},{"location":"Entity.html#void-setspeedmultiplier-float-amount","title":"void SetSpeedMultiplier ( float Amount )","text":"Depreciation notice <p>This variable is actually the Entity's time scale. A properly named replacement function will be added in a future version.</p>","tags":["Class"]},{"location":"Entity.html#setweaknesscountdown","title":"SetWeaknessCountdown ()","text":"","tags":["Class"]},{"location":"Entity.html#void-setweaknesscountdown-int-countdown","title":"void SetWeaknessCountdown ( int Countdown )","text":"","tags":["Class"]},{"location":"Entity.html#spawnbloodeffect","title":"SpawnBloodEffect ()","text":"","tags":["Class"]},{"location":"Entity.html#entityeffect-spawnbloodeffect-int-subtype-0-vector-position-selfposition-vector-offset-vectorzero-color-color-default-vector-velocity-vectorzero","title":"EntityEffect SpawnBloodEffect ( int SubType = 0, Vector position = self.Position, Vector Offset = Vector.Zero, Color Color = Default, Vector Velocity = Vector.Zero )","text":"","tags":["Class"]},{"location":"Entity.html#spawnwaterimpacteffects","title":"SpawnWaterImpactEffects ()","text":"","tags":["Class"]},{"location":"Entity.html#void-spawnwaterimpacteffects-vector-position-vector-velocity-vectorzero-float-strength","title":"void SpawnWaterImpactEffects ( Vector Position, Vector Velocity = Vector.Zero, float Strength )","text":"Warning <p>This function will only spawn effects if the Room's water amount is above or equal to <code>0.2</code>.</p>","tags":["Class"]},{"location":"Entity.html#teleporttorandomposition","title":"TeleportToRandomPosition ()","text":"","tags":["Class"]},{"location":"Entity.html#void-teleporttorandomposition","title":"void TeleportToRandomPosition ( )","text":"","tags":["Class"]},{"location":"Entity.html#todelirium","title":"ToDelirium ()","text":"","tags":["Class"]},{"location":"Entity.html#entitydelirium-todelirium","title":"EntityDelirium ToDelirium ( )","text":"<p>Convert an Entity userdata to an EntityDelirium userdata. The conversion will only succeed if the source entity is an instance of Delirium (in its normal form or in a transformed form).</p> Return behavior <p>If the conversion fails, this function returns <code>nil</code>.</p>","tags":["Class"]},{"location":"Entity.html#toslot","title":"ToSlot ()","text":"","tags":["Class"]},{"location":"Entity.html#entityslot-toslot","title":"EntitySlot ToSlot ( )","text":"<p>Used to cast an Entity object to an EntitySlot object.</p> Return behavior <p>If the conversion is not successful, this function returns <code>nil</code>.</p>","tags":["Class"]},{"location":"Entity.html#trythrow","title":"TryThrow ()","text":"","tags":["Class"]},{"location":"Entity.html#boolean-trythrow-entityref-source-vector-throwdirection-float-force","title":"boolean TryThrow ( EntityRef Source, Vector ThrowDirection, float Force )","text":"","tags":["Class"]},{"location":"EntityBomb.html","title":"Class \"EntityBomb\"","text":"","tags":["Class"]},{"location":"EntityBomb.html#class-diagram","title":"Class Diagram","text":"<pre><code>    classDiagram\n    class Entity:::diagramCurrentPage\n    class EntityBomb\n    class EntityEffect\n    class EntityFamiliar\n    class EntityKnife\n    class EntityLaser\n    class EntityNPC\n    class EntityPickup\n    class EntityPlayer\n    class EntityProjectile\n    class EntitySlot\n    class EntityTear\n    Entity &lt;|-- EntityBomb\n    Entity &lt;|-- EntityEffect\n    Entity &lt;|-- EntityFamiliar\n    Entity &lt;|-- EntityKnife\n    Entity &lt;|-- EntityLaser\n    Entity &lt;|-- EntityNPC\n    Entity &lt;|-- EntityPickup\n    Entity &lt;|-- EntityPlayer\n    Entity &lt;|-- EntityProjectile\n    Entity &lt;|-- EntitySlot\n    Entity &lt;|-- EntityTear\n    link Entity \"https://wofsauge.github.io/IsaacDocs/rep/Entity.html\" \"Go to page for 'Entity' class\"\n    link EntityBomb \"https://wofsauge.github.io/IsaacDocs/rep/EntityBomb.html\" \"Go to page for 'EntityBomb' class\"\n    link EntityEffect \"https://wofsauge.github.io/IsaacDocs/rep/EntityEffect.html\" \"Go to page for 'EntityEffect' class\"\n    link EntityFamiliar \"https://wofsauge.github.io/IsaacDocs/rep/EntityFamiliar.html\" \"Go to page for 'EntityFamiliar' class\"\n    link EntityKnife \"https://wofsauge.github.io/IsaacDocs/rep/EntityKnife.html\" \"Go to page for 'EntityKnife' class\"\n    link EntityLaser \"EntityLaser.html\" \"Go to page for 'EntityLaser' class\"\n    link EntityNPC \"EntityNPC.html\" \"Go to page for 'EntityNPC' class\"\n    link EntityPickup \"EntityPickup.html\" \"Go to page for 'EntityPickup' class\"\n    link EntityPlayer \"EntityPlayer.html\" \"Go to page for 'EntityPlayer' class\"\n    link EntityProjectile \"https://wofsauge.github.io/IsaacDocs/rep/EntityProjectile.html\" \"Go to page for 'EntityProjectile' class\"\n    link EntitySlot \"EntitySlot.html\" \"Go to page for 'EntitySlot' class\"\n    link EntityTear \"https://wofsauge.github.io/IsaacDocs/rep/EntityTear.html\" \"Go to page for 'EntityTear' class\"</code></pre>","tags":["Class"]},{"location":"EntityBomb.html#functions","title":"Functions","text":"","tags":["Class"]},{"location":"EntityBomb.html#getcostumelayersprite","title":"GetCostumeLayerSprite ()","text":"","tags":["Class"]},{"location":"EntityBomb.html#sprite-getcostumelayersprite-bombcostumelayer-layerid","title":"Sprite GetCostumeLayerSprite ( BombCostumeLayer LayerID )","text":"","tags":["Class"]},{"location":"EntityBomb.html#getexplosioncountdown","title":"GetExplosionCountdown ()","text":"","tags":["Class"]},{"location":"EntityBomb.html#int-getexplosioncountdown","title":"int GetExplosionCountdown ( )","text":"","tags":["Class"]},{"location":"EntityBomb.html#getfallingspeed","title":"GetFallingSpeed ()","text":"","tags":["Class"]},{"location":"EntityBomb.html#float-getfallingspeed","title":"float GetFallingSpeed ( )","text":"","tags":["Class"]},{"location":"EntityBomb.html#getheight","title":"GetHeight ()","text":"","tags":["Class"]},{"location":"EntityBomb.html#float-getheight","title":"float GetHeight ( )","text":"","tags":["Class"]},{"location":"EntityBomb.html#gethitlist","title":"GetHitList ()","text":"","tags":["Class"]},{"location":"EntityBomb.html#int-gethitlist","title":"int[] GetHitList ( )","text":"","tags":["Class"]},{"location":"EntityBomb.html#getrocketangle","title":"GetRocketAngle ()","text":"","tags":["Class"]},{"location":"EntityBomb.html#float-getrocketangle","title":"float GetRocketAngle ( )","text":"<p>Target angle for rocket bombs. It influences both their movement and the orientation of their sprite.</p>","tags":["Class"]},{"location":"EntityBomb.html#getrocketspeed","title":"GetRocketSpeed ()","text":"","tags":["Class"]},{"location":"EntityBomb.html#float-getrocketspeed","title":"float GetRocketSpeed ( )","text":"<p>Target speed for rocket bombs. Naturally increases by 1 every frame.</p>","tags":["Class"]},{"location":"EntityBomb.html#getscale","title":"GetScale ()","text":"","tags":["Class"]},{"location":"EntityBomb.html#float-getscale","title":"float GetScale ( )","text":"<p>Used to apply animation set for bomb costume.</p>","tags":["Class"]},{"location":"EntityBomb.html#isloadingcostumes","title":"IsLoadingCostumes ()","text":"","tags":["Class"]},{"location":"EntityBomb.html#boolean-isloadingcostumes","title":"boolean IsLoadingCostumes ( )","text":"","tags":["Class"]},{"location":"EntityBomb.html#isprismtouched","title":"IsPrismTouched ()","text":"","tags":["Class"]},{"location":"EntityBomb.html#boolean-isprismtouched","title":"boolean IsPrismTouched ( )","text":"<p>Returns if the bomb was created through the Angelic Prism effect.</p>","tags":["Class"]},{"location":"EntityBomb.html#setfallingspeed","title":"SetFallingSpeed ()","text":"","tags":["Class"]},{"location":"EntityBomb.html#void-setfallingspeed-float-speed","title":"void SetFallingSpeed ( float Speed )","text":"","tags":["Class"]},{"location":"EntityBomb.html#setheight","title":"SetHeight ()","text":"","tags":["Class"]},{"location":"EntityBomb.html#void-setheight-float-height","title":"void SetHeight ( float Height )","text":"","tags":["Class"]},{"location":"EntityBomb.html#setloadcostumes","title":"SetLoadCostumes ()","text":"","tags":["Class"]},{"location":"EntityBomb.html#void-setloadcostumes-boolean-load-true","title":"void SetLoadCostumes ( boolean Load = true )","text":"","tags":["Class"]},{"location":"EntityBomb.html#setprismtouched","title":"SetPrismTouched ()","text":"","tags":["Class"]},{"location":"EntityBomb.html#void-setprismtouched-boolean-istouched","title":"void SetPrismTouched ( boolean IsTouched )","text":"<p>Sets if the bomb was created through the Angelic Prism effect.</p>","tags":["Class"]},{"location":"EntityBomb.html#setrocketangle","title":"SetRocketAngle ()","text":"","tags":["Class"]},{"location":"EntityBomb.html#void-setrocketangle-float-angle","title":"void SetRocketAngle ( float Angle )","text":"<p>Set the target angle for a rocket bomb. It influences both their movement and the orientation of their sprite.</p>","tags":["Class"]},{"location":"EntityBomb.html#setrocketspeed","title":"SetRocketSpeed ()","text":"","tags":["Class"]},{"location":"EntityBomb.html#void-setrocketspeed-float-speed","title":"void SetRocketSpeed ( float Speed )","text":"<p>Set the target speed for a rocket bomb. Note that this will naturally increase by 1 every frame.</p>","tags":["Class"]},{"location":"EntityBomb.html#setscale","title":"SetScale ()","text":"","tags":["Class"]},{"location":"EntityBomb.html#void-setscale-float-scale","title":"void SetScale ( float Scale )","text":"<p>Should be used with SetLoadCostumes method.</p>","tags":["Class"]},{"location":"EntityBomb.html#updatedirtcolor","title":"UpdateDirtColor ()","text":"","tags":["Class"]},{"location":"EntityBomb.html#void-updatedirtcolor","title":"void UpdateDirtColor ( )","text":"","tags":["Class"]},{"location":"EntityConfig.html","title":"Global Class \"EntityConfig\"","text":"Info <p>These functions can be accessed via the <code>EntityConfig</code> global table.</p> <p>Note that to call these functions, you must use a <code>.</code> (period) instead of a <code>:</code> (colon)!</p> Example Code <pre><code>local gaperConfig = EntityConfig.GetEntity(EntityType.ENTITY_GAPER)\n</code></pre>","tags":["Global","Class"]},{"location":"EntityConfig.html#functions","title":"Functions","text":"","tags":["Global","Class"]},{"location":"EntityConfig.html#getbaby","title":"GetBaby ()","text":"","tags":["Global","Class"]},{"location":"EntityConfig.html#entityconfigbaby-getbaby-babysubtype-type","title":"EntityConfigBaby GetBaby ( BabySubType Type )","text":"<p>Returns nil if there is no co-op baby with the given ID.</p>","tags":["Global","Class"]},{"location":"EntityConfig.html#getentity","title":"GetEntity ()","text":"","tags":["Global","Class"]},{"location":"EntityConfig.html#entityconfigentity-getentity-entitytype-type-int-variant-1-int-subtype-1","title":"EntityConfigEntity GetEntity ( EntityType Type, int Variant = -1, int SubType = -1 )","text":"<p>Returns nil if no entity exists with the specified Type.</p> <p>Providing Variant and/or SubType is optional. If a non-existent Variant/SubType is requested, returns the base version of that entity.</p>","tags":["Global","Class"]},{"location":"EntityConfig.html#getmaxbabyid","title":"GetMaxBabyID ()","text":"","tags":["Global","Class"]},{"location":"EntityConfig.html#int-getmaxbabyid","title":"int GetMaxBabyID ( )","text":"<p>Returns the highest ID (corresponds to SubType) currently assigned to a valid co-op baby.</p>","tags":["Global","Class"]},{"location":"EntityConfig.html#getmaxplayertype","title":"GetMaxPlayerType ()","text":"","tags":["Global","Class"]},{"location":"EntityConfig.html#int-getmaxplayertype","title":"int GetMaxPlayerType ( )","text":"<p>Returns the highest PlayerType currently assigned to a valid character.</p>","tags":["Global","Class"]},{"location":"EntityConfig.html#getplayer","title":"GetPlayer ()","text":"","tags":["Global","Class"]},{"location":"EntityConfig.html#entityconfigplayer-getplayer-playertype-playertype","title":"EntityConfigPlayer GetPlayer ( PlayerType PlayerType )","text":"<p>Returns nil if no character exists with the specified PlayerType.</p>","tags":["Global","Class"]},{"location":"EntityConfigBaby.html","title":"Class \"EntityConfigBaby\"","text":"Info <p>You can get this class by using the following functions:</p> <ul> <li>EntityConfig.GetBaby()</li> </ul> Example Code <pre><code>local bloatBabyConfig = EntityConfig.GetBaby(BabySubType.BABY_BLOAT)\n</code></pre>","tags":["Class"]},{"location":"EntityConfigBaby.html#functions","title":"Functions","text":"","tags":["Class"]},{"location":"EntityConfigBaby.html#getachievementid","title":"GetAchievementID ()","text":"","tags":["Class"]},{"location":"EntityConfigBaby.html#achievement-getachievementid","title":"Achievement GetAchievementID ( )","text":"","tags":["Class"]},{"location":"EntityConfigBaby.html#getid","title":"GetID ()","text":"","tags":["Class"]},{"location":"EntityConfigBaby.html#babysubtype-getid","title":"BabySubType GetID ( )","text":"","tags":["Class"]},{"location":"EntityConfigBaby.html#getname","title":"GetName ()","text":"","tags":["Class"]},{"location":"EntityConfigBaby.html#string-getname","title":"string GetName ( )","text":"","tags":["Class"]},{"location":"EntityConfigBaby.html#getspritesheetpath","title":"GetSpritesheetPath ()","text":"","tags":["Class"]},{"location":"EntityConfigBaby.html#string-getspritesheetpath","title":"string GetSpritesheetPath ( )","text":"","tags":["Class"]},{"location":"EntityConfigEntity.html","title":"Class \"EntityConfigEntity\"","text":"Info <p>You can get this class by using the following functions:</p> <ul> <li>EntityConfig.GetEntity()</li> </ul> Example Code <pre><code>local gaperConfig = EntityConfig.GetEntity(EntityType.ENTITY_GAPER)\n</code></pre>","tags":["Class"]},{"location":"EntityConfigEntity.html#functions","title":"Functions","text":"","tags":["Class"]},{"location":"EntityConfigEntity.html#canbechampion","title":"CanBeChampion ()","text":"","tags":["Class"]},{"location":"EntityConfigEntity.html#boolean-canbechampion","title":"boolean CanBeChampion ( )","text":"","tags":["Class"]},{"location":"EntityConfigEntity.html#canbererolledinto","title":"CanBeRerolledInto ()","text":"","tags":["Class"]},{"location":"EntityConfigEntity.html#boolean-canbererolledinto","title":"boolean CanBeRerolledInto ( )","text":"","tags":["Class"]},{"location":"EntityConfigEntity.html#canshutdoors","title":"CanShutDoors ()","text":"","tags":["Class"]},{"location":"EntityConfigEntity.html#boolean-canshutdoors","title":"boolean CanShutDoors ( )","text":"","tags":["Class"]},{"location":"EntityConfigEntity.html#getanm2path","title":"GetAnm2Path ()","text":"","tags":["Class"]},{"location":"EntityConfigEntity.html#string-getanm2path","title":"string GetAnm2Path ( )","text":"","tags":["Class"]},{"location":"EntityConfigEntity.html#getbasehp","title":"GetBaseHP ()","text":"","tags":["Class"]},{"location":"EntityConfigEntity.html#float-getbasehp","title":"float GetBaseHP ( )","text":"","tags":["Class"]},{"location":"EntityConfigEntity.html#getbestiaryanimation","title":"GetBestiaryAnimation ()","text":"","tags":["Class"]},{"location":"EntityConfigEntity.html#string-getbestiaryanimation","title":"string GetBestiaryAnimation ( )","text":"","tags":["Class"]},{"location":"EntityConfigEntity.html#getbestiaryanm2path","title":"GetBestiaryAnm2Path ()","text":"","tags":["Class"]},{"location":"EntityConfigEntity.html#string-getbestiaryanm2path","title":"string GetBestiaryAnm2Path ( )","text":"","tags":["Class"]},{"location":"EntityConfigEntity.html#getbestiaryflooralt","title":"GetBestiaryFloorAlt ()","text":"","tags":["Class"]},{"location":"EntityConfigEntity.html#string-getbestiaryflooralt","title":"string GetBestiaryFloorAlt ( )","text":"","tags":["Class"]},{"location":"EntityConfigEntity.html#getbestiaryoffset","title":"GetBestiaryOffset ()","text":"","tags":["Class"]},{"location":"EntityConfigEntity.html#const-vector-getbestiaryoffset","title":"const Vector GetBestiaryOffset ( )","text":"","tags":["Class"]},{"location":"EntityConfigEntity.html#getbestiaryoverlay","title":"GetBestiaryOverlay ()","text":"","tags":["Class"]},{"location":"EntityConfigEntity.html#string-getbestiaryoverlay","title":"string GetBestiaryOverlay ( )","text":"","tags":["Class"]},{"location":"EntityConfigEntity.html#getbestiaryscale","title":"GetBestiaryScale ()","text":"","tags":["Class"]},{"location":"EntityConfigEntity.html#float-getbestiaryscale","title":"float GetBestiaryScale ( )","text":"","tags":["Class"]},{"location":"EntityConfigEntity.html#getbossid","title":"GetBossID ()","text":"","tags":["Class"]},{"location":"EntityConfigEntity.html#bosstype-getbossid","title":"BossType GetBossID ( )","text":"","tags":["Class"]},{"location":"EntityConfigEntity.html#getcollisiondamage","title":"GetCollisionDamage ()","text":"","tags":["Class"]},{"location":"EntityConfigEntity.html#float-getcollisiondamage","title":"float GetCollisionDamage ( )","text":"","tags":["Class"]},{"location":"EntityConfigEntity.html#getcollisioninterval","title":"GetCollisionInterval ()","text":"","tags":["Class"]},{"location":"EntityConfigEntity.html#int-getcollisioninterval","title":"int GetCollisionInterval ( )","text":"","tags":["Class"]},{"location":"EntityConfigEntity.html#getcollisionradius","title":"GetCollisionRadius ()","text":"","tags":["Class"]},{"location":"EntityConfigEntity.html#float-getcollisionradius","title":"float GetCollisionRadius ( )","text":"<p>Also known as \"Size\".</p>","tags":["Class"]},{"location":"EntityConfigEntity.html#getcollisionradiusmultiplier","title":"GetCollisionRadiusMultiplier ()","text":"","tags":["Class"]},{"location":"EntityConfigEntity.html#const-vector-getcollisionradiusmultiplier","title":"const Vector GetCollisionRadiusMultiplier ( )","text":"<p>Also known as \"SizeMulti\".</p>","tags":["Class"]},{"location":"EntityConfigEntity.html#getcustomtags","title":"GetCustomTags ()","text":"","tags":["Class"]},{"location":"EntityConfigEntity.html#table-getcustomtags","title":"table GetCustomTags ( )","text":"<p>Returns a table containing all the strings specified in the entity's <code>customtags</code> attribute in entities2.xml. Tags are always provided in all lowercase. See entities2.xml for more information on <code>customtags</code>.</p>","tags":["Class"]},{"location":"EntityConfigEntity.html#getentitytags","title":"GetEntityTags ()","text":"","tags":["Class"]},{"location":"EntityConfigEntity.html#int-getentitytags","title":"int GetEntityTags ( )","text":"<p>Returns the bitmask of EntityTags for this entity.</p>","tags":["Class"]},{"location":"EntityConfigEntity.html#getfriction","title":"GetFriction ()","text":"","tags":["Class"]},{"location":"EntityConfigEntity.html#float-getfriction","title":"float GetFriction ( )","text":"","tags":["Class"]},{"location":"EntityConfigEntity.html#getgibflags","title":"GetGibFlags ()","text":"","tags":["Class"]},{"location":"EntityConfigEntity.html#int-getgibflags","title":"int GetGibFlags ( )","text":"<p>Returns the bitmask of GibFlags for this entity.</p>","tags":["Class"]},{"location":"EntityConfigEntity.html#getgibsamount","title":"GetGibsAmount ()","text":"","tags":["Class"]},{"location":"EntityConfigEntity.html#int-getgibsamount","title":"int GetGibsAmount ( )","text":"","tags":["Class"]},{"location":"EntityConfigEntity.html#getgridcollisionpoints","title":"GetGridCollisionPoints ()","text":"","tags":["Class"]},{"location":"EntityConfigEntity.html#int-getgridcollisionpoints","title":"int GetGridCollisionPoints ( )","text":"","tags":["Class"]},{"location":"EntityConfigEntity.html#getmass","title":"GetMass ()","text":"","tags":["Class"]},{"location":"EntityConfigEntity.html#float-getmass","title":"float GetMass ( )","text":"","tags":["Class"]},{"location":"EntityConfigEntity.html#getmodname","title":"GetModName ()","text":"","tags":["Class"]},{"location":"EntityConfigEntity.html#string-getmodname","title":"string GetModName ( )","text":"<p>Name string of the mod that entity is from.</p> <p>Returns nil for vanilla entities.</p>","tags":["Class"]},{"location":"EntityConfigEntity.html#getname","title":"GetName ()","text":"","tags":["Class"]},{"location":"EntityConfigEntity.html#string-getname","title":"string GetName ( )","text":"","tags":["Class"]},{"location":"EntityConfigEntity.html#getportraitid","title":"GetPortraitID ()","text":"","tags":["Class"]},{"location":"EntityConfigEntity.html#int-getportraitid","title":"int GetPortraitID ( )","text":"","tags":["Class"]},{"location":"EntityConfigEntity.html#getshadowsize","title":"GetShadowSize ()","text":"","tags":["Class"]},{"location":"EntityConfigEntity.html#float-getshadowsize","title":"float GetShadowSize ( )","text":"<p>Note that this value is the \"shadowSize\" specified in the XML divided by 100.</p>","tags":["Class"]},{"location":"EntityConfigEntity.html#getshieldstrength","title":"GetShieldStrength ()","text":"","tags":["Class"]},{"location":"EntityConfigEntity.html#float-getshieldstrength","title":"float GetShieldStrength ( )","text":"<p>The amount of armor the entity has.</p>","tags":["Class"]},{"location":"EntityConfigEntity.html#getstagehp","title":"GetStageHP ()","text":"","tags":["Class"]},{"location":"EntityConfigEntity.html#float-getstagehp","title":"float GetStageHP ( )","text":"","tags":["Class"]},{"location":"EntityConfigEntity.html#getsubtype","title":"GetSubType ()","text":"","tags":["Class"]},{"location":"EntityConfigEntity.html#int-getsubtype","title":"int GetSubType ( )","text":"","tags":["Class"]},{"location":"EntityConfigEntity.html#gettype","title":"GetType ()","text":"","tags":["Class"]},{"location":"EntityConfigEntity.html#int-gettype","title":"int GetType ( )","text":"","tags":["Class"]},{"location":"EntityConfigEntity.html#getvariant","title":"GetVariant ()","text":"","tags":["Class"]},{"location":"EntityConfigEntity.html#int-getvariant","title":"int GetVariant ( )","text":"","tags":["Class"]},{"location":"EntityConfigEntity.html#hascustomtag","title":"HasCustomTag ()","text":"","tags":["Class"]},{"location":"EntityConfigEntity.html#boolean-hascustomtag-string-tag","title":"boolean HasCustomTag ( string tag )","text":"<p>Returns true if the entity has the provided string specified in its <code>customtags</code> attribute in entities2.xml. Capitalization does not matter. See entities2.xml for more information on <code>customtags</code>.</p>","tags":["Class"]},{"location":"EntityConfigEntity.html#hasentitytags","title":"HasEntityTags ()","text":"","tags":["Class"]},{"location":"EntityConfigEntity.html#boolean-hasentitytags-int-tags","title":"boolean HasEntityTags ( int Tags )","text":"<p>Returns true if the entity has all EntityTags specified in the provided bitset.</p>","tags":["Class"]},{"location":"EntityConfigEntity.html#hasflooralts","title":"HasFloorAlts ()","text":"","tags":["Class"]},{"location":"EntityConfigEntity.html#boolean-hasflooralts","title":"boolean HasFloorAlts ( )","text":"","tags":["Class"]},{"location":"EntityConfigEntity.html#hasgibflags","title":"HasGibFlags ()","text":"","tags":["Class"]},{"location":"EntityConfigEntity.html#boolean-hasgibflags-int-flags","title":"boolean HasGibFlags ( int Flags )","text":"<p>Returns true if the entity has all GibFlags specified in the provided bitset.</p>","tags":["Class"]},{"location":"EntityConfigEntity.html#isboss","title":"IsBoss ()","text":"","tags":["Class"]},{"location":"EntityConfigEntity.html#boolean-isboss","title":"boolean IsBoss ( )","text":"","tags":["Class"]},{"location":"EntityConfigPlayer.html","title":"Class \"EntityConfigPlayer\"","text":"Info <p>You can get this class by using the following functions:</p> <ul> <li>EntityConfig.GetPlayer()</li> </ul> Example Code <pre><code>local cainConfig = EntityConfig.GetPlayer(PlayerType.PLAYER_CAIN)\n</code></pre>","tags":["Class"]},{"location":"EntityConfigPlayer.html#functions","title":"Functions","text":"","tags":["Class"]},{"location":"EntityConfigPlayer.html#canshoot","title":"CanShoot ()","text":"","tags":["Class"]},{"location":"EntityConfigPlayer.html#boolean-canshoot","title":"boolean CanShoot ( )","text":"","tags":["Class"]},{"location":"EntityConfigPlayer.html#getachievementid","title":"GetAchievementID ()","text":"","tags":["Class"]},{"location":"EntityConfigPlayer.html#achievement-getachievementid","title":"Achievement GetAchievementID ( )","text":"<p>Returns -1 if the character is not locked behind a vanilla achievement (or -2 for \"hidden\" vanilla characters).</p>","tags":["Class"]},{"location":"EntityConfigPlayer.html#getbirthrightdescription","title":"GetBirthrightDescription ()","text":"","tags":["Class"]},{"location":"EntityConfigPlayer.html#string-getbirthrightdescription","title":"string GetBirthrightDescription ( )","text":"","tags":["Class"]},{"location":"EntityConfigPlayer.html#getblackhearts","title":"GetBlackHearts ()","text":"","tags":["Class"]},{"location":"EntityConfigPlayer.html#int-getblackhearts","title":"int GetBlackHearts ( )","text":"","tags":["Class"]},{"location":"EntityConfigPlayer.html#getbombs","title":"GetBombs ()","text":"","tags":["Class"]},{"location":"EntityConfigPlayer.html#int-getbombs","title":"int GetBombs ( )","text":"","tags":["Class"]},{"location":"EntityConfigPlayer.html#getbrokenhearts","title":"GetBrokenHearts ()","text":"","tags":["Class"]},{"location":"EntityConfigPlayer.html#int-getbrokenhearts","title":"int GetBrokenHearts ( )","text":"","tags":["Class"]},{"location":"EntityConfigPlayer.html#getcard","title":"GetCard ()","text":"","tags":["Class"]},{"location":"EntityConfigPlayer.html#card-getcard","title":"Card GetCard ( )","text":"<p>Returns 0 if the character does not start with any vanilla card.</p> <p>Does not include starting cards obtained via unlocks.</p> <p>Does not include cards added by mods.</p>","tags":["Class"]},{"location":"EntityConfigPlayer.html#getcoins","title":"GetCoins ()","text":"","tags":["Class"]},{"location":"EntityConfigPlayer.html#int-getcoins","title":"int GetCoins ( )","text":"","tags":["Class"]},{"location":"EntityConfigPlayer.html#getcollectibles","title":"GetCollectibles ()","text":"","tags":["Class"]},{"location":"EntityConfigPlayer.html#collectibletype-getcollectibles","title":"CollectibleType[] GetCollectibles ( )","text":"<p>Returns a table of CollectibleTypes for the character's starting items.</p>","tags":["Class"]},{"location":"EntityConfigPlayer.html#getcostumeid","title":"GetCostumeID ()","text":"","tags":["Class"]},{"location":"EntityConfigPlayer.html#int-getcostumeid","title":"int GetCostumeID ( )","text":"<p>Returns -1 if the character does not have any XML-defined starting costume (like Maggy's hair).</p>","tags":["Class"]},{"location":"EntityConfigPlayer.html#getcostumesuffix","title":"GetCostumeSuffix ()","text":"","tags":["Class"]},{"location":"EntityConfigPlayer.html#string-getcostumesuffix","title":"string GetCostumeSuffix ( )","text":"<p>Directory suffix used for character-specific costume sprites.</p>","tags":["Class"]},{"location":"EntityConfigPlayer.html#getextraportraitpath","title":"GetExtraPortraitPath ()","text":"","tags":["Class"]},{"location":"EntityConfigPlayer.html#string-getextraportraitpath","title":"string GetExtraPortraitPath ( )","text":"<p>Path to a <code>.anm2</code> file displayed on top of the character's level transition and boss VS screen portrait.</p>","tags":["Class"]},{"location":"EntityConfigPlayer.html#getkeys","title":"GetKeys ()","text":"","tags":["Class"]},{"location":"EntityConfigPlayer.html#int-getkeys","title":"int GetKeys ( )","text":"","tags":["Class"]},{"location":"EntityConfigPlayer.html#getmoddedcontrolssprite","title":"GetModdedControlsSprite ()","text":"","tags":["Class"]},{"location":"EntityConfigPlayer.html#sprite-getmoddedcontrolssprite","title":"Sprite GetModdedControlsSprite ( )","text":"<p>Returns the Sprite used for a modded character's starting room controls.</p> <p>Note that this Sprite is shared by other characters from the same mod - there is an animation with the same name as this character.</p> <p>Returns nil for vanilla characters, or characters with no corresponding animation.</p>","tags":["Class"]},{"location":"EntityConfigPlayer.html#getmoddedcoopmenusprite","title":"GetModdedCoopMenuSprite ()","text":"","tags":["Class"]},{"location":"EntityConfigPlayer.html#sprite-getmoddedcoopmenusprite","title":"Sprite GetModdedCoopMenuSprite ( )","text":"<p>Returns the Sprite used for a modded character's icon in the co-op character select wheel.</p> <p>Note that this Sprite is shared by other characters from the same mod - there is an animation with the same name as this character.</p> <p>Returns nil for vanilla characters, or characters with no corresponding animation.</p>","tags":["Class"]},{"location":"EntityConfigPlayer.html#getmoddedgameoversprite","title":"GetModdedGameOverSprite ()","text":"","tags":["Class"]},{"location":"EntityConfigPlayer.html#sprite-getmoddedgameoversprite","title":"Sprite GetModdedGameOverSprite ( )","text":"<p>Returns the Sprite used for a modded character's game over screen (ie, their name).</p> <p>Note that this Sprite is shared by other characters from the same mod - there is an animation with the same name as this character.</p> <p>Returns nil for vanilla characters, or characters with no corresponding animation.</p>","tags":["Class"]},{"location":"EntityConfigPlayer.html#getmoddedmenubackgroundsprite","title":"GetModdedMenuBackgroundSprite ()","text":"","tags":["Class"]},{"location":"EntityConfigPlayer.html#sprite-getmoddedmenubackgroundsprite","title":"Sprite GetModdedMenuBackgroundSprite ( )","text":"<p>Returns the Sprite used for a modded character's character select screen.</p> <p>Note that this Sprite is shared by other characters from the same mod - there is an animation with the same name as this character.</p> <p>Returns nil for vanilla characters, or characters with no corresponding animation.</p>","tags":["Class"]},{"location":"EntityConfigPlayer.html#getmoddedmenuportraitsprite","title":"GetModdedMenuPortraitSprite ()","text":"","tags":["Class"]},{"location":"EntityConfigPlayer.html#sprite-getmoddedmenuportraitsprite","title":"Sprite GetModdedMenuPortraitSprite ( )","text":"<p>Returns the Sprite used for a modded character's character select portrait.</p> <p>Note that this Sprite is shared by other characters from the same mod - there is an animation with the same name as this character.</p> <p>Returns nil for vanilla characters, or characters with no corresponding animation.</p>","tags":["Class"]},{"location":"EntityConfigPlayer.html#getname","title":"GetName ()","text":"","tags":["Class"]},{"location":"EntityConfigPlayer.html#string-getname","title":"string GetName ( )","text":"","tags":["Class"]},{"location":"EntityConfigPlayer.html#getnameimagepath","title":"GetNameImagePath ()","text":"","tags":["Class"]},{"location":"EntityConfigPlayer.html#string-getnameimagepath","title":"string GetNameImagePath ( )","text":"<p>Path to the PNG file used for the character's name on the boss VS screen.</p>","tags":["Class"]},{"location":"EntityConfigPlayer.html#getpill","title":"GetPill ()","text":"","tags":["Class"]},{"location":"EntityConfigPlayer.html#pillcolor-getpill","title":"PillColor GetPill ( )","text":"<p>Does not include starting pills obtained via unlocks.</p>","tags":["Class"]},{"location":"EntityConfigPlayer.html#getplayertype","title":"GetPlayerType ()","text":"","tags":["Class"]},{"location":"EntityConfigPlayer.html#int-getplayertype","title":"int GetPlayerType ( )","text":"","tags":["Class"]},{"location":"EntityConfigPlayer.html#getpocketactive","title":"GetPocketActive ()","text":"","tags":["Class"]},{"location":"EntityConfigPlayer.html#collectibletype-getpocketactive","title":"CollectibleType GetPocketActive ( )","text":"<p>Does not include items added by mods.</p>","tags":["Class"]},{"location":"EntityConfigPlayer.html#getportraitpath","title":"GetPortraitPath ()","text":"","tags":["Class"]},{"location":"EntityConfigPlayer.html#string-getportraitpath","title":"string GetPortraitPath ( )","text":"<p>Path to the PNG file used for the character's main level transition and boss VS screen portrait.</p>","tags":["Class"]},{"location":"EntityConfigPlayer.html#getredhearts","title":"GetRedHearts ()","text":"","tags":["Class"]},{"location":"EntityConfigPlayer.html#int-getredhearts","title":"int GetRedHearts ( )","text":"","tags":["Class"]},{"location":"EntityConfigPlayer.html#getskincolor","title":"GetSkinColor ()","text":"","tags":["Class"]},{"location":"EntityConfigPlayer.html#skincolor-getskincolor","title":"SkinColor GetSkinColor ( )","text":"","tags":["Class"]},{"location":"EntityConfigPlayer.html#getskinpath","title":"GetSkinPath ()","text":"","tags":["Class"]},{"location":"EntityConfigPlayer.html#string-getskinpath","title":"string GetSkinPath ( )","text":"<p>Path to the PNG file used for the character's primary sprite sheet.</p>","tags":["Class"]},{"location":"EntityConfigPlayer.html#getsoulhearts","title":"GetSoulHearts ()","text":"","tags":["Class"]},{"location":"EntityConfigPlayer.html#int-getsoulhearts","title":"int GetSoulHearts ( )","text":"","tags":["Class"]},{"location":"EntityConfigPlayer.html#gettaintedcounterpart","title":"GetTaintedCounterpart ()","text":"","tags":["Class"]},{"location":"EntityConfigPlayer.html#entityconfigplayer-gettaintedcounterpart","title":"EntityConfigPlayer GetTaintedCounterpart ( )","text":"<p>For non-tainted characters, returns their tainted counterpart, or returns nil if there is none.</p> <p>For tainted characters, returns their non-tainted counterpart.</p>","tags":["Class"]},{"location":"EntityConfigPlayer.html#gettrinket","title":"GetTrinket ()","text":"","tags":["Class"]},{"location":"EntityConfigPlayer.html#trinkettype-gettrinket","title":"TrinketType GetTrinket ( )","text":"<p>Does not include starting trinkets obtained via unlocks.</p> <p>Does not include trinkets added by mods.</p>","tags":["Class"]},{"location":"EntityConfigPlayer.html#ishidden","title":"IsHidden ()","text":"","tags":["Class"]},{"location":"EntityConfigPlayer.html#boolean-ishidden","title":"boolean IsHidden ( )","text":"<p>Returns true if the character is not visible/selectable from the character select screen.</p> <p>Doesn't include characters who are only hidden until unlocked.</p>","tags":["Class"]},{"location":"EntityConfigPlayer.html#istainted","title":"IsTainted ()","text":"","tags":["Class"]},{"location":"EntityConfigPlayer.html#boolean-istainted","title":"boolean IsTainted ( )","text":"","tags":["Class"]},{"location":"EntityDelirium.html","title":"Class \"EntityDelirium\"","text":"","tags":["Class"]},{"location":"EntityDelirium.html#functions","title":"Functions","text":"","tags":["Class"]},{"location":"EntityDelirium.html#getteleportationtimer","title":"GetTeleportationTimer ()","text":"","tags":["Class"]},{"location":"EntityDelirium.html#int-getteleportationtimer","title":"int GetTeleportationTimer ( )","text":"<p>Return the number of frames before Delirium teleports.</p>","tags":["Class"]},{"location":"EntityDelirium.html#isredmode","title":"IsRedMode ()","text":"","tags":["Class"]},{"location":"EntityDelirium.html#boolean-isredmode","title":"boolean IsRedMode ( )","text":"<p>Returns a boolean indicating if the red mode is activated or not.</p> About red mode <p>Red mode is mechanic in the Delirium fight where Delirium's sprite is tinted red.  While this mode is active, Delirium's movement speed is increased in a way that cannot be observed through the modding API as it occurs outside of the update callbacks.</p>","tags":["Class"]},{"location":"EntityDelirium.html#setredmode","title":"SetRedMode ()","text":"","tags":["Class"]},{"location":"EntityDelirium.html#void-setredmode-boolean-on","title":"void SetRedMode ( boolean On )","text":"<p>Enable or disable red mode according to the parameter <code>on</code>. </p> About red mode <p>Please refer to the note in the documentation of IsRedMode for an explanation of red mode.</p>","tags":["Class"]},{"location":"EntityDelirium.html#setteleportationtimer","title":"SetTeleportationTimer ()","text":"","tags":["Class"]},{"location":"EntityDelirium.html#void-setteleportationtimer-int-timer","title":"void SetTeleportationTimer ( int Timer )","text":"<p>Set the number of frames before Delirium teleports. Negative values are not allowed.</p>","tags":["Class"]},{"location":"EntityDelirium.html#transform","title":"Transform ()","text":"","tags":["Class"]},{"location":"EntityDelirium.html#void-transform-int-type-int-variant-0","title":"void Transform ( int Type, int Variant = 0 )","text":"<p>Transform Delirium into the entity with the specified type and variant. </p> Warning <p>The validation of the type and variant is only as strong as the validation performed by the game when it attempts to transform Delirium. In other words, this behaves exactly as if the game itself attempted to transform Delirium, with everything it implies if the specified entity is invalid.</p> Warning <p>In order to properly handle transformations, we use the native transformation mechanic of Delirium.  As such, the transformation will not be effective immediately, but instead on the next frame. Internally, this function forces the transformation timer to 1 frame and lets Delirium's AI update as needed.</p>","tags":["Class"]},{"location":"EntityDelirium.html#attributes","title":"Attributes","text":"","tags":["Class"]},{"location":"EntityDelirium.html#angle","title":"Angle","text":"","tags":["Class"]},{"location":"EntityDelirium.html#int8-angle","title":"int8 Angle","text":"<p>Angle of Delirium's projectiles. </p> Geometric system <p>This variable is an eight bit integers, so the allowed values are the integers from 0 to 255 (inclusive). You can use a linear interpolation between the [0: 255] and the [0: 360[ ranges in order to convert angles in degree to this system.</p> WTH <p>All of Delirium bullet hell patterns can be influenced by this variable. Unlike most bosses, Delirium does not aim its projectiles at the player, instead spawning them in random directions (with some control to prevent \"absurd\" patterns). For instance, if Delirium spawns eight tears around it, and <code>Angle</code> is set to 0, the 8 tears will fire in the cardinal and ordinal directions. If <code>Angle</code> is set to 32, all tears will be rotated by 45\u00b0. No, I have no idea why Nicalis used an eight bits integer to represent an angle (analyzing the memory layout of Delirium shows that it would have made no difference using a 32 bits float).</p>","tags":["Class"]},{"location":"EntityDelirium.html#attackid","title":"AttackID","text":"","tags":["Class"]},{"location":"EntityDelirium.html#int-attackid","title":"int AttackID","text":"<p>Internal I1 value used by Delirium to identify the bullet hell pattern it is currently executing.</p>","tags":["Class"]},{"location":"EntityDelirium.html#bosstype","title":"BossType","text":"","tags":["Class"]},{"location":"EntityDelirium.html#const-int-bosstype","title":"const int BossType","text":"<p>EntityType of the boss Delirium is currently transformed as.</p>","tags":["Class"]},{"location":"EntityDelirium.html#bossvariant","title":"BossVariant","text":"","tags":["Class"]},{"location":"EntityDelirium.html#const-int-bossvariant","title":"const int BossVariant","text":"<p>Variant of the boss Delirium is currently transformed as.</p>","tags":["Class"]},{"location":"EntityDelirium.html#cycle","title":"Cycle","text":"","tags":["Class"]},{"location":"EntityDelirium.html#int-cycle","title":"int Cycle","text":"<p>Internal I2 value used by Delirium to identify whether red mode is activated and the amount of time before a teleportation. You should not use this variable directly and instead rely on the GetTeleportationTimer, SetTeleportationTimer, IsRedMode and SetRedMode functions instead. The only reason to use this variable directly is if you want to freeze it to a certain value that you know will do exactly what you want (for instance disable red mode and prevent teleportation).</p> Format of the variable <p>The variable is 32 bits wide and is structured as follows: bits 0 to 6 (inclusive) are unknown, bits 7 to 14 (inclusive) indicate whether red mode is active (it is active if any of the bits is set) and bits 15 to 25 (inclusive) are the teleportation timer.</p> Preservation of state <p>The aforementioned methods used to manipulate this variable preserve the bits of the variable that are irrelevant to the operation performed. For instance, enabling or disabling red mode will not change the transformation timer. </p>","tags":["Class"]},{"location":"EntityDelirium.html#remainingattacks","title":"RemainingAttacks","text":"","tags":["Class"]},{"location":"EntityDelirium.html#int-remainingattacks","title":"int RemainingAttacks","text":"<p>Number of attacks remaining before Delirium transforms into another boss.</p> About remaining attacks <p>This variable is Nicalis answer to prevent Delirium from performing too many attacks as a single boss before transforming. Under certain conditions, the game will decrement this value by 1. If it reaches 0, Delirium transforms regardless of the transformation timer. The conditions that must be met (simultaneously) are: the StateFrame variable must be 1 during the current frame, and the State variable must be set to any of the attack states. This is the reason why Delirium will sometimes initiate an attack as a boss and immediately transform.  You can refer to the complete breakdown of bosses AI configurations to see the AI configuration of each attack.</p>","tags":["Class"]},{"location":"EntityDelirium.html#stated","title":"StateD","text":"","tags":["Class"]},{"location":"EntityDelirium.html#npcstate-stated","title":"NpcState StateD","text":"<p>Internal State of Delirium.</p>","tags":["Class"]},{"location":"EntityDelirium.html#transformationtimer","title":"TransformationTimer","text":"","tags":["Class"]},{"location":"EntityDelirium.html#int-transformationtimer","title":"int TransformationTimer","text":"<p>Get or set the amount of time before Delirium transforms into another boss.</p> On transformations <p>Delirium can transform in two situations: either this value reaches 0, or the value of RemainingAttacks reaches 0.  Refer to the documentation of RemainingAttacks for a more detailed explanation of that mechanic.</p>","tags":["Class"]},{"location":"EntityEffect.html","title":"Class \"EntityEffect\"","text":"","tags":["Class"]},{"location":"EntityEffect.html#class-diagram","title":"Class Diagram","text":"<pre><code>    classDiagram\n    class Entity:::diagramCurrentPage\n    class EntityBomb\n    class EntityEffect\n    class EntityFamiliar\n    class EntityKnife\n    class EntityLaser\n    class EntityNPC\n    class EntityPickup\n    class EntityPlayer\n    class EntityProjectile\n    class EntitySlot\n    class EntityTear\n    Entity &lt;|-- EntityBomb\n    Entity &lt;|-- EntityEffect\n    Entity &lt;|-- EntityFamiliar\n    Entity &lt;|-- EntityKnife\n    Entity &lt;|-- EntityLaser\n    Entity &lt;|-- EntityNPC\n    Entity &lt;|-- EntityPickup\n    Entity &lt;|-- EntityPlayer\n    Entity &lt;|-- EntityProjectile\n    Entity &lt;|-- EntitySlot\n    Entity &lt;|-- EntityTear\n    link Entity \"https://wofsauge.github.io/IsaacDocs/rep/Entity.html\" \"Go to page for 'Entity' class\"\n    link EntityBomb \"https://wofsauge.github.io/IsaacDocs/rep/EntityBomb.html\" \"Go to page for 'EntityBomb' class\"\n    link EntityEffect \"https://wofsauge.github.io/IsaacDocs/rep/EntityEffect.html\" \"Go to page for 'EntityEffect' class\"\n    link EntityFamiliar \"https://wofsauge.github.io/IsaacDocs/rep/EntityFamiliar.html\" \"Go to page for 'EntityFamiliar' class\"\n    link EntityKnife \"https://wofsauge.github.io/IsaacDocs/rep/EntityKnife.html\" \"Go to page for 'EntityKnife' class\"\n    link EntityLaser \"EntityLaser.html\" \"Go to page for 'EntityLaser' class\"\n    link EntityNPC \"EntityNPC.html\" \"Go to page for 'EntityNPC' class\"\n    link EntityPickup \"EntityPickup.html\" \"Go to page for 'EntityPickup' class\"\n    link EntityPlayer \"EntityPlayer.html\" \"Go to page for 'EntityPlayer' class\"\n    link EntityProjectile \"https://wofsauge.github.io/IsaacDocs/rep/EntityProjectile.html\" \"Go to page for 'EntityProjectile' class\"\n    link EntitySlot \"EntitySlot.html\" \"Go to page for 'EntitySlot' class\"\n    link EntityTear \"https://wofsauge.github.io/IsaacDocs/rep/EntityTear.html\" \"Go to page for 'EntityTear' class\"</code></pre>","tags":["Class"]},{"location":"EntityEffect.html#functions","title":"Functions","text":"","tags":["Class"]},{"location":"EntityEffect.html#createlight","title":"CreateLight ()","text":"","tags":["Class"]},{"location":"EntityEffect.html#static-entityeffect-createlight-vector-position-float-scale-randomfloat00-10-int-lifespan-1-int-state-6-color-color-default","title":"static EntityEffect CreateLight ( Vector Position, float Scale = RandomFloat[0.0-1.0], int Lifespan = -1, int State = 6, Color Color = Default)","text":"Warning <p>This is a static function and must be called via <code>EntityEffect.CreateLight</code>.</p>","tags":["Class"]},{"location":"EntityFamiliar.html","title":"Class \"EntityFamiliar\"","text":"","tags":["Class"]},{"location":"EntityFamiliar.html#class-diagram","title":"Class Diagram","text":"<pre><code>    classDiagram\n    class Entity:::diagramCurrentPage\n    class EntityBomb\n    class EntityEffect\n    class EntityFamiliar\n    class EntityKnife\n    class EntityLaser\n    class EntityNPC\n    class EntityPickup\n    class EntityPlayer\n    class EntityProjectile\n    class EntitySlot\n    class EntityTear\n    Entity &lt;|-- EntityBomb\n    Entity &lt;|-- EntityEffect\n    Entity &lt;|-- EntityFamiliar\n    Entity &lt;|-- EntityKnife\n    Entity &lt;|-- EntityLaser\n    Entity &lt;|-- EntityNPC\n    Entity &lt;|-- EntityPickup\n    Entity &lt;|-- EntityPlayer\n    Entity &lt;|-- EntityProjectile\n    Entity &lt;|-- EntitySlot\n    Entity &lt;|-- EntityTear\n    link Entity \"https://wofsauge.github.io/IsaacDocs/rep/Entity.html\" \"Go to page for 'Entity' class\"\n    link EntityBomb \"https://wofsauge.github.io/IsaacDocs/rep/EntityBomb.html\" \"Go to page for 'EntityBomb' class\"\n    link EntityEffect \"https://wofsauge.github.io/IsaacDocs/rep/EntityEffect.html\" \"Go to page for 'EntityEffect' class\"\n    link EntityFamiliar \"https://wofsauge.github.io/IsaacDocs/rep/EntityFamiliar.html\" \"Go to page for 'EntityFamiliar' class\"\n    link EntityKnife \"https://wofsauge.github.io/IsaacDocs/rep/EntityKnife.html\" \"Go to page for 'EntityKnife' class\"\n    link EntityLaser \"EntityLaser.html\" \"Go to page for 'EntityLaser' class\"\n    link EntityNPC \"EntityNPC.html\" \"Go to page for 'EntityNPC' class\"\n    link EntityPickup \"EntityPickup.html\" \"Go to page for 'EntityPickup' class\"\n    link EntityPlayer \"EntityPlayer.html\" \"Go to page for 'EntityPlayer' class\"\n    link EntityProjectile \"https://wofsauge.github.io/IsaacDocs/rep/EntityProjectile.html\" \"Go to page for 'EntityProjectile' class\"\n    link EntitySlot \"EntitySlot.html\" \"Go to page for 'EntitySlot' class\"\n    link EntityTear \"https://wofsauge.github.io/IsaacDocs/rep/EntityTear.html\" \"Go to page for 'EntityTear' class\"</code></pre>","tags":["Class"]},{"location":"EntityFamiliar.html#functions","title":"Functions","text":"","tags":["Class"]},{"location":"EntityFamiliar.html#canbedamagedbyenemies","title":"CanBeDamagedByEnemies ()","text":"","tags":["Class"]},{"location":"EntityFamiliar.html#boolean-canbedamagedbyenemies","title":"boolean CanBeDamagedByEnemies ( )","text":"","tags":["Class"]},{"location":"EntityFamiliar.html#canbedamagedbylasers","title":"CanBeDamagedByLasers ()","text":"","tags":["Class"]},{"location":"EntityFamiliar.html#boolean-canbedamagedbylasers","title":"boolean CanBeDamagedByLasers ( )","text":"","tags":["Class"]},{"location":"EntityFamiliar.html#canbedamagedbyprojectiles","title":"CanBeDamagedByProjectiles ()","text":"","tags":["Class"]},{"location":"EntityFamiliar.html#boolean-canbedamagedbyprojectiles","title":"boolean CanBeDamagedByProjectiles ( )","text":"","tags":["Class"]},{"location":"EntityFamiliar.html#canblockprojectiles","title":"CanBlockProjectiles ()","text":"","tags":["Class"]},{"location":"EntityFamiliar.html#boolean-canblockprojectiles","title":"boolean CanBlockProjectiles ( )","text":"","tags":["Class"]},{"location":"EntityFamiliar.html#cancharm","title":"CanCharm ()","text":"","tags":["Class"]},{"location":"EntityFamiliar.html#boolean-cancharm","title":"boolean CanCharm ( )","text":"","tags":["Class"]},{"location":"EntityFamiliar.html#getdirtcolor","title":"GetDirtColor ()","text":"","tags":["Class"]},{"location":"EntityFamiliar.html#color-getdirtcolor","title":"Color GetDirtColor ( )","text":"","tags":["Class"]},{"location":"EntityFamiliar.html#getfollowerpriority","title":"GetFollowerPriority ()","text":"","tags":["Class"]},{"location":"EntityFamiliar.html#followerpriority-getfollowerpriority","title":"FollowerPriority GetFollowerPriority ( )","text":"","tags":["Class"]},{"location":"EntityFamiliar.html#getitemconfig","title":"GetItemConfig ()","text":"","tags":["Class"]},{"location":"EntityFamiliar.html#itemconfigitem-getitemconfig","title":"ItemConfigItem GetItemConfig ( )","text":"<p>Returns the ItemConfigItem corresponding to the item that granted this familiar.</p> <p>Returns nil if the familiar was not spawned by an item.</p>","tags":["Class"]},{"location":"EntityFamiliar.html#getmovedelaynum","title":"GetMoveDelayNum ()","text":"","tags":["Class"]},{"location":"EntityFamiliar.html#int-getmovedelaynum","title":"int GetMoveDelayNum ( )","text":"<p>Returns the amount in frames that the familiar's movements are delayed from the player's. 30 frames = 1 second.</p>","tags":["Class"]},{"location":"EntityFamiliar.html#getmultiplier","title":"GetMultiplier ()","text":"","tags":["Class"]},{"location":"EntityFamiliar.html#float-getmultiplier","title":"float GetMultiplier ( )","text":"<p>Returns the \"multiplier\" for the familiar, from effects such as BFFS! or Hive Mind. Typically used to multiply things such as familiar damage.</p> Multipliers <ul> <li>BFFS! and Hive Mind: x2.0</li> <li>Tainted Bethany: x0.75</li> <li>Tainted Lazarus Birthright: x0.25</li> </ul>","tags":["Class"]},{"location":"EntityFamiliar.html#getpathfinder","title":"GetPathFinder ()","text":"","tags":["Class"]},{"location":"EntityFamiliar.html#pathfinder-getpathfinder","title":"PathFinder GetPathFinder ( )","text":"","tags":["Class"]},{"location":"EntityFamiliar.html#getweapon","title":"GetWeapon ()","text":"","tags":["Class"]},{"location":"EntityFamiliar.html#weapon-getweapon","title":"Weapon GetWeapon ( )","text":"<p>Returns <code>nil</code> for familiars that don't mimic the player's attacks (Incubus, etc).</p>","tags":["Class"]},{"location":"EntityFamiliar.html#invalidatecachedmultiplier","title":"InvalidateCachedMultiplier ()","text":"","tags":["Class"]},{"location":"EntityFamiliar.html#void-invalidatecachedmultiplier","title":"void InvalidateCachedMultiplier ( )","text":"<p>Makes it so that the next time GetMultiplier is called, MC_EVALUATE_FAMILIAR_MULTIPLIER is triggered to recalculate/allow modifying the multiplier.</p>","tags":["Class"]},{"location":"EntityFamiliar.html#ischarmed","title":"IsCharmed ()","text":"","tags":["Class"]},{"location":"EntityFamiliar.html#boolean-ischarmed","title":"boolean IsCharmed ( )","text":"","tags":["Class"]},{"location":"EntityFamiliar.html#removefromplayer","title":"RemoveFromPlayer ()","text":"","tags":["Class"]},{"location":"EntityFamiliar.html#void-removefromplayer","title":"void RemoveFromPlayer ( )","text":"","tags":["Class"]},{"location":"EntityFamiliar.html#setmovedelaynum","title":"SetMoveDelayNum ()","text":"","tags":["Class"]},{"location":"EntityFamiliar.html#void-setmovedelaynum-int-delay","title":"void SetMoveDelayNum ( int Delay )","text":"<p>Sets the amount in frames that the familiar's movements are delayed from the player's. 30 frames = 1 second.</p>","tags":["Class"]},{"location":"EntityFamiliar.html#triggerroomclear","title":"TriggerRoomClear ()","text":"","tags":["Class"]},{"location":"EntityFamiliar.html#void-triggerroomclear","title":"void TriggerRoomClear ( )","text":"","tags":["Class"]},{"location":"EntityFamiliar.html#tryaimatmarkedtarget","title":"TryAimAtMarkedTarget ()","text":"","tags":["Class"]},{"location":"EntityFamiliar.html#vector-tryaimatmarkedtarget-vector-aimdirection-direction-direction","title":"Vector TryAimAtMarkedTarget ( Vector AimDirection, Direction Direction)","text":"<p>Returns <code>nil</code> if unsuccessful.</p>","tags":["Class"]},{"location":"EntityFamiliar.html#updatedirtcolor","title":"UpdateDirtColor ()","text":"","tags":["Class"]},{"location":"EntityFamiliar.html#void-updatedirtcolor","title":"void UpdateDirtColor ( )","text":"","tags":["Class"]},{"location":"EntityKnife.html","title":"Class \"EntityKnife\"","text":"","tags":["Class"]},{"location":"EntityKnife.html#class-diagram","title":"Class Diagram","text":"<pre><code>    classDiagram\n    class Entity:::diagramCurrentPage\n    class EntityBomb\n    class EntityEffect\n    class EntityFamiliar\n    class EntityKnife\n    class EntityLaser\n    class EntityNPC\n    class EntityPickup\n    class EntityPlayer\n    class EntityProjectile\n    class EntitySlot\n    class EntityTear\n    Entity &lt;|-- EntityBomb\n    Entity &lt;|-- EntityEffect\n    Entity &lt;|-- EntityFamiliar\n    Entity &lt;|-- EntityKnife\n    Entity &lt;|-- EntityLaser\n    Entity &lt;|-- EntityNPC\n    Entity &lt;|-- EntityPickup\n    Entity &lt;|-- EntityPlayer\n    Entity &lt;|-- EntityProjectile\n    Entity &lt;|-- EntitySlot\n    Entity &lt;|-- EntityTear\n    link Entity \"https://wofsauge.github.io/IsaacDocs/rep/Entity.html\" \"Go to page for 'Entity' class\"\n    link EntityBomb \"https://wofsauge.github.io/IsaacDocs/rep/EntityBomb.html\" \"Go to page for 'EntityBomb' class\"\n    link EntityEffect \"https://wofsauge.github.io/IsaacDocs/rep/EntityEffect.html\" \"Go to page for 'EntityEffect' class\"\n    link EntityFamiliar \"https://wofsauge.github.io/IsaacDocs/rep/EntityFamiliar.html\" \"Go to page for 'EntityFamiliar' class\"\n    link EntityKnife \"https://wofsauge.github.io/IsaacDocs/rep/EntityKnife.html\" \"Go to page for 'EntityKnife' class\"\n    link EntityLaser \"EntityLaser.html\" \"Go to page for 'EntityLaser' class\"\n    link EntityNPC \"EntityNPC.html\" \"Go to page for 'EntityNPC' class\"\n    link EntityPickup \"EntityPickup.html\" \"Go to page for 'EntityPickup' class\"\n    link EntityPlayer \"EntityPlayer.html\" \"Go to page for 'EntityPlayer' class\"\n    link EntityProjectile \"https://wofsauge.github.io/IsaacDocs/rep/EntityProjectile.html\" \"Go to page for 'EntityProjectile' class\"\n    link EntitySlot \"EntitySlot.html\" \"Go to page for 'EntitySlot' class\"\n    link EntityTear \"https://wofsauge.github.io/IsaacDocs/rep/EntityTear.html\" \"Go to page for 'EntityTear' class\"</code></pre>","tags":["Class"]},{"location":"EntityKnife.html#functions","title":"Functions","text":"","tags":["Class"]},{"location":"EntityKnife.html#gethitlist","title":"GetHitList ()","text":"","tags":["Class"]},{"location":"EntityKnife.html#int-gethitlist","title":"int[] GetHitList ( )","text":"","tags":["Class"]},{"location":"EntityKnife.html#getisspinattack","title":"GetIsSpinAttack ()","text":"","tags":["Class"]},{"location":"EntityKnife.html#boolean-getisspinattack","title":"boolean GetIsSpinAttack ( )","text":"","tags":["Class"]},{"location":"EntityKnife.html#getisswinging","title":"GetIsSwinging ()","text":"","tags":["Class"]},{"location":"EntityKnife.html#boolean-getisswinging","title":"boolean GetIsSwinging ( )","text":"","tags":["Class"]},{"location":"EntityKnife.html#ismultidimensionaltouched","title":"IsMultidimensionalTouched ()","text":"","tags":["Class"]},{"location":"EntityKnife.html#boolean-ismultidimensionaltouched","title":"boolean IsMultidimensionalTouched ( )","text":"<p>Returns if the knife was created through the Multi Dimensional Baby effect.</p>","tags":["Class"]},{"location":"EntityKnife.html#isprismtouched","title":"IsPrismTouched ()","text":"","tags":["Class"]},{"location":"EntityKnife.html#boolean-isprismtouched","title":"boolean IsPrismTouched ( )","text":"<p>Returns if the knife was created through the Angelic Prism effect.</p>","tags":["Class"]},{"location":"EntityKnife.html#setisspinattack","title":"SetIsSpinAttack ()","text":"","tags":["Class"]},{"location":"EntityKnife.html#void-setisspinattack-boolean-isspinattack","title":"void SetIsSpinAttack ( boolean isSpinAttack )","text":"","tags":["Class"]},{"location":"EntityKnife.html#setisswinging","title":"SetIsSwinging ()","text":"","tags":["Class"]},{"location":"EntityKnife.html#void-setisswinging-boolean-isswinging","title":"void SetIsSwinging ( boolean isSwinging )","text":"","tags":["Class"]},{"location":"EntityKnife.html#setmultidimensionaltouched","title":"SetMultidimensionalTouched ()","text":"","tags":["Class"]},{"location":"EntityKnife.html#void-setmultidimensionaltouched-boolean-istouched","title":"void SetMultidimensionalTouched ( boolean IsTouched )","text":"<p>Sets if the knife was created through the Angelic Prism effect.</p>","tags":["Class"]},{"location":"EntityKnife.html#setprismtouched","title":"SetPrismTouched ()","text":"","tags":["Class"]},{"location":"EntityKnife.html#void-setprismtouched-boolean-istouched","title":"void SetPrismTouched ( boolean IsTouched )","text":"<p>Sets if the knife was created through the Angelic Prism effect.</p>","tags":["Class"]},{"location":"EntityLaser.html","title":"Class \"EntityLaser\"","text":"","tags":["Class"]},{"location":"EntityLaser.html#class-diagram","title":"Class Diagram","text":"<pre><code>    classDiagram\n    class Entity:::diagramCurrentPage\n    class EntityBomb\n    class EntityEffect\n    class EntityFamiliar\n    class EntityKnife\n    class EntityLaser\n    class EntityNPC\n    class EntityPickup\n    class EntityPlayer\n    class EntityProjectile\n    class EntitySlot\n    class EntityTear\n    Entity &lt;|-- EntityBomb\n    Entity &lt;|-- EntityEffect\n    Entity &lt;|-- EntityFamiliar\n    Entity &lt;|-- EntityKnife\n    Entity &lt;|-- EntityLaser\n    Entity &lt;|-- EntityNPC\n    Entity &lt;|-- EntityPickup\n    Entity &lt;|-- EntityPlayer\n    Entity &lt;|-- EntityProjectile\n    Entity &lt;|-- EntitySlot\n    Entity &lt;|-- EntityTear\n    link Entity \"https://wofsauge.github.io/IsaacDocs/rep/Entity.html\" \"Go to page for 'Entity' class\"\n    link EntityBomb \"https://wofsauge.github.io/IsaacDocs/rep/EntityBomb.html\" \"Go to page for 'EntityBomb' class\"\n    link EntityEffect \"https://wofsauge.github.io/IsaacDocs/rep/EntityEffect.html\" \"Go to page for 'EntityEffect' class\"\n    link EntityFamiliar \"https://wofsauge.github.io/IsaacDocs/rep/EntityFamiliar.html\" \"Go to page for 'EntityFamiliar' class\"\n    link EntityKnife \"https://wofsauge.github.io/IsaacDocs/rep/EntityKnife.html\" \"Go to page for 'EntityKnife' class\"\n    link EntityLaser \"EntityLaser.html\" \"Go to page for 'EntityLaser' class\"\n    link EntityNPC \"EntityNPC.html\" \"Go to page for 'EntityNPC' class\"\n    link EntityPickup \"EntityPickup.html\" \"Go to page for 'EntityPickup' class\"\n    link EntityPlayer \"EntityPlayer.html\" \"Go to page for 'EntityPlayer' class\"\n    link EntityProjectile \"https://wofsauge.github.io/IsaacDocs/rep/EntityProjectile.html\" \"Go to page for 'EntityProjectile' class\"\n    link EntitySlot \"EntitySlot.html\" \"Go to page for 'EntitySlot' class\"\n    link EntityTear \"https://wofsauge.github.io/IsaacDocs/rep/EntityTear.html\" \"Go to page for 'EntityTear' class\"</code></pre>","tags":["Class"]},{"location":"EntityLaser.html#modified-variables","title":"Modified Variables","text":"","tags":["Class"]},{"location":"EntityLaser.html#homingtype","title":"HomingType","text":"","tags":["Class"]},{"location":"EntityLaser.html#int-homingtype","title":"int HomingType","text":"<p>Same as default, but now returns a proper integer value instead of userdata.</p>","tags":["Class"]},{"location":"EntityLaser.html#functions","title":"Functions","text":"","tags":["Class"]},{"location":"EntityLaser.html#getdamagemultiplier","title":"GetDamageMultiplier ()","text":"","tags":["Class"]},{"location":"EntityLaser.html#float-getdamagemultiplier","title":"float GetDamageMultiplier ( )","text":"","tags":["Class"]},{"location":"EntityLaser.html#getdisablefollowparent","title":"GetDisableFollowParent ()","text":"","tags":["Class"]},{"location":"EntityLaser.html#boolean-getdisablefollowparent","title":"boolean GetDisableFollowParent ( )","text":"","tags":["Class"]},{"location":"EntityLaser.html#gethitlist","title":"GetHitList ()","text":"","tags":["Class"]},{"location":"EntityLaser.html#int-gethitlist","title":"int GetHitList ( )","text":"","tags":["Class"]},{"location":"EntityLaser.html#getonehit","title":"GetOneHit ()","text":"","tags":["Class"]},{"location":"EntityLaser.html#boolean-getonehit","title":"boolean GetOneHit ( )","text":"","tags":["Class"]},{"location":"EntityLaser.html#getscale","title":"GetScale ()","text":"","tags":["Class"]},{"location":"EntityLaser.html#float-getscale","title":"float GetScale ( )","text":"","tags":["Class"]},{"location":"EntityLaser.html#getshrink","title":"GetShrink ()","text":"","tags":["Class"]},{"location":"EntityLaser.html#boolean-getshrink","title":"boolean GetShrink ( )","text":"","tags":["Class"]},{"location":"EntityLaser.html#gettimeout","title":"GetTimeout ()","text":"","tags":["Class"]},{"location":"EntityLaser.html#int-gettimeout","title":"int GetTimeout ( )","text":"","tags":["Class"]},{"location":"EntityLaser.html#ismultidimensionaltouched","title":"IsMultidimensionalTouched ()","text":"","tags":["Class"]},{"location":"EntityLaser.html#boolean-ismultidimensionaltouched","title":"boolean IsMultidimensionalTouched ( )","text":"<p>Returns if the laser was created through the Multi Dimensional Baby effect.</p>","tags":["Class"]},{"location":"EntityLaser.html#isprismtouched","title":"IsPrismTouched ()","text":"","tags":["Class"]},{"location":"EntityLaser.html#boolean-isprismtouched","title":"boolean IsPrismTouched ( )","text":"<p>Returns if the laser was created through the Angelic Prism effect.</p>","tags":["Class"]},{"location":"EntityLaser.html#recalculatesamplesnextupdate","title":"RecalculateSamplesNextUpdate ()","text":"","tags":["Class"]},{"location":"EntityLaser.html#void-recalculatesamplesnextupdate","title":"void RecalculateSamplesNextUpdate ( )","text":"<p>Requests the laser's shape to be fully recalculated next time it updates. Can be used to force the laser to instantly change its MaxDistance/Radius instead of transitioning to it. No effect for OneHit or non-sample lasers.</p>","tags":["Class"]},{"location":"EntityLaser.html#resetspritescale","title":"ResetSpriteScale ()","text":"","tags":["Class"]},{"location":"EntityLaser.html#void-resetspritescale","title":"void ResetSpriteScale ( )","text":"","tags":["Class"]},{"location":"EntityLaser.html#rotatetoangle","title":"RotateToAngle ()","text":"","tags":["Class"]},{"location":"EntityLaser.html#void-rotatetoangle-float-angle-float-speed-80","title":"void RotateToAngle ( float Angle, float Speed = 8.0 )","text":"","tags":["Class"]},{"location":"EntityLaser.html#setdamagemultiplier","title":"SetDamageMultiplier ()","text":"","tags":["Class"]},{"location":"EntityLaser.html#void-setdamagemultiplier-float-damagemult","title":"void SetDamageMultiplier ( float DamageMult )","text":"","tags":["Class"]},{"location":"EntityLaser.html#setdisablefollowparent","title":"SetDisableFollowParent ()","text":"","tags":["Class"]},{"location":"EntityLaser.html#void-setdisablefollowparent-boolean-value","title":"void SetDisableFollowParent ( boolean Value )","text":"","tags":["Class"]},{"location":"EntityLaser.html#setprismtouched","title":"SetPrismTouched ()","text":"","tags":["Class"]},{"location":"EntityLaser.html#void-setprismtouched-boolean-istouched","title":"void SetPrismTouched ( boolean IsTouched )","text":"<p>Sets if the laser was created through the Angelic Prism effect.</p>","tags":["Class"]},{"location":"EntityLaser.html#setscale","title":"SetScale ()","text":"","tags":["Class"]},{"location":"EntityLaser.html#void-setscale-float-value","title":"void SetScale ( float Value )","text":"","tags":["Class"]},{"location":"EntityLaser.html#setshrink","title":"SetShrink ()","text":"","tags":["Class"]},{"location":"EntityLaser.html#void-setshrink-boolean-value","title":"void SetShrink ( boolean Value )","text":"","tags":["Class"]},{"location":"EntityLaser.html#settimeout","title":"SetTimeout ()","text":"","tags":["Class"]},{"location":"EntityLaser.html#void-settimeout-int-value","title":"void SetTimeout ( int Value )","text":"","tags":["Class"]},{"location":"EntityNPC.html","title":"Class \"EntityNPC\"","text":"","tags":["Class"]},{"location":"EntityNPC.html#class-diagram","title":"Class Diagram","text":"<pre><code>    classDiagram\n    class Entity:::diagramCurrentPage\n    class EntityBomb\n    class EntityEffect\n    class EntityFamiliar\n    class EntityKnife\n    class EntityLaser\n    class EntityNPC\n    class EntityPickup\n    class EntityPlayer\n    class EntityProjectile\n    class EntitySlot\n    class EntityTear\n    Entity &lt;|-- EntityBomb\n    Entity &lt;|-- EntityEffect\n    Entity &lt;|-- EntityFamiliar\n    Entity &lt;|-- EntityKnife\n    Entity &lt;|-- EntityLaser\n    Entity &lt;|-- EntityNPC\n    Entity &lt;|-- EntityPickup\n    Entity &lt;|-- EntityPlayer\n    Entity &lt;|-- EntityProjectile\n    Entity &lt;|-- EntitySlot\n    Entity &lt;|-- EntityTear\n    link Entity \"https://wofsauge.github.io/IsaacDocs/rep/Entity.html\" \"Go to page for 'Entity' class\"\n    link EntityBomb \"https://wofsauge.github.io/IsaacDocs/rep/EntityBomb.html\" \"Go to page for 'EntityBomb' class\"\n    link EntityEffect \"https://wofsauge.github.io/IsaacDocs/rep/EntityEffect.html\" \"Go to page for 'EntityEffect' class\"\n    link EntityFamiliar \"https://wofsauge.github.io/IsaacDocs/rep/EntityFamiliar.html\" \"Go to page for 'EntityFamiliar' class\"\n    link EntityKnife \"https://wofsauge.github.io/IsaacDocs/rep/EntityKnife.html\" \"Go to page for 'EntityKnife' class\"\n    link EntityLaser \"EntityLaser.html\" \"Go to page for 'EntityLaser' class\"\n    link EntityNPC \"EntityNPC.html\" \"Go to page for 'EntityNPC' class\"\n    link EntityPickup \"EntityPickup.html\" \"Go to page for 'EntityPickup' class\"\n    link EntityPlayer \"EntityPlayer.html\" \"Go to page for 'EntityPlayer' class\"\n    link EntityProjectile \"https://wofsauge.github.io/IsaacDocs/rep/EntityProjectile.html\" \"Go to page for 'EntityProjectile' class\"\n    link EntitySlot \"EntitySlot.html\" \"Go to page for 'EntitySlot' class\"\n    link EntityTear \"https://wofsauge.github.io/IsaacDocs/rep/EntityTear.html\" \"Go to page for 'EntityTear' class\"</code></pre>","tags":["Class"]},{"location":"EntityNPC.html#modified-functions","title":"Modified Functions","text":"","tags":["Class"]},{"location":"EntityNPC.html#playsound","title":"PlaySound ()","text":"","tags":["Class"]},{"location":"EntityNPC.html#void-playsound-int-id-float-volume-10-int-framedelay-2-boolean-loop-true-float-pitch-10","title":"void PlaySound ( int ID, float Volume = 1.0, int FrameDelay = 2, boolean Loop = true, float Pitch = 1.0 )","text":"<p>All arguments besides <code>ID</code> are now optional.</p>","tags":["Class"]},{"location":"EntityNPC.html#functions","title":"Functions","text":"","tags":["Class"]},{"location":"EntityNPC.html#clearflyingoverride","title":"ClearFlyingOverride ()","text":"","tags":["Class"]},{"location":"EntityNPC.html#void-clearflyingoverride","title":"void ClearFlyingOverride ( )","text":"<p>Removes any value set by SetFlyingOverride</p>","tags":["Class"]},{"location":"EntityNPC.html#firebossprojectilesex","title":"FireBossProjectilesEx ()","text":"","tags":["Class"]},{"location":"EntityNPC.html#entityprojectile-firebossprojectilesex-int-numprojectiles-vector-targetpos-float-trajectorymodifier-projectileparams-params","title":"EntityProjectile[] FireBossProjectilesEx ( int NumProjectiles, Vector TargetPos, float TrajectoryModifier, ProjectileParams Params )","text":"<p>Same as FireBossProjectiles, but returns a table containing the list of spawned projectiles.</p>","tags":["Class"]},{"location":"EntityNPC.html#firegridentity","title":"FireGridEntity ()","text":"","tags":["Class"]},{"location":"EntityNPC.html#entityprojectile-firegridentity-sprite-gridentitysprite-gridentitydesc-gridentitydesc-vector-velocity-backdroptype-backdrop-backdroptypebasement","title":"EntityProjectile FireGridEntity ( Sprite GridEntitySprite, GridEntityDesc GridEntityDesc, Vector Velocity, BackdropType Backdrop = BackdropType.BASEMENT )","text":"","tags":["Class"]},{"location":"EntityNPC.html#fireprojectilesex","title":"FireProjectilesEx ()","text":"","tags":["Class"]},{"location":"EntityNPC.html#entityprojectile-fireprojectilesex-vector-position-vector-velocity-projectilesmode-mode-projectileparams-params","title":"EntityProjectile[] FireProjectilesEx (Vector Position, Vector Velocity, ProjectilesMode Mode, ProjectileParams Params)","text":"<p>Same as FireProjectiles, but returns a table containing the list of spawned projectiles.</p>","tags":["Class"]},{"location":"EntityNPC.html#getbosscoloridx","title":"GetBossColorIdx ()","text":"","tags":["Class"]},{"location":"EntityNPC.html#int-getbosscoloridx","title":"int GetBossColorIdx ( )","text":"<p>Returns the returns the bosscoloridx(which is usually just the subtype) or -1 if its not a bosscolor (or bosscolor doesnt apply).</p>","tags":["Class"]},{"location":"EntityNPC.html#getcontrollerid","title":"GetControllerId ()","text":"","tags":["Class"]},{"location":"EntityNPC.html#int-getcontrollerid","title":"int GetControllerId ( )","text":"<p>Returns the ControllerId for the NPC, which indicates which player is controlling it. Will return <code>-1</code> when not being controlled by any player.</p>","tags":["Class"]},{"location":"EntityNPC.html#getdarkredchampionregentimer","title":"GetDarkRedChampionRegenTimer ()","text":"","tags":["Class"]},{"location":"EntityNPC.html#int-getdarkredchampionregentimer","title":"int GetDarkRedChampionRegenTimer ( )","text":"","tags":["Class"]},{"location":"EntityNPC.html#getdirtcolor","title":"GetDirtColor ()","text":"","tags":["Class"]},{"location":"EntityNPC.html#color-getdirtcolor","title":"Color GetDirtColor ( )","text":"<p>Returns the dynamic dirt color of the entity. This lets entities like Nightcrawler blend in to the environment.</p>","tags":["Class"]},{"location":"EntityNPC.html#getfireplaceloot","title":"GetFireplaceLoot ()","text":"","tags":["Class"]},{"location":"EntityNPC.html#lootlist-getfireplaceloot","title":"LootList GetFireplaceLoot ( )","text":"<p>Returns the unique LootList used by Fireplaces.</p>","tags":["Class"]},{"location":"EntityNPC.html#gethitlist","title":"GetHitList ()","text":"","tags":["Class"]},{"location":"EntityNPC.html#int-gethitlist","title":"int[] GetHitList ( )","text":"","tags":["Class"]},{"location":"EntityNPC.html#getshieldstrength","title":"GetShieldStrength ()","text":"","tags":["Class"]},{"location":"EntityNPC.html#float-getshieldstrength","title":"float GetShieldStrength ( )","text":"","tags":["Class"]},{"location":"EntityNPC.html#getshopkeeperloot","title":"GetShopkeeperLoot ()","text":"","tags":["Class"]},{"location":"EntityNPC.html#lootlist-getshopkeeperloot","title":"LootList GetShopkeeperLoot ( )","text":"<p>Returns the unique LootList used by Shopkeepers.</p>","tags":["Class"]},{"location":"EntityNPC.html#getsirenplayerentity","title":"GetSirenPlayerEntity ()","text":"","tags":["Class"]},{"location":"EntityNPC.html#entityplayer-getsirenplayerentity","title":"EntityPlayer GetSirenPlayerEntity ( )","text":"","tags":["Class"]},{"location":"EntityNPC.html#isbosscolor","title":"IsBossColor ()","text":"","tags":["Class"]},{"location":"EntityNPC.html#boolean-isbosscolor","title":"boolean IsBossColor ( )","text":"","tags":["Class"]},{"location":"EntityNPC.html#replacespritesheet","title":"ReplaceSpritesheet ()","text":"","tags":["Class"]},{"location":"EntityNPC.html#void-replacespritesheet-int-layerid-string-pngfilename-bool-loadgraphics-false","title":"void ReplaceSpritesheet ( int LayerId, string PngFilename, bool LoadGraphics = false )","text":"<p>Similar to Sprite.ReplaceSpritesheet(). Appends \"_champion\"/stage suffix to <code>PngFilename</code> if possible.</p>","tags":["Class"]},{"location":"EntityNPC.html#setcontrollerid","title":"SetControllerId ()","text":"","tags":["Class"]},{"location":"EntityNPC.html#int-setcontrollerid-int-controllerid","title":"int SetControllerId ( int ControllerId )","text":"<p>Sets the ControllerId for the NPC, which indicates which player will control it. Set it to <code>-1</code> for no player controls (back to normal behaviour).</p>","tags":["Class"]},{"location":"EntityNPC.html#setflyingoverride","title":"SetFlyingOverride ()","text":"","tags":["Class"]},{"location":"EntityNPC.html#void-setflyingoverride-boolean-canfly","title":"void SetFlyingOverride ( boolean CanFly )","text":"<p>Sets an override to the return value of IsFlying, which is normally based on EntityGridCollisionClass. Can be used to make grounded enemies ignore creep, or flying enemies get hit by creep.</p>","tags":["Class"]},{"location":"EntityNPC.html#setshieldstrength","title":"SetShieldStrength ()","text":"","tags":["Class"]},{"location":"EntityNPC.html#void-setshieldstrength-float-strength","title":"void SetShieldStrength ( float Strength )","text":"","tags":["Class"]},{"location":"EntityNPC.html#shootmaggotprojectile","title":"ShootMaggotProjectile ()","text":"","tags":["Class"]},{"location":"EntityNPC.html#static-const-entitynpc-shootmaggotprojectile-vector-position-vector-target-float-fallingspeed-80-float-yoffset-240","title":"static const EntityNPC ShootMaggotProjectile ( Vector Position, Vector Target, float FallingSpeed = -8.0, float YOffset = -24.0 )","text":"","tags":["Class"]},{"location":"EntityNPC.html#spawnbloodcloud","title":"SpawnBloodCloud ()","text":"","tags":["Class"]},{"location":"EntityNPC.html#entityeffect-spawnbloodcloud-vector-position-color-color","title":"EntityEffect SpawnBloodCloud ( Vector Position, Color Color )","text":"","tags":["Class"]},{"location":"EntityNPC.html#spawnbloodsplash","title":"SpawnBloodSplash ()","text":"","tags":["Class"]},{"location":"EntityNPC.html#void-spawnbloodsplash","title":"void SpawnBloodSplash ( )","text":"","tags":["Class"]},{"location":"EntityNPC.html#throwleech","title":"ThrowLeech ()","text":"","tags":["Class"]},{"location":"EntityNPC.html#static-const-entitynpc-throwleech-vector-position-entity-source-vector-target-float-yposoffset-100-boolean-big-false","title":"static const EntityNPC ThrowLeech ( Vector Position, Entity Source, Vector Target, float YPosOffset = -10.0, boolean Big = false )","text":"","tags":["Class"]},{"location":"EntityNPC.html#throwmaggot","title":"ThrowMaggot ()","text":"","tags":["Class"]},{"location":"EntityNPC.html#static-const-entitynpc-throwmaggot-vector-origin-vector-velocity-float-yoffset-100-float-fallspeed-80","title":"static const EntityNPC ThrowMaggot ( Vector Origin, Vector Velocity, float YOffset = -10.0, float FallSpeed = -8.0 )","text":"","tags":["Class"]},{"location":"EntityNPC.html#throwmaggotatpos","title":"ThrowMaggotAtPos ()","text":"","tags":["Class"]},{"location":"EntityNPC.html#static-const-entitynpc-throwmaggotatpos-vector-origin-vector-target-float-yoffset-80","title":"static const EntityNPC ThrowMaggotAtPos ( Vector Origin, Vector Target, float YOffset = -8.0 )","text":"","tags":["Class"]},{"location":"EntityNPC.html#throwrockspider","title":"ThrowRockSpider ()","text":"","tags":["Class"]},{"location":"EntityNPC.html#static-const-entitynpc-throwrockspider-vector-position-entity-source-vector-velocity-int-variant-0-float-yposoffset-100","title":"static const EntityNPC ThrowRockSpider ( Vector Position, Entity Source, Vector Velocity, int Variant = 0, float YPosOffset = -10.0 )","text":"","tags":["Class"]},{"location":"EntityNPC.html#throwstrider","title":"ThrowStrider ()","text":"","tags":["Class"]},{"location":"EntityNPC.html#static-const-entitynpc-throwstrider-vector-position-entity-source-vector-target","title":"static const EntityNPC ThrowStrider ( Vector Position, Entity Source, Vector Target )","text":"","tags":["Class"]},{"location":"EntityNPC.html#tryforcetarget","title":"TryForceTarget ()","text":"","tags":["Class"]},{"location":"EntityNPC.html#boolean-tryforcetarget-entity-target-int-duration","title":"boolean TryForceTarget ( Entity Target, int Duration )","text":"<p>Used by Lost Fly to force this NPC to focus on a specific target.</p>","tags":["Class"]},{"location":"EntityNPC.html#trysplit","title":"TrySplit ()","text":"","tags":["Class"]},{"location":"EntityNPC.html#boolean-trysplit-float-defaultdamage-entityref-source-boolean-doscreeneffects-true","title":"boolean TrySplit ( float DefaultDamage, EntityRef Source, boolean DoScreenEffects = true )","text":"<p>Will attempt to split the enemy in two like the Meat Cleaver collectible. Returns <code>false</code> if the enemy dies from the damage before they split, <code>true</code> otherwise.</p>","tags":["Class"]},{"location":"EntityNPC.html#trythrow","title":"TryThrow ()","text":"","tags":["Class"]},{"location":"EntityNPC.html#boolean-trythrow-entityref-source-vector-direction-float-force","title":"boolean TryThrow ( EntityRef Source, Vector Direction, float Force )","text":"Info <p><code>Force</code> only applies to NPC poop (it's modified and then used as V1.y, with V1.x being -20.0) and may be incorrect. This needs further investigation.</p>","tags":["Class"]},{"location":"EntityNPC.html#updatedirtcolor","title":"UpdateDirtColor ()","text":"","tags":["Class"]},{"location":"EntityNPC.html#void-updatedirtcolor-boolean-immediate","title":"void UpdateDirtColor ( boolean Immediate )","text":"<p>Instructs the entity to update its dirt color. This is generally done automatically on vanilla entities, but up until now, modded ones have been quite limited in this regard.</p> <p>If <code>Immediate</code> is set, the dirt color will be set to exactly what is beneath the entity. Otherwise, it will be updated smoothly over the course of multiple frames.</p>","tags":["Class"]},{"location":"EntityNPC.html#variables","title":"Variables","text":"","tags":["Class"]},{"location":"EntityNPC.html#v1","title":"V1","text":"","tags":["Class"]},{"location":"EntityNPC.html#vector-v1","title":"Vector V1","text":"<p>Fix of original function that now correctly returns a pointer to the Vector.</p>","tags":["Class"]},{"location":"EntityNPC.html#v2","title":"V2","text":"","tags":["Class"]},{"location":"EntityNPC.html#vector-v2","title":"Vector V2","text":"<p>Fix of original function that now correctly returns a pointer to the Vector.</p>","tags":["Class"]},{"location":"EntityPickup.html","title":"Class \"EntityPickup\"","text":"","tags":["Class"]},{"location":"EntityPickup.html#class-diagram","title":"Class Diagram","text":"<pre><code>    classDiagram\n    class Entity:::diagramCurrentPage\n    class EntityBomb\n    class EntityEffect\n    class EntityFamiliar\n    class EntityKnife\n    class EntityLaser\n    class EntityNPC\n    class EntityPickup\n    class EntityPlayer\n    class EntityProjectile\n    class EntitySlot\n    class EntityTear\n    Entity &lt;|-- EntityBomb\n    Entity &lt;|-- EntityEffect\n    Entity &lt;|-- EntityFamiliar\n    Entity &lt;|-- EntityKnife\n    Entity &lt;|-- EntityLaser\n    Entity &lt;|-- EntityNPC\n    Entity &lt;|-- EntityPickup\n    Entity &lt;|-- EntityPlayer\n    Entity &lt;|-- EntityProjectile\n    Entity &lt;|-- EntitySlot\n    Entity &lt;|-- EntityTear\n    link Entity \"https://wofsauge.github.io/IsaacDocs/rep/Entity.html\" \"Go to page for 'Entity' class\"\n    link EntityBomb \"https://wofsauge.github.io/IsaacDocs/rep/EntityBomb.html\" \"Go to page for 'EntityBomb' class\"\n    link EntityEffect \"https://wofsauge.github.io/IsaacDocs/rep/EntityEffect.html\" \"Go to page for 'EntityEffect' class\"\n    link EntityFamiliar \"https://wofsauge.github.io/IsaacDocs/rep/EntityFamiliar.html\" \"Go to page for 'EntityFamiliar' class\"\n    link EntityKnife \"https://wofsauge.github.io/IsaacDocs/rep/EntityKnife.html\" \"Go to page for 'EntityKnife' class\"\n    link EntityLaser \"EntityLaser.html\" \"Go to page for 'EntityLaser' class\"\n    link EntityNPC \"EntityNPC.html\" \"Go to page for 'EntityNPC' class\"\n    link EntityPickup \"EntityPickup.html\" \"Go to page for 'EntityPickup' class\"\n    link EntityPlayer \"EntityPlayer.html\" \"Go to page for 'EntityPlayer' class\"\n    link EntityProjectile \"https://wofsauge.github.io/IsaacDocs/rep/EntityProjectile.html\" \"Go to page for 'EntityProjectile' class\"\n    link EntitySlot \"EntitySlot.html\" \"Go to page for 'EntitySlot' class\"\n    link EntityTear \"https://wofsauge.github.io/IsaacDocs/rep/EntityTear.html\" \"Go to page for 'EntityTear' class\"</code></pre>","tags":["Class"]},{"location":"EntityPickup.html#functions","title":"Functions","text":"","tags":["Class"]},{"location":"EntityPickup.html#addcollectiblecycle","title":"AddCollectibleCycle ()","text":"","tags":["Class"]},{"location":"EntityPickup.html#boolean-addcollectiblecycle-int-id","title":"boolean AddCollectibleCycle ( int id )","text":"","tags":["Class"]},{"location":"EntityPickup.html#canreroll","title":"CanReroll ()","text":"","tags":["Class"]},{"location":"EntityPickup.html#boolean-canreroll","title":"boolean CanReroll ( )","text":"","tags":["Class"]},{"location":"EntityPickup.html#getalternatepedestal","title":"GetAlternatePedestal ()","text":"","tags":["Class"]},{"location":"EntityPickup.html#int-getalternatepedestal","title":"int GetAlternatePedestal ( )","text":"","tags":["Class"]},{"location":"EntityPickup.html#getcollectiblecycle","title":"GetCollectibleCycle ()","text":"","tags":["Class"]},{"location":"EntityPickup.html#collectibletype-getcollectiblecycle","title":"CollectibleType[] GetCollectibleCycle ( )","text":"<p>Returns a table of all CollectibleTypes being used inside its collectible cycle (i.e. Glitched Crown).</p>","tags":["Class"]},{"location":"EntityPickup.html#getdropdelay","title":"GetDropDelay ()","text":"","tags":["Class"]},{"location":"EntityPickup.html#int-getdropdelay","title":"int GetDropDelay ( )","text":"","tags":["Class"]},{"location":"EntityPickup.html#getlootlist","title":"GetLootList ()","text":"","tags":["Class"]},{"location":"EntityPickup.html#lootlist-getlootlist","title":"LootList GetLootList ( )","text":"<p>Returns a read-only version of the pickup's LootList. Loot inside pickups can be seen through use of the Guppy's Eye collectible.</p>","tags":["Class"]},{"location":"EntityPickup.html#getpickupghost","title":"GetPickupGhost ()","text":"","tags":["Class"]},{"location":"EntityPickup.html#entityeffect-getpickupghost","title":"EntityEffect GetPickupGhost ( )","text":"<p>Returns the <code>EffectVariant.PICKUP_GHOST</code> EntityEffect visible through Guppy's Eye. If not visible, returns <code>nil</code>.</p>","tags":["Class"]},{"location":"EntityPickup.html#getpricesprite","title":"GetPriceSprite ()","text":"","tags":["Class"]},{"location":"EntityPickup.html#sprite-getpricesprite","title":"Sprite GetPriceSprite ( )","text":"","tags":["Class"]},{"location":"EntityPickup.html#getrandompickupvelocity","title":"GetRandomPickupVelocity ()","text":"","tags":["Class"]},{"location":"EntityPickup.html#vector-getrandompickupvelocity-vector-position-rng-rng-nil-int-velocitytype-0","title":"Vector GetRandomPickupVelocity ( Vector Position, RNG RNG = nil, int VelocityType = 0 )","text":"<p><code>VelocityType</code> 0 will shoot pickups in a random direction around the wanted position. <code>VelocityType</code> 1 will shoot pickups in a cone pointing down, mostly used for Beggar payouts. <code>VelocityType</code> also seems to affect pickups in Challenge Rooms, causing them to have a weaker velocity.</p> Warning <p>This is a static function and must be called via <code>EntityPickup.GetRandomPickupVelocity(Position, RNG, VelocityType)</code>.</p>","tags":["Class"]},{"location":"EntityPickup.html#getvardata","title":"GetVarData ()","text":"","tags":["Class"]},{"location":"EntityPickup.html#int-getvardata","title":"int GetVarData ( )","text":"","tags":["Class"]},{"location":"EntityPickup.html#isblind","title":"IsBlind ()","text":"","tags":["Class"]},{"location":"EntityPickup.html#boolean-isblind","title":"boolean IsBlind ( )","text":"<p>Returns <code>true</code> if the pickup is a collectible pedestal and is hidden. Always returns <code>false</code> for non-collectible EntityPickups.</p> Warning <p>This value does not account for curse of the blind, it only reflects the blind state of pickups that are normally blind without curses involved. Ex: alt path's extra item.</p>","tags":["Class"]},{"location":"EntityPickup.html#makeshopitem","title":"MakeShopItem ()","text":"","tags":["Class"]},{"location":"EntityPickup.html#void-makeshopitem-int-shopitemid","title":"void MakeShopItem ( int ShopItemID )","text":"","tags":["Class"]},{"location":"EntityPickup.html#removecollectiblecycle","title":"RemoveCollectibleCycle ()","text":"","tags":["Class"]},{"location":"EntityPickup.html#void-removecollectiblecycle","title":"void RemoveCollectibleCycle ( )","text":"","tags":["Class"]},{"location":"EntityPickup.html#setalternatepedestal","title":"SetAlternatePedestal ()","text":"","tags":["Class"]},{"location":"EntityPickup.html#void-setalternatepedestal-int-pedestaltype","title":"void SetAlternatePedestal ( int PedestalType )","text":"<p>Sets the graphics of the item pedestal. Does nothing for non-collectible EntityPickups.</p>","tags":["Class"]},{"location":"EntityPickup.html#setdropdelay","title":"SetDropDelay ()","text":"","tags":["Class"]},{"location":"EntityPickup.html#void-setdropdelay-int-delay","title":"void SetDropDelay ( int Delay )","text":"","tags":["Class"]},{"location":"EntityPickup.html#setforceblind","title":"SetForceBlind ()","text":"","tags":["Class"]},{"location":"EntityPickup.html#void-setforceblind-boolean-setblind","title":"void SetForceBlind ( boolean SetBlind )","text":"<p>Hides pedestal items similar to Curse of the Blind. Does nothing for non-collectible EntityPickups.</p>","tags":["Class"]},{"location":"EntityPickup.html#setnewoptionspickupindex","title":"SetNewOptionsPickupIndex ()","text":"","tags":["Class"]},{"location":"EntityPickup.html#int-setnewoptionspickupindex","title":"int SetNewOptionsPickupIndex ( )","text":"<p>Returns the new pickup index.</p>","tags":["Class"]},{"location":"EntityPickup.html#setvardata","title":"SetVarData ()","text":"","tags":["Class"]},{"location":"EntityPickup.html#void-setvardata-int-vardata","title":"void SetVarData ( int VarData )","text":"","tags":["Class"]},{"location":"EntityPickup.html#triggertheresoptionspickup","title":"TriggerTheresOptionsPickup ()","text":"","tags":["Class"]},{"location":"EntityPickup.html#void-triggertheresoptionspickup","title":"void TriggerTheresOptionsPickup ( )","text":"<p>Removes pickups with the same option group (OptionsPickupIndex) as the target pickup.</p>","tags":["Class"]},{"location":"EntityPickup.html#tryflip","title":"TryFlip ()","text":"","tags":["Class"]},{"location":"EntityPickup.html#boolean-tryflip","title":"boolean TryFlip ( )","text":"<p>Will try to flip the collectible, such as when using the Flip item on a collectible pedestal with a second, holographic collectible present behind the first one. Returns <code>true</code> if successful, <code>false</code> otherwise or if used on non-collectible EntityPickups.</p>","tags":["Class"]},{"location":"EntityPickup.html#tryinitoptioncycle","title":"TryInitOptionCycle ()","text":"","tags":["Class"]},{"location":"EntityPickup.html#boolean-tryinitoptioncycle-int-numcycle","title":"boolean TryInitOptionCycle ( int NumCycle )","text":"<p>Causes the collectible pedestal to start cycling through the specified amount of collectibles, including its own collectible type.</p>","tags":["Class"]},{"location":"EntityPickup.html#tryremovecollectible","title":"TryRemoveCollectible ()","text":"","tags":["Class"]},{"location":"EntityPickup.html#boolean-tryremovecollectible","title":"boolean TryRemoveCollectible ( )","text":"<p>Attempts to remove the collectible from an item pedestal.</p> <p>Returns <code>true</code> if a collectible was successfully removed from the pedestal. Returns <code>false</code> if the pedestal was already empty, or if called on a non-collectible EntityPickup.</p>","tags":["Class"]},{"location":"EntityPickup.html#updatepickupghosts","title":"UpdatePickupGhosts ()","text":"","tags":["Class"]},{"location":"EntityPickup.html#void-updatepickupghosts","title":"void UpdatePickupGhosts ( )","text":"<p>Updates the <code>EffectVariant.PICKUP_GHOST</code> EntityEffect in accordance to the pickup's current LootList</p>","tags":["Class"]},{"location":"EntityPlayer.html","title":"Class \"EntityPlayer\"","text":"<p>This class contains both new functions and modified reimplementations of existing ones.</p>","tags":["Class"]},{"location":"EntityPlayer.html#class-diagram","title":"Class Diagram","text":"<pre><code>    classDiagram\n    class Entity:::diagramCurrentPage\n    class EntityBomb\n    class EntityEffect\n    class EntityFamiliar\n    class EntityKnife\n    class EntityLaser\n    class EntityNPC\n    class EntityPickup\n    class EntityPlayer\n    class EntityProjectile\n    class EntitySlot\n    class EntityTear\n    Entity &lt;|-- EntityBomb\n    Entity &lt;|-- EntityEffect\n    Entity &lt;|-- EntityFamiliar\n    Entity &lt;|-- EntityKnife\n    Entity &lt;|-- EntityLaser\n    Entity &lt;|-- EntityNPC\n    Entity &lt;|-- EntityPickup\n    Entity &lt;|-- EntityPlayer\n    Entity &lt;|-- EntityProjectile\n    Entity &lt;|-- EntitySlot\n    Entity &lt;|-- EntityTear\n    link Entity \"https://wofsauge.github.io/IsaacDocs/rep/Entity.html\" \"Go to page for 'Entity' class\"\n    link EntityBomb \"https://wofsauge.github.io/IsaacDocs/rep/EntityBomb.html\" \"Go to page for 'EntityBomb' class\"\n    link EntityEffect \"https://wofsauge.github.io/IsaacDocs/rep/EntityEffect.html\" \"Go to page for 'EntityEffect' class\"\n    link EntityFamiliar \"https://wofsauge.github.io/IsaacDocs/rep/EntityFamiliar.html\" \"Go to page for 'EntityFamiliar' class\"\n    link EntityKnife \"https://wofsauge.github.io/IsaacDocs/rep/EntityKnife.html\" \"Go to page for 'EntityKnife' class\"\n    link EntityLaser \"EntityLaser.html\" \"Go to page for 'EntityLaser' class\"\n    link EntityNPC \"EntityNPC.html\" \"Go to page for 'EntityNPC' class\"\n    link EntityPickup \"EntityPickup.html\" \"Go to page for 'EntityPickup' class\"\n    link EntityPlayer \"EntityPlayer.html\" \"Go to page for 'EntityPlayer' class\"\n    link EntityProjectile \"https://wofsauge.github.io/IsaacDocs/rep/EntityProjectile.html\" \"Go to page for 'EntityProjectile' class\"\n    link EntitySlot \"EntitySlot.html\" \"Go to page for 'EntitySlot' class\"\n    link EntityTear \"https://wofsauge.github.io/IsaacDocs/rep/EntityTear.html\" \"Go to page for 'EntityTear' class\"</code></pre>","tags":["Class"]},{"location":"EntityPlayer.html#modified-functions","title":"Modified Functions","text":"","tags":["Class"]},{"location":"EntityPlayer.html#addcacheflags","title":"AddCacheFlags ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#void-addcacheflags-cacheflag-cacheflag-boolean-evaluateitems-false","title":"void AddCacheFlags ( CacheFlag CacheFlag, boolean EvaluateItems = false )","text":"<p>Now accepts an optional <code>bool</code> to determine if EntityPlayer:EvaluateItems() should be automatically called after adding cache flags. In most cases, you'll want to do this.</p>","tags":["Class"]},{"location":"EntityPlayer.html#addcollectibleeffect","title":"AddCollectibleEffect, ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#void-addcollectibleeffect-collectibletype-ctype-bool-applycostume-int-cooldown-vanillacd-bool-additive-true","title":"void AddCollectibleEffect ( CollectibleType ctype, bool applycostume, int cooldown = vanillacd, bool additive = true )","text":"<p>Shortcut of TemporaryEffects:AddCollectibleEffect with extra args to handle cooldown. The additive parameter determines if the cooldown should be added to the preexistent cooldown value or if it should be set for that value. You can use negative cooldown values with additive to reduce preexistent cooldown.</p>","tags":["Class"]},{"location":"EntityPlayer.html#addnullitemeffect","title":"AddNullItemEffect, ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#void-addnullitemeffect-int-nullitemid-bool-applycostume-int-cooldown-vanillacd-bool-additive-true","title":"void AddNullItemEffect ( int nullItemid, bool applycostume, int cooldown = vanillacd, bool additive = true )","text":"<p>Shortcut of TemporaryEffects:AddNullItemEffect with extra args to handle cooldown. The additive parameter determines if the cooldown should be added to the preexistent cooldown value or if it should be set for that value. You can use negative cooldown values with additive to reduce preexistent cooldown.</p>","tags":["Class"]},{"location":"EntityPlayer.html#cleardeadeyecharge","title":"ClearDeadEyeCharge ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#void-cleardeadeyecharge-boolean-force-false","title":"void ClearDeadEyeCharge ( boolean Force = false )","text":"<p>Now accepts a <code>Force</code> argument to forcefully reset the charge instead of only rolling for a change to reset.</p>","tags":["Class"]},{"location":"EntityPlayer.html#getcollectiblenum","title":"GetCollectibleNum ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#int-getcollectiblenum-collectibletype-collectible-boolean-onlycounttrueitems-false-bool-ignorespoof-false","title":"int GetCollectibleNum ( CollectibleType Collectible, boolean OnlyCountTrueItems = false, bool IgnoreSpoof = false )","text":"<p>Now accepts a <code>IgnoreSpoof</code> argument that ignores innate items.</p>","tags":["Class"]},{"location":"EntityPlayer.html#getmultishotparams","title":"GetMultiShotParams ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#multishotparams-getmultishotparams-weapontype-weapontype","title":"MultiShotParams GetMultiShotParams ( WeaponType WeaponType )","text":"<p>Now returns a proper <code>MultiShotParams</code> object.</p>","tags":["Class"]},{"location":"EntityPlayer.html#getmultishotpositionvelocity","title":"GetMultiShotPositionVelocity ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#posvel-getmultishotpositionvelocity-int-loopindex-weapontype-weapontype-vector-shotdirection-float-shotspeed-multishotparams-params","title":"PosVel GetMultiShotPositionVelocity ( int LoopIndex, WeaponType WeaponType, Vector ShotDirection, float ShotSpeed, MultiShotParams Params )","text":"<p>This magically vanished from the API some time after 1.7.8.</p> <p>Compared to the vanilla function, this implementation has been further augmented to throw an error if LoopIndex is higher than MultiShotParams:GetNumTears().</p>","tags":["Class"]},{"location":"EntityPlayer.html#getpocketitem","title":"GetPocketItem ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#pocketitem-getpocketitem-pillcardslot-slot","title":"PocketItem GetPocketItem ( PillCardSlot Slot )","text":"<p>Gets the card/pill/rune in the specified pocket slot.</p> <p>Now returns a proper <code>PocketItem</code> object.</p>","tags":["Class"]},{"location":"EntityPlayer.html#hascollectible","title":"HasCollectible ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#boolean-hascollectible-collectibletype-collectible-boolean-ignoremodifiers-false-boolean-ignorespoof-false","title":"boolean HasCollectible ( CollectibleType Collectible, boolean IgnoreModifiers = false, boolean IgnoreSpoof = false )","text":"<p>Now accepts a <code>IgnoreSpoof</code> argument that ignores innate items.</p>","tags":["Class"]},{"location":"EntityPlayer.html#modified-variables","title":"Modified Variables","text":"","tags":["Class"]},{"location":"EntityPlayer.html#babyskin","title":"BabySkin","text":"","tags":["Class"]},{"location":"EntityPlayer.html#babysubtype-babyskin","title":"BabySubType BabySkin","text":"<p>Same as default, but now returns a proper integer value instead of userdata.</p>","tags":["Class"]},{"location":"EntityPlayer.html#functions","title":"Functions","text":"","tags":["Class"]},{"location":"EntityPlayer.html#addactivecharge","title":"AddActiveCharge ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#int-addactivecharge-int-charge-activeslot-slot-boolean-flashhud-true-boolean-overcharge-false-boolean-force-false","title":"int AddActiveCharge ( int Charge, ActiveSlot Slot, boolean FlashHUD = true, boolean Overcharge = false, boolean Force = false )","text":"<p>Returns the true amount of charge added, which may have been capped by the targeted item's MaxCharge.</p> Info <p><code>FlashHUD</code> appears to be redundant. Chargebar flashes regardless of using <code>true</code> or <code>false</code>.</p>","tags":["Class"]},{"location":"EntityPlayer.html#addboneorbital","title":"AddBoneOrbital ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#void-addboneorbital-vector-position","title":"void AddBoneOrbital ( Vector Position )","text":"","tags":["Class"]},{"location":"EntityPlayer.html#addcustomcachetag","title":"AddCustomCacheTag ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#void-addcustomcachetag-string-or-string-string-bool-evaluateitems-false","title":"void AddCustomCacheTag ( string OR {string, string, ...}, bool EvaluateItems = false )","text":"<p>Add CustomCacheTag(s) to be evaluated next time EvaluateItems runs (which is right now, if the optional boolean is passed).</p> <p>See items.xml for more information on custom caches.</p>","tags":["Class"]},{"location":"EntityPlayer.html#addinnatecollectible","title":"AddInnateCollectible ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#void-addinnatecollectible-collectibletype-collectible-int-amount-1","title":"void AddInnateCollectible ( CollectibleType Collectible, int Amount = 1 )","text":"Bug <p>Currently this function directly modifies the contents of WispCollectiblesList, so if this list was updated on wisp init/delete, or the player exits the run, your added innate items will not be saved.</p>","tags":["Class"]},{"location":"EntityPlayer.html#addleprosy","title":"AddLeprosy ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#void-addleprosy","title":"void AddLeprosy ( )","text":"Info <p>This is currently still capped at a max of three familiars, and would require further modification to change this.</p>","tags":["Class"]},{"location":"EntityPlayer.html#addlocust","title":"AddLocust ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#void-addlocust-collectibletype-collectible-vector-position","title":"void AddLocust ( CollectibleType Collectible, Vector Position )","text":"Supported Items <p>There are a few items which spawn unique locusts.</p> <ul> <li>Breakfast (default)</li> <li>The Inner Eye</li> <li>Spoon Bender</li> <li>Cricket's Head</li> <li>Number One</li> <li>Blood of the Martyr</li> <li>Halo of Flies</li> <li>The Common Cold</li> <li>Brimstone</li> <li>Ipecac</li> <li>Mutant Spider</li> <li>Fire Mind</li> <li>Scorpio</li> <li>Holy Light</li> <li>Jacob's Ladder</li> <li>120 Volt</li> </ul>","tags":["Class"]},{"location":"EntityPlayer.html#addsmeltedtrinket","title":"AddSmeltedTrinket ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#boolean-addsmeltedtrinket-trinkettype-trinket-boolean-firsttimepickingup-true","title":"boolean AddSmeltedTrinket ( TrinketType Trinket, boolean FirstTimePickingUp = true )","text":"<p>Adds a smelted trinket directly to the player's inventory.</p> <p>Returns <code>true</code> if the trinket was successfully added, otherwise <code>false</code>.</p>","tags":["Class"]},{"location":"EntityPlayer.html#addurnsouls","title":"AddUrnSouls ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#void-addurnsouls-int-count-0","title":"void AddUrnSouls ( int Count = 0 )","text":"","tags":["Class"]},{"location":"EntityPlayer.html#blockcollectible","title":"BlockCollectible ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#void-blockcollectible-collectibletype-collectible","title":"void BlockCollectible ( CollectibleType Collectible )","text":"<p>Blocks the provided CollectibleType. This will make it so the game thinks you don't have the item, even if it's in your inventory.</p>","tags":["Class"]},{"location":"EntityPlayer.html#canaddcollectibletoinventory","title":"CanAddCollectibleToInventory ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#boolean-canaddcollectibletoinventory-collectibletype-collectible","title":"boolean CanAddCollectibleToInventory ( CollectibleType Collectible )","text":"","tags":["Class"]},{"location":"EntityPlayer.html#cancrushrocks","title":"CanCrushRocks ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#boolean-cancrushrocks","title":"boolean CanCrushRocks ( )","text":"Info <p>Returns <code>true</code> if the player has one of the following items / effects / transformations.</p> <ul> <li>The Nail</li> <li>Leo</li> <li>Thunder Thighs</li> <li>Mega Mush</li> <li>Stompy</li> </ul>","tags":["Class"]},{"location":"EntityPlayer.html#canoverrideactiveitem","title":"CanOverrideActiveItem ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#boolean-canoverrideactiveitem-activeslot-slot","title":"boolean CanOverrideActiveItem ( ActiveSlot Slot )","text":"","tags":["Class"]},{"location":"EntityPlayer.html#canusepill","title":"CanUsePill ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#boolean-canusepill-pilleffect-id","title":"boolean CanUsePill ( PillEffect ID )","text":"<p>By some conditions, usually health-related, determines whether a player can use a given pill effect.</p>","tags":["Class"]},{"location":"EntityPlayer.html#checkfamiliarex","title":"CheckFamiliarEx ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#entityfamiliar-checkfamiliarex-int-familiarvariant-familiar-int-targetcount-rng-rng-itemconfigitem-sourceitemconfigitem-nil-int-familiarsubtype-1","title":"EntityFamiliar[] CheckFamiliarEx ( int FamiliarVariant Familiar, int TargetCount, RNG rng, ItemConfigItem SourceItemConfigItem = nil, int FamiliarSubType = -1 )","text":"<p>A version of CheckFamiliar that returns all familiars spawned by the function as a table.</p>","tags":["Class"]},{"location":"EntityPlayer.html#clearcollectibleanim","title":"ClearCollectibleAnim ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#void-clearcollectibleanim-collectibletype-collectible","title":"void ClearCollectibleAnim ( CollectibleType Collectible)","text":"","tags":["Class"]},{"location":"EntityPlayer.html#clearqueueitem","title":"ClearQueueItem ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#void-clearqueueitem","title":"void ClearQueueItem ( )","text":"","tags":["Class"]},{"location":"EntityPlayer.html#dropcollectible","title":"DropCollectible ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#void-dropcollectible-collectibletype-collectible-entitypickup-existingpedestal-nil-boolean-removefromplayerform-false","title":"void DropCollectible ( CollectibleType Collectible, EntityPickup ExistingPedestal = nil, boolean RemoveFromPlayerForm = false )","text":"<p>If <code>ExistingPedestal</code> is set, the collectible it contains will be swapped out for the dropped collectible instead of a new pedestal spawning.</p>","tags":["Class"]},{"location":"EntityPlayer.html#dropcollectiblebyhistoryindex","title":"DropCollectibleByHistoryIndex ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#entitypickup-dropcollectiblebyhistoryindex-int-idx-entitypickup-existingpedestal-nil","title":"EntityPickup DropCollectibleByHistoryIndex ( int Idx, EntityPickup ExistingPedestal = nil )","text":"<p>If <code>ExistingPedestal</code> is set, the collectible it contains will be swapped out for the dropped collectible instead of a new pedestal spawning.</p>","tags":["Class"]},{"location":"EntityPlayer.html#enableweapontype","title":"EnableWeaponType ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#void-enableweapontype-weapontype-weapon-boolean-set","title":"void EnableWeaponType ( WeaponType Weapon, boolean Set )","text":"","tags":["Class"]},{"location":"EntityPlayer.html#firebrimstoneball","title":"FireBrimstoneBall ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#entityeffect-firebrimstoneball-vector-position-vector-velocity-vector-offset-vectorzero","title":"EntityEffect FireBrimstoneBall ( Vector Position, Vector Velocity, Vector Offset = Vector.Zero )","text":"Info <p>If the player has Tech X, this function will fire an EntityLaser as well. The laser will have the Brimstone ball effect as a parent, it's unclear if the effect also links back to the laser.</p>","tags":["Class"]},{"location":"EntityPlayer.html#getactiveitemdesc","title":"GetActiveItemDesc ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#activeitemdesc-getactiveitemdesc-activeslot-slot-activeslotslot_primary","title":"ActiveItemDesc GetActiveItemDesc ( ActiveSlot Slot = ActiveSlot.SLOT_PRIMARY )","text":"","tags":["Class"]},{"location":"EntityPlayer.html#getactiveitemslot","title":"GetActiveItemSlot ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#activeslot-getactiveitemslot-collectibletype-collectible","title":"ActiveSlot GetActiveItemSlot ( CollectibleType Collectible )","text":"","tags":["Class"]},{"location":"EntityPlayer.html#getactivemaxcharge","title":"GetActiveMaxCharge ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#int-getactivemaxcharge-activeslot-slot","title":"int GetActiveMaxCharge ( ActiveSlot Slot )","text":"","tags":["Class"]},{"location":"EntityPlayer.html#getactiveminusablecharge","title":"GetActiveMinUsableCharge ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#int-getactiveminusablecharge-activeslot-slot","title":"int GetActiveMinUsableCharge ( ActiveSlot Slot )","text":"","tags":["Class"]},{"location":"EntityPlayer.html#getactiveweaponnumfired","title":"GetActiveWeaponNumFired ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#int-getactiveweaponnumfired","title":"int GetActiveWeaponNumFired ( )","text":"","tags":["Class"]},{"location":"EntityPlayer.html#getbagofcraftingcontent","title":"GetBagOfCraftingContent ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#bagofcraftingpickup-getbagofcraftingcontent","title":"BagOfCraftingPickup[] GetBagOfCraftingContent ( )","text":"","tags":["Class"]},{"location":"EntityPlayer.html#getbagofcraftingoutput","title":"GetBagOfCraftingOutput ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#collectibletype-getbagofcraftingoutput","title":"CollectibleType GetBagOfCraftingOutput ( )","text":"","tags":["Class"]},{"location":"EntityPlayer.html#getbagofcraftingslot","title":"GetBagOfCraftingSlot ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#bagofcraftingpickup-getbagofcraftingslot-int-slotid","title":"BagOfCraftingPickup GetBagOfCraftingSlot ( int SlotID )","text":"<p>Gets the current content of the bag in the given <code>SlotID</code>.</p>","tags":["Class"]},{"location":"EntityPlayer.html#getbladdercharge","title":"GetBladderCharge ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#int-getbladdercharge","title":"int GetBladderCharge ( )","text":"<p>Returns the current charge for when the player stops shooting and charges the Kidney Stone item.</p>","tags":["Class"]},{"location":"EntityPlayer.html#getbloodlustcounter","title":"GetBloodLustCounter ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#int-getbloodlustcounter","title":"int GetBloodLustCounter ( )","text":"","tags":["Class"]},{"location":"EntityPlayer.html#getbodymovedirection","title":"GetBodyMoveDirection ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#vector-getbodymovedirection","title":"Vector GetBodyMoveDirection ( )","text":"","tags":["Class"]},{"location":"EntityPlayer.html#getbombplacedelay","title":"GetBombPlaceDelay ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#int-getbombplacedelay","title":"int GetBombPlaceDelay ( )","text":"<p>Default bomb place delay is <code>30 frames</code>.</p>","tags":["Class"]},{"location":"EntityPlayer.html#getcambionconceptionstate","title":"GetCambionConceptionState ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#int-getcambionconceptionstate","title":"int GetCambionConceptionState ( )","text":"<p>Returns how many times the player has taken damage with the Cambion Conception item.</p>","tags":["Class"]},{"location":"EntityPlayer.html#getcambionpregnancylevel","title":"GetCambionPregnancyLevel ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#int-getcambionpregnancylevel","title":"int GetCambionPregnancyLevel ( )","text":"<p>Corresponds to the current visible state of Cambion Conception's costume (0-2).</p>","tags":["Class"]},{"location":"EntityPlayer.html#getcollectibleslist","title":"GetCollectiblesList ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#table-getcollectibleslist","title":"table GetCollectiblesList ( )","text":"<p>Returns a table with the amount of each collectible the player has, without counting innate items.</p> Example Code <p>This code prints how many sad onions the player has.</p> <pre><code>local collectiblesList = player:GetCollectiblesList()\n\nprint(collectiblesList[CollectibleType.COLLECTIBLE_SAD_ONION])\n</code></pre>","tags":["Class"]},{"location":"EntityPlayer.html#getconceptionfamiliarflags","title":"GetConceptionFamiliarFlags ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#int-getconceptionfamiliarflags","title":"int GetConceptionFamiliarFlags ( )","text":"<p>Returns the bitmask corresponding to which familiars have been spawned by Cambion/Immaculate Conception. The additional familiars provided by this bitmask are spawned during familiar cache evaluation, but only while the player has one of those two items.</p>","tags":["Class"]},{"location":"EntityPlayer.html#getcostumelayermap","title":"GetCostumeLayerMap ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#table-getcostumelayermap","title":"table GetCostumeLayerMap ( )","text":"<p>Returns table of player sprite layers data for costumes with the following fields:</p> Field Type Comment costumeIndex int Index of active/visible costume for that layer.  <code>-1</code> if no costume is on that layer. layerID int ID of the sprite's layer corresponding to its anm2 file. <code>-1</code> if no costume is on that layer. priority int Costume's priority as listed in <code>costumes2.xml</code>. <code>-1</code> if no costume is on that layer. isBodyLayer boolean <code>true</code> if the costume is a body costume. <code>false</code> if not or if no costume is on that layer. More Layer Map Info <p>The returned table's index order corresponds to PlayerSpriteLayer. However, due to the differences in the starting index of arrays between Lua and C++, CostumeLayerMap's index needs to be decreased by 1 and it's costumeIndex increased by 1 in order to get accurate information.</p> <p>Below is a snippet of code that displays all currently occupied costume layers. Prints are sectioned as such: PlayerSpriteLayer - Layer Name - Item Name/NullItemID - Anm2 filepath</p> Example Code <pre><code>local player = Isaac.GetPlayer()\nlocal map = Isaac.GetPlayer():GetCostumeLayerMap()\nprint(\"-------------------------------------------------------------------\")\nlocal costumeSpriteDescs = player:GetCostumeSpriteDescs()\nfor layer, mapData in ipairs(map) do\n    if mapData.costumeIndex == -1 then goto continue end\n    local costumeSpriteDesc = costumeSpriteDescs[mapData.costumeIndex + 1]\n    local sprite = costumeSpriteDesc:GetSprite()\n    local itemConfig = costumeSpriteDesc:GetItemConfig()\n    local layerName = sprite:GetLayer(mapData.layerID):GetName()\n    local costumeName = itemConfig.Name ~= \"\" and Isaac.GetString(\"Items\", itemConfig.Name) or \"NullItemID \"..itemConfig.ID\n    local spritePath = sprite:GetFilename()\n    print(layer - 1, \"-\", layerName, \"-\", costumeName, \"-\", spritePath)\n    ::continue::\nend\nprint(\"-------------------------------------------------------------------\")\n</code></pre>","tags":["Class"]},{"location":"EntityPlayer.html#getcostumespritedescs","title":"GetCostumeSpriteDescs ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#costumespritedesc-getcostumespritedescs","title":"CostumeSpriteDesc[] GetCostumeSpriteDescs ( )","text":"<p>Returns a table of CostumeSpriteDesc.</p>","tags":["Class"]},{"location":"EntityPlayer.html#getcustomcachevalue","title":"GetCustomCacheValue ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#float-getcustomcachevalue-string-customcachetag","title":"float GetCustomCacheValue ( string CustomCacheTag )","text":"<p>Returns the current cached value for the specified CustomCacheTag. Will return <code>0</code> by default if the provided tag has not been evaluated.</p> <p>See items.xml for more information on custom caches.</p>","tags":["Class"]},{"location":"EntityPlayer.html#getd8damagemodifier","title":"GetD8DamageModifier ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#int-getd8damagemodifier","title":"int GetD8DamageModifier ( )","text":"","tags":["Class"]},{"location":"EntityPlayer.html#getd8firedelaymodifier","title":"GetD8FireDelayModifier ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#int-getd8firedelaymodifier","title":"int GetD8FireDelayModifier ( )","text":"","tags":["Class"]},{"location":"EntityPlayer.html#getd8rangemodifier","title":"GetD8RangeModifier ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#int-getd8rangemodifier","title":"int GetD8RangeModifier ( )","text":"","tags":["Class"]},{"location":"EntityPlayer.html#getd8speedmodifier","title":"GetD8SpeedModifier ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#int-getd8speedmodifier","title":"int GetD8SpeedModifier ( )","text":"","tags":["Class"]},{"location":"EntityPlayer.html#getdamagemodifier","title":"GetDamageModifier ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#int-getdamagemodifier","title":"int GetDamageModifier ( )","text":"<p>Used for Experimental Treatment and for stat boosts from Void.</p> <p>Modifier is applied to the player as flat damage.</p> <p>Experimental Treatment adds <code>-1</code>, <code>0</code> or <code>1</code> depending on the damage rolled. Void may randomly add <code>1</code>.</p>","tags":["Class"]},{"location":"EntityPlayer.html#getdeadeyecharge","title":"GetDeadEyeCharge ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#int-getdeadeyecharge","title":"int GetDeadEyeCharge ( )","text":"","tags":["Class"]},{"location":"EntityPlayer.html#getdeathanimname","title":"GetDeathAnimName ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#string-getdeathanimname","title":"string GetDeathAnimName ( )","text":"<p>Returns the name of the player's death animation.</p> Return info <p>This can return the following strings:</p> <ul> <li><code>Death</code> - The regular death animation name.</li> <li><code>LostDeath</code> - When playing as the Lost, under the Lost Curse, playing as Forgotten's Soul, or in Tainted Jacob's Ghost form.</li> </ul>","tags":["Class"]},{"location":"EntityPlayer.html#getedendamage","title":"GetEdenDamage ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#float-getedendamage","title":"float GetEdenDamage ( )","text":"<p>Returns the offset of the player's damage stat for Eden's random stats.</p>","tags":["Class"]},{"location":"EntityPlayer.html#getedenfiredelay","title":"GetEdenFireDelay ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#float-getedenfiredelay","title":"float GetEdenFireDelay ( )","text":"<p>Returns the offset of the player's fire delay stat for Eden's random stats.</p>","tags":["Class"]},{"location":"EntityPlayer.html#getedenluck","title":"GetEdenLuck ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#float-getedenluck","title":"float GetEdenLuck ( )","text":"<p>Returns the offset of the player's luck stat for Eden's random stats.</p>","tags":["Class"]},{"location":"EntityPlayer.html#getedenrange","title":"GetEdenRange ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#float-getedenrange","title":"float GetEdenRange ( )","text":"<p>Returns the offset of the player's range stat for Eden's random stats.</p>","tags":["Class"]},{"location":"EntityPlayer.html#getedenshotspeed","title":"GetEdenShotSpeed ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#float-getedenshotspeed","title":"float GetEdenShotSpeed ( )","text":"<p>Returns the offset of the player's shot speed stat for Eden's random stats.</p>","tags":["Class"]},{"location":"EntityPlayer.html#getedenspeed","title":"GetEdenSpeed ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#float-getedenspeed","title":"float GetEdenSpeed ( )","text":"<p>Returns the offset of the player's speed stat for Eden's random stats.</p>","tags":["Class"]},{"location":"EntityPlayer.html#getenterposition","title":"GetEnterPosition ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#vector-getenterposition","title":"Vector GetEnterPosition ( )","text":"","tags":["Class"]},{"location":"EntityPlayer.html#getentityconfigplayer","title":"GetEntityConfigPlayer ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#entityconfigplayer-getentityconfigplayer","title":"EntityConfigPlayer GetEntityConfigPlayer ( )","text":"","tags":["Class"]},{"location":"EntityPlayer.html#getepiphoracharge","title":"GetEpiphoraCharge ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#int-getepiphoracharge","title":"int GetEpiphoraCharge ( )","text":"","tags":["Class"]},{"location":"EntityPlayer.html#getevesumptoriumcharge","title":"GetEveSumptoriumCharge ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#int-getevesumptoriumcharge","title":"int GetEveSumptoriumCharge ( )","text":"<p>Returns the current charge of Tainted Eve's innate Sumptorium ability.</p>","tags":["Class"]},{"location":"EntityPlayer.html#getfiredelaymodifier","title":"GetFireDelayModifier ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#int-getfiredelaymodifier","title":"int GetFireDelayModifier ( )","text":"<p>Used for Experimental Treatment and for stat boosts from Void.</p> <p>Grants <code>0.5 * modifier</code> flat tears per second to the player.</p> <p>Experimental Treatment adds <code>-1</code>, <code>0</code> or <code>1</code> depending on the fire delay rolled. Void may randomly add <code>1</code>.</p>","tags":["Class"]},{"location":"EntityPlayer.html#getflippedform","title":"GetFlippedForm ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#entityplayer-getflippedform","title":"EntityPlayer GetFlippedForm ( )","text":"<p>Returns flipped form of the current character. (only used for Tainted Lazarus)</p> <p>Otherwise, returns <code>nil</code>.</p>","tags":["Class"]},{"location":"EntityPlayer.html#getfocusentity","title":"GetFocusEntity ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#entity-getfocusentity","title":"Entity GetFocusEntity ( )","text":"<p>Returns the entity used by Active Camera to determine where the camera should focus. This can be either the Marked target EntityEffect or a weapon's entity.  If none of these exist, this returns <code>nil</code>.</p>","tags":["Class"]},{"location":"EntityPlayer.html#getfootprintcolor","title":"GetFootprintColor ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#kcolor-getfootprintcolor-boolean-leftfootprint","title":"KColor GetFootprintColor ( boolean LeftFootprint )","text":"","tags":["Class"]},{"location":"EntityPlayer.html#getglitchbabysubtype","title":"GetGlitchBabySubType ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#int-getglitchbabysubtype","title":"int GetGlitchBabySubType ( )","text":"","tags":["Class"]},{"location":"EntityPlayer.html#getglyphofbalancedrop","title":"GetGlyphOfBalanceDrop ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#table-getglyphofbalancedrop-int-variant-1-int-subtype-1","title":"table GetGlyphOfBalanceDrop ( int Variant = -1, int SubType = -1 )","text":"<p>Returns a table containing the variant and subtype of the possible Glyph of Balance drop.</p>","tags":["Class"]},{"location":"EntityPlayer.html#getgnawedleaftimer","title":"GetGnawedLeafTimer ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#int-getgnawedleaftimer","title":"int GetGnawedLeafTimer ( )","text":"","tags":["Class"]},{"location":"EntityPlayer.html#getgreedsgullethearts","title":"GetGreedsGulletHearts ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#int-getgreedsgullethearts","title":"int GetGreedsGulletHearts ( )","text":"","tags":["Class"]},{"location":"EntityPlayer.html#gethallowedgroundcountdown","title":"GetHallowedGroundCountdown ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#int-gethallowedgroundcountdown","title":"int GetHallowedGroundCountdown ( )","text":"<p>Returns the grace period countdown of retaining stats from the Hallowed Ground/Star of Bethlehem aura.</p>","tags":["Class"]},{"location":"EntityPlayer.html#getheaddirectionlocktime","title":"GetHeadDirectionLockTime ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#int-getheaddirectionlocktime","title":"int GetHeadDirectionLockTime ( )","text":"<p>How long the player's head should be forced to stay in its current direction. <code>-1</code> (or lower) indicates the direction is not currently locked.</p>","tags":["Class"]},{"location":"EntityPlayer.html#gethealthtype","title":"GetHealthType ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#healthtype-gethealthtype","title":"HealthType GetHealthType ( )","text":"","tags":["Class"]},{"location":"EntityPlayer.html#getheldentity","title":"GetHeldEntity ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#entity-getheldentity","title":"Entity GetHeldEntity ( )","text":"<p>Returns the Entity that the player is holding over their head, such as with throwable red bombs or Suplex! Returns <code>nil</code> if no entity is currently being held.</p>","tags":["Class"]},{"location":"EntityPlayer.html#getheldsprite","title":"GetHeldSprite ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#sprite-getheldsprite","title":"Sprite GetHeldSprite ( )","text":"<p>Gets the Sprite object used for when the player is doing an animation that involves holding a sprite over their head, such as active item usage.</p>","tags":["Class"]},{"location":"EntityPlayer.html#gethistory","title":"GetHistory ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#history-gethistory","title":"History GetHistory ( )","text":"","tags":["Class"]},{"location":"EntityPlayer.html#getimmaculateconceptionstate","title":"GetImmaculateConceptionState ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#int-getimmaculateconceptionstate","title":"int GetImmaculateConceptionState ( )","text":"<p>Returns how many hearts have been collected with the Immaculate Conception item. Resets to 0 after spawning a familiar/soul heart.</p>","tags":["Class"]},{"location":"EntityPlayer.html#getkeeperssackbonus","title":"GetKeepersSackBonus ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#int-getkeeperssackbonus","title":"int GetKeepersSackBonus ( )","text":"<p>Gets the number of coins spent while possessing Keeper's Sack.</p>","tags":["Class"]},{"location":"EntityPlayer.html#getlasercolor","title":"GetLaserColor ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#color-getlasercolor","title":"Color GetLaserColor ( )","text":"","tags":["Class"]},{"location":"EntityPlayer.html#getluckmodifier","title":"GetLuckModifier ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#int-getluckmodifier","title":"int GetLuckModifier ( )","text":"<p>Used for Experimental Treatment and for stat boosts from Void.</p> <p>The modifier is added directly to the player's Luck stat.</p> <p>Experimental Treatment adds <code>-1</code>, <code>0</code> or <code>1</code> depending on the luck rolled. Void may randomly add <code>1</code>.</p>","tags":["Class"]},{"location":"EntityPlayer.html#getmaggyswingcooldown","title":"GetMaggySwingCooldown ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#int-getmaggyswingcooldown","title":"int GetMaggySwingCooldown ( )","text":"<p>Returns the amount of frames left until Tainted Magdalene's swing attack from being damaged can be used again. Returns <code>0</code> if the player is not Tainted Magdalene.</p>","tags":["Class"]},{"location":"EntityPlayer.html#getmarkedtarget","title":"GetMarkedTarget ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#entityeffect-getmarkedtarget","title":"EntityEffect GetMarkedTarget ( )","text":"<p>Returns the entity effect representing the target of the Marked item.  If the target is not displayed on the ground, this function returns <code>nil</code>.</p>","tags":["Class"]},{"location":"EntityPlayer.html#getmaxbladdercharge","title":"GetMaxBladderCharge ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#int-getmaxbladdercharge","title":"int GetMaxBladderCharge ( )","text":"<p>Returns the maximum charge for when the player stops shooting and charges the Kidney Stone item.</p>","tags":["Class"]},{"location":"EntityPlayer.html#getmaxbombs","title":"GetMaxBombs ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#int-getmaxbombs","title":"int GetMaxBombs ( )","text":"<p>Returns the maximum number of bombs the player can currently hold.</p>","tags":["Class"]},{"location":"EntityPlayer.html#getmaxcoins","title":"GetMaxCoins ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#int-getmaxcoins","title":"int GetMaxCoins ( )","text":"<p>Returns the maximum number of coins the player can currently hold.</p>","tags":["Class"]},{"location":"EntityPlayer.html#getmaxkeys","title":"GetMaxKeys ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#int-getmaxkeys","title":"int GetMaxKeys ( )","text":"<p>Returns the maximum number of keys the player can currently hold.</p>","tags":["Class"]},{"location":"EntityPlayer.html#getmaxpeeburstcooldown","title":"GetMaxPeeBurstCooldown ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#int-getmaxpeeburstcooldown","title":"int GetMaxPeeBurstCooldown ( )","text":"<p>Returns the maximum attack duration of the Kidney Stone item.</p>","tags":["Class"]},{"location":"EntityPlayer.html#getmaxpocketitems","title":"GetMaxPocketItems ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#int-getmaxpocketitems","title":"int GetMaxPocketItems ( )","text":"","tags":["Class"]},{"location":"EntityPlayer.html#getmegablastduration","title":"GetMegaBlastDuration ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#int-getmegablastduration","title":"int GetMegaBlastDuration ( )","text":"","tags":["Class"]},{"location":"EntityPlayer.html#getmetronomecollectibleid","title":"GetMetronomeCollectibleID ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#int-getmetronomecollectibleid","title":"int GetMetronomeCollectibleID ( )","text":"","tags":["Class"]},{"location":"EntityPlayer.html#getmovingboxcontents","title":"GetMovingBoxContents ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#entitiessavestatevector-getmovingboxcontents","title":"EntitiesSaveStateVector GetMovingBoxContents ( )","text":"<p>Returns the pickups that are stored on the player through the use of the Moving Box collectible.</p>","tags":["Class"]},{"location":"EntityPlayer.html#getnexturethrablockframe","title":"GetNextUrethraBlockFrame ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#int-getnexturethrablockframe","title":"int GetNextUrethraBlockFrame ( )","text":"<p>Returns the frame at which the player stops shooting and starts charging the Kidney Stone item.</p>","tags":["Class"]},{"location":"EntityPlayer.html#getpeeburstcooldown","title":"GetPeeBurstCooldown ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#int-getpeeburstcooldown","title":"int GetPeeBurstCooldown ( )","text":"<p>Returns the attack duration of the Kidney Stone item.</p>","tags":["Class"]},{"location":"EntityPlayer.html#getplayerformcounter","title":"GetPlayerFormCounter ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#int-getplayerformcounter-playerform-playerformid","title":"int GetPlayerFormCounter ( PlayerForm PlayerFormID )","text":"<p>Returns the amount of collectibles the player has tied to the specified transformation.</p>","tags":["Class"]},{"location":"EntityPlayer.html#getplayerindex","title":"GetPlayerIndex ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#int-getplayerindex","title":"int GetPlayerIndex ( )","text":"","tags":["Class"]},{"location":"EntityPlayer.html#getponycharge","title":"GetPonyCharge ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#int-getponycharge","title":"int GetPonyCharge ( )","text":"<p>Returns the amount of frames left until the charging effect from the A Pony or White Pony item deactivates.</p>","tags":["Class"]},{"location":"EntityPlayer.html#getpuritystate","title":"GetPurityState ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#puritystate-getpuritystate","title":"PurityState GetPurityState ( )","text":"<p>Returns the state in which the Purity item effect currently is. Returns <code>PurityState.BLUE</code> if the player does not have the Purity collectible.</p>","tags":["Class"]},{"location":"EntityPlayer.html#getredstewbonusduration","title":"GetRedStewBonusDuration ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#int-getredstewbonusduration","title":"int GetRedStewBonusDuration ( )","text":"<p>Returns the frames left until the damage bonus from Red Stew expires.</p>","tags":["Class"]},{"location":"EntityPlayer.html#getshotspeedmodifier","title":"GetShotSpeedModifier ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#int-getshotspeedmodifier","title":"int GetShotSpeedModifier ( )","text":"<p>Used for Experimental Treatment and for stat boosts from Void.</p> <p>Adds <code>0.2 * modifier</code> to the player's ShotSpeed.</p> <p>Experimental Treatment adds <code>-1</code>, <code>0</code> or <code>1</code> depending on the shot speed rolled. Void may randomly add <code>1</code>.</p>","tags":["Class"]},{"location":"EntityPlayer.html#getsmeltedtrinkets","title":"GetSmeltedTrinkets ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#table-getsmeltedtrinkets","title":"table GetSmeltedTrinkets ( )","text":"<p>Returns a table of smelted trinkets and their corresponding amounts. The returned table contains the following fields:</p> Field Type Comment trinketAmount int goldenTrinketAmount int","tags":["Class"]},{"location":"EntityPlayer.html#getspecialgridcollision","title":"GetSpecialGridCollision ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#int-getspecialgridcollision-vector-position-selfposition","title":"int GetSpecialGridCollision ( Vector Position = self.Position )","text":"","tags":["Class"]},{"location":"EntityPlayer.html#getspeedmodifier","title":"GetSpeedModifier ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#int-getspeedmodifier","title":"int GetSpeedModifier ( )","text":"<p>Used for Experimental Treatment and for stat boosts from Void.</p> <p>Adds <code>0.2 * modifier</code> to the player's MoveSpeed.</p> <p>Experimental Treatment adds <code>-1</code>, <code>0</code> or <code>1</code> depending on the speed rolled. Void may randomly add <code>1</code>.</p>","tags":["Class"]},{"location":"EntityPlayer.html#getspoofedcollectibleslist","title":"GetSpoofedCollectiblesList ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#table-getspoofedcollectibleslist","title":"table[] GetSpoofedCollectiblesList ( )","text":"Field Type Comment CollectibleID CollectibleType AppendedCount int IsBlocked boolean","tags":["Class"]},{"location":"EntityPlayer.html#getteardisplacement","title":"GetTearDisplacement ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#int-getteardisplacement","title":"int GetTearDisplacement ( )","text":"<p>Returns the player's TearDisplacement value, used to check what eye the player is shooting from.</p> Return info <ul> <li><code>1</code> Right eye</li> <li><code>-1</code> Left eye</li> </ul>","tags":["Class"]},{"location":"EntityPlayer.html#gettotalactivecharge","title":"GetTotalActiveCharge ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#int-gettotalactivecharge-activeslot-slot","title":"int GetTotalActiveCharge ( ActiveSlot Slot )","text":"","tags":["Class"]},{"location":"EntityPlayer.html#geturnsouls","title":"GetUrnSouls ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#int-geturnsouls","title":"int GetUrnSouls ( )","text":"","tags":["Class"]},{"location":"EntityPlayer.html#getvoidedcollectibleslist","title":"GetVoidedCollectiblesList ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#collectibletype-getvoidedcollectibleslist","title":"CollectibleType[] GetVoidedCollectiblesList ( )","text":"<p>Retuns a table containing the CollectibleTypes of all voided Active items.</p>","tags":["Class"]},{"location":"EntityPlayer.html#getweapon","title":"GetWeapon ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#weapon-getweapon-int-slot","title":"Weapon GetWeapon ( int Slot )","text":"<p>Returns the Weapon object in the corresponding slot, or <code>nil</code> if no Weapon can be found. Slot needs to be between <code>0</code> and <code>4</code>.</p> Info <p>Weapon slots and their descriptions:</p> <ul> <li><code>0</code> - Backup Weapon such as Notched Axe and Urn of Souls.</li> <li><code>1</code> - Primary Weapon.</li> <li><code>2</code> - Additional Weapon. Few instances of this exist in the vanilla game, but it can be populated by mods.</li> <li><code>3</code> - Additional Weapon.</li> <li><code>4</code> - Additional Weapon.</li> </ul> <p>Always check for <code>nil</code>, even for slot <code>1</code> as it can be deleted by mods via Isaac.DestroyWeapon().</p>","tags":["Class"]},{"location":"EntityPlayer.html#getweaponmodifiers","title":"GetWeaponModifiers ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#int-getweaponmodifiers","title":"int GetWeaponModifiers ( )","text":"<p>Returns a bitmask of WeaponModifiers.</p>","tags":["Class"]},{"location":"EntityPlayer.html#getwildcarditem","title":"GetWildCardItem ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#int-getwildcarditem","title":"int GetWildCardItem ( )","text":"<p>Returns the item that was last used by the player and would be activated again upon using Wild Card.</p> <p>If the player used an active item, its <code>CollectibleType</code> is returned. If the player used a consumable, its variant is returned. If the player used ? Mark Card, returns <code>1</code>. If no active item had ever been used by the player before, turns <code>0</code>.</p>","tags":["Class"]},{"location":"EntityPlayer.html#getwildcarditemtype","title":"GetWildCardItemType ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#pocketitemtype-getwildcarditemtype","title":"PocketItemType GetWildCardItemType ( )","text":"<p>Returns the type of item that was last used by the player and would be activated again upon using Wild Card.</p> <p>If the player used a consumable (including ? Mark Card), returns <code>ItemType.ITEM_PASSIVE</code>. If no active item had been used by the player before, returns <code>255</code>.</p>","tags":["Class"]},{"location":"EntityPlayer.html#getwispcollectibleslist","title":"GetWispCollectiblesList ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#table-getwispcollectibleslist","title":"table GetWispCollectiblesList ( )","text":"<p>Returns a table of CollectibleTypes corresponding to the item wisps the player has.</p>","tags":["Class"]},{"location":"EntityPlayer.html#haschancerevive","title":"HasChanceRevive ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#boolean-haschancerevive","title":"boolean HasChanceRevive ( )","text":"<p>Returns true if a \"?\" would be displayed on the player's extra life count (ie, the player has Guppy's Collar, or a modded revive item with the <code>chancerevive</code> string in REPENTOGON's customtags items.xml attribute).</p>","tags":["Class"]},{"location":"EntityPlayer.html#hasgoldentrinket","title":"HasGoldenTrinket ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#boolean-hasgoldentrinket-trinkettype-trinket","title":"boolean HasGoldenTrinket ( TrinketType Trinket )","text":"<p>Returns true if you have a golden variant of the provided TrinketType.</p>","tags":["Class"]},{"location":"EntityPlayer.html#hasinstantdeathcurse","title":"HasInstantDeathCurse ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#boolean-hasinstantdeathcurse","title":"boolean HasInstantDeathCurse ( )","text":"<p>Returns true when the player is in the Lost form triggered by either the white fire in Downpour or Soul of The Lost. (or when in Tainted Jacob's ghost form when being touched by Dark Esau)</p>","tags":["Class"]},{"location":"EntityPlayer.html#haspoisonimmunity","title":"HasPoisonImmunity ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#boolean-haspoisonimmunity","title":"boolean HasPoisonImmunity ( )","text":"","tags":["Class"]},{"location":"EntityPlayer.html#incrementplayerformcounter","title":"IncrementPlayerFormCounter ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#void-incrementplayerformcounter-playerform-form-int-count","title":"void IncrementPlayerFormCounter ( PlayerForm Form, int Count )","text":"<p>Increases or decreases the counter towards one of the player's transformations. <code>Count</code> can be negative to decrement the PlayerForm.</p>","tags":["Class"]},{"location":"EntityPlayer.html#initpostlevelinitstats","title":"InitPostLevelInitStats ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#void-initpostlevelinitstats","title":"void InitPostLevelInitStats ( )","text":"<p>Call this after spawning characters with \"special\" tears (Forgotten, Lilith, Azazel etc) with InitTwin, or they won't have their proper tear type.</p>","tags":["Class"]},{"location":"EntityPlayer.html#inittwin","title":"InitTwin ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#entityplayer-inittwin-playertype-playertype","title":"EntityPlayer InitTwin ( PlayerType PlayerType )","text":"<p>Initializes a new player that is controlled by the player's same controller.</p> Bug <p>The twin player will desync from its main twin on save and continue. This softlocks the game in singleplayer, as the game prompts for a controller.</p> <p>We've received confirmation from _Kilburn that this is hardcoded to be handled on vanilla characters. We will need to add a workaround for this.</p>","tags":["Class"]},{"location":"EntityPlayer.html#iscollectibleanimfinished","title":"IsCollectibleAnimFinished ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#boolean-iscollectibleanimfinished-collectibletype-collectible-string-animation","title":"boolean IsCollectibleAnimFinished ( CollectibleType Collectible, string Animation )","text":"<p>Returns true if the animation associated with the collectible is visible.</p>","tags":["Class"]},{"location":"EntityPlayer.html#iscollectibleblocked","title":"IsCollectibleBlocked ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#boolean-iscollectibleblocked-collectibletype-collectible","title":"boolean IsCollectibleBlocked ( CollectibleType Collectible )","text":"<p>Returns true if the CollectibleType was blocked. Collectibles can only be blocked by use of BlockCollectible.</p>","tags":["Class"]},{"location":"EntityPlayer.html#iscollectiblecostumevisible","title":"IsCollectibleCostumeVisible ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#boolean-iscollectiblecostumevisible-collectibletype-collectible-int-playerspritelayerid","title":"boolean IsCollectibleCostumeVisible ( CollectibleType Collectible, int PlayerSpriteLayerID )","text":"","tags":["Class"]},{"location":"EntityPlayer.html#boolean-iscollectiblecostumevisible-collectibletype-collectible-string-playerspritelayername","title":"boolean IsCollectibleCostumeVisible ( CollectibleType Collectible, string PlayerSpriteLayerName )","text":"<p>Returns <code>true</code> if the costume associated with the collectible is visible.</p>","tags":["Class"]},{"location":"EntityPlayer.html#isentityvalidtarget","title":"IsEntityValidTarget ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#boolean-isentityvalidtarget-entity-entity","title":"boolean IsEntityValidTarget ( Entity Entity )","text":"","tags":["Class"]},{"location":"EntityPlayer.html#isfootstepframe","title":"IsFootstepFrame ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#boolean-isfootstepframe-int-foot-1","title":"boolean IsFootstepFrame ( int Foot = -1 )","text":"Info <ul> <li><code>-1</code> - Returns true every 12 frames.</li> <li><code>0</code> - Returns true every 24 frames.</li> <li><code>1</code> - Always false.</li> </ul>","tags":["Class"]},{"location":"EntityPlayer.html#isheadless","title":"IsHeadless ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#boolean-isheadless","title":"boolean IsHeadless ( )","text":"<p>Returns <code>true</code> is the player is headless due to collectibles such as Guillotine, The Intruder, Scissors, and Decap Attack.</p>","tags":["Class"]},{"location":"EntityPlayer.html#ishologram","title":"IsHologram ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#boolean-ishologram","title":"boolean IsHologram ( )","text":"<p>Returns <code>true</code> if the player is the non-active form of Tainted Lazarus with Birthright.</p>","tags":["Class"]},{"location":"EntityPlayer.html#isinvisible","title":"IsInvisible ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#boolean-isinvisible","title":"boolean IsInvisible ( )","text":"<p>Returns <code>true</code> if the player has the Faded Polaroid / Camo Undies effect active.</p>","tags":["Class"]},{"location":"EntityPlayer.html#isitemcostumevisible","title":"IsItemCostumeVisible ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#boolean-isitemcostumevisible-itemconfig_item-item-int-playerspritelayerid","title":"boolean IsItemCostumeVisible ( ItemConfig_Item Item, int PlayerSpriteLayerID )","text":"","tags":["Class"]},{"location":"EntityPlayer.html#boolean-isitemcostumevisible-itemconfig_item-item-int-playerspritelayername","title":"boolean IsItemCostumeVisible ( ItemConfig_Item Item, int PlayerSpriteLayerName )","text":"","tags":["Class"]},{"location":"EntityPlayer.html#islocalplayer","title":"IsLocalPlayer ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#boolean-islocalplayer","title":"boolean IsLocalPlayer ( )","text":"<p>For online play. Returns <code>true</code> if you're a local player, <code>false</code> otherwise.</p>","tags":["Class"]},{"location":"EntityPlayer.html#isnullitemcostumevisible","title":"IsNullItemCostumeVisible ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#boolean-isnullitemcostumevisible-int-nullitem-int-layerid-0","title":"boolean IsNullItemCostumeVisible ( int nullItem, int layerID = 0 )","text":"","tags":["Class"]},{"location":"EntityPlayer.html#boolean-isnullitemcostumevisible-int-nullitem-string-layername","title":"boolean IsNullItemCostumeVisible ( int nullItem, string layerName )","text":"","tags":["Class"]},{"location":"EntityPlayer.html#ispacifist","title":"IsPacifist ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#boolean-ispacifist","title":"boolean IsPacifist ( )","text":"","tags":["Class"]},{"location":"EntityPlayer.html#isurethrablocked","title":"IsUrethraBlocked ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#boolean-isurethrablocked","title":"boolean IsUrethraBlocked ( )","text":"<p>Returns true when the player can no longer shoot due to charging the Kidney Stone item.</p>","tags":["Class"]},{"location":"EntityPlayer.html#morphtocoopghost","title":"MorphToCoopGhost ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#void-morphtocoopghost","title":"void MorphToCoopGhost ( )","text":"<p>Turns the player into a co-op ghost.</p>","tags":["Class"]},{"location":"EntityPlayer.html#playcollectibleanim","title":"PlayCollectibleAnim ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#void-playcollectibleanim-collectibletype-collectible-boolean-checkbodylayers-string-animationname-int-frame-1","title":"void PlayCollectibleAnim ( CollectibleType Collectible, boolean CheckBodyLayers, string AnimationName, int Frame = -1 )","text":"<p>Plays an animation tied to the provided collectible.</p>","tags":["Class"]},{"location":"EntityPlayer.html#playdelayedsfx","title":"PlayDelayedSFX ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#void-playdelayedsfx-soundeffect-id-int-sounddelay-0-int-framedelay-2-float-volume-10","title":"void PlayDelayedSFX ( SoundEffect ID, int SoundDelay = 0, int FrameDelay = 2, float Volume = 1.0 )","text":"<p>Plays a sound effect after a delay.</p>","tags":["Class"]},{"location":"EntityPlayer.html#removecollectiblebyhistoryindex","title":"RemoveCollectibleByHistoryIndex ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#void-removecollectiblebyhistoryindex-int-index","title":"void RemoveCollectibleByHistoryIndex ( int Index )","text":"<p>Removes the collectible from the player associated with the specified history index.</p>","tags":["Class"]},{"location":"EntityPlayer.html#removepocketitem","title":"RemovePocketItem ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#void-removepocketitem-pillcardslot-slot","title":"void RemovePocketItem ( PillCardSlot Slot )","text":"","tags":["Class"]},{"location":"EntityPlayer.html#removepoopspell","title":"RemovePoopSpell ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#void-removepoopspell-int-position-0","title":"void RemovePoopSpell ( int Position = 0 )","text":"<p>Removes the poop spell from the specified queue position and shifts all spells after it forward to fill the space. A new spell is randomly picked to fill the last position. Poop spells are only used by Tainted ???.</p>","tags":["Class"]},{"location":"EntityPlayer.html#rerollallcollectibles","title":"RerollAllCollectibles ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#void-rerollallcollectibles-rng-rng-boolean-includeactiveitems","title":"void RerollAllCollectibles ( RNG rng, boolean includeActiveItems )","text":"<p>Rerolls all of the player's collectibles.</p>","tags":["Class"]},{"location":"EntityPlayer.html#resetplayer","title":"ResetPlayer ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#void-resetplayer","title":"void ResetPlayer ( )","text":"Info <p>This is used by the Genesis active item.</p>","tags":["Class"]},{"location":"EntityPlayer.html#revivecoopghost","title":"ReviveCoopGhost ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#boolean-revivecoopghost","title":"boolean ReviveCoopGhost ( )","text":"","tags":["Class"]},{"location":"EntityPlayer.html#salvagecollectible","title":"SalvageCollectible ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#void-salvagecollectible-entitypickup-pickup-rng-rng-pickupdroprng-itempooltype-pool-itempooltypepool_null","title":"void SalvageCollectible ( EntityPickup Pickup, RNG rng = PickupDropRNG, ItemPoolType Pool = ItemPoolType.POOL_NULL)","text":"","tags":["Class"]},{"location":"EntityPlayer.html#void-salvagecollectible-collectibletype-collectible-vector-position-playerposition-rng-rng-playerdroprng-itempooltype-pool-itempooltypepool_null","title":"void SalvageCollectible ( CollectibleType Collectible, Vector position = playerPosition, RNG rng = PlayerDropRNG, ItemPoolType Pool = ItemPoolType.POOL_NULL )","text":"<p>Produces a random quantity of various pickups, similar to Tainted Cain's ability.</p> Info <p>The provided EntityPickup will be removed by this function. Use the override to avoid this.</p>","tags":["Class"]},{"location":"EntityPlayer.html#setactivevardata","title":"SetActiveVarData ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#void-setactivevardata-int-vardata-activeslot-slot","title":"void SetActiveVarData ( int VarData, ActiveSlot Slot )","text":"","tags":["Class"]},{"location":"EntityPlayer.html#setbagofcraftingcontent","title":"SetBagOfCraftingContent ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#void-setbagofcraftingcontent-bagofcraftingpickup-contenttable","title":"void SetBagOfCraftingContent ( BagOfCraftingPickup[] ContentTable )","text":"<p>Sets the content of the bag to the content of the table. Table must use valid BagOfCraftingPickup ids. Table can be shorter than 8, in which case the remaining indexes are set to empty.</p>","tags":["Class"]},{"location":"EntityPlayer.html#setbagofcraftingoutput","title":"SetBagOfCraftingOutput ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#void-setbagofcraftingoutput-collectibletype-collectible","title":"void SetBagOfCraftingOutput ( CollectibleType Collectible )","text":"<p>Sets the output of the player's Bag of Crafting to the specified collectible.</p>","tags":["Class"]},{"location":"EntityPlayer.html#setbagofcraftingslot","title":"SetBagOfCraftingSlot ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#void-setbagofcraftingslot-int-slotid-bagofcraftingpickup-pickupid","title":"void SetBagOfCraftingSlot ( int SlotID, BagOfCraftingPickup PickupID )","text":"<p>Sets the specified slot in the player's Bag of Crafting to the specified pickup.</p>","tags":["Class"]},{"location":"EntityPlayer.html#setblackheart","title":"SetBlackHeart ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#void-setblackheart-int-blackheart","title":"void SetBlackHeart ( int BlackHeart )","text":"","tags":["Class"]},{"location":"EntityPlayer.html#setbladdercharge","title":"SetBladderCharge ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#void-setbladdercharge-int-charge","title":"void SetBladderCharge ( int Charge )","text":"<p>Used by the Kidney Stone item.</p> Bug <p>The player's head turns pitch black when this function is used without Kidney Stone.</p>","tags":["Class"]},{"location":"EntityPlayer.html#setbloodlustcounter","title":"SetBloodLustCounter ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#void-setbloodlustcounter-int-counter","title":"void SetBloodLustCounter ( int Counter )","text":"","tags":["Class"]},{"location":"EntityPlayer.html#setbombplacedelay","title":"SetBombPlaceDelay ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#void-setbombplacedelay-int-delay","title":"void SetBombPlaceDelay ( int Delay )","text":"","tags":["Class"]},{"location":"EntityPlayer.html#setcambionconceptionstate","title":"SetCambionConceptionState ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#void-setcambionconceptionstate-int-state","title":"void SetCambionConceptionState ( int State )","text":"<p>Sets how much damage has been taken for the Cambion Conception item.</p> <p>Note that the game only spawns a familiar when the player takes damage, if this counter is now at 15, 30, 60 or 90. You cannot trigger a birth directly with this function.</p>","tags":["Class"]},{"location":"EntityPlayer.html#setcanshoot","title":"SetCanShoot ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#boolean-setcanshoot-boolean-canshoot","title":"boolean SetCanShoot ( boolean CanShoot )","text":"<p>Instantaneously disables (or enables) the player's ability to shoot. The base game primarily uses this for special challenges.</p>","tags":["Class"]},{"location":"EntityPlayer.html#setconceptionfamiliarflags","title":"SetConceptionFamiliarFlags ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#void-setconceptionfamiliarflags-conceptionfamiliarflag-flags","title":"void SetConceptionFamiliarFlags ( ConceptionFamiliarFlag Flags )","text":"<p>Sets the bitmask corresponding to which familiars have been spawned by Cambion/Immaculate Conception. The additional familiars provided by this bitmask are spawned during familiar cache evaluation, but only while the player has one of those two items.</p>","tags":["Class"]},{"location":"EntityPlayer.html#setcontrollerindex","title":"SetControllerIndex ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#void-setcontrollerindex-int-idx","title":"void SetControllerIndex ( int Idx )","text":"<p>Changes the player's controller index.</p>","tags":["Class"]},{"location":"EntityPlayer.html#setdamagemodifier","title":"SetDamageModifier ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#void-setdamagemodifier-int-modifier","title":"void SetDamageModifier ( int Modifier )","text":"<p>Used for Experimental Treatment and for stat boosts from Void.</p> <p>Modifier is applied to the player as flat damage.</p> <p>Experimental Treatment adds <code>-1</code>, <code>0</code> or <code>1</code> depending on the damage rolled. Void may randomly add <code>1</code>.</p>","tags":["Class"]},{"location":"EntityPlayer.html#setedendamage","title":"SetEdenDamage ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#void-setedendamage-float-value","title":"void SetEdenDamage ( float Value )","text":"<p>Sets the offset of the player's damage stat for Eden's random stats. Has no effect on players that aren't Eden or Tainted Eden.</p>","tags":["Class"]},{"location":"EntityPlayer.html#setedenfiredelay","title":"SetEdenFireDelay ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#void-setedenfiredelay-float-value","title":"void SetEdenFireDelay ( float Value )","text":"<p>Sets the offset of the player's fire delay stat for Eden's random stats. Has no effect on players that aren't Eden or Tainted Eden.</p>","tags":["Class"]},{"location":"EntityPlayer.html#setedenluck","title":"SetEdenLuck ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#void-setedenluck-float-value","title":"void SetEdenLuck ( float Value )","text":"<p>Sets the offset of the player's luck stat for Eden's random stats. Has no effect on players that aren't Eden or Tainted Eden.</p>","tags":["Class"]},{"location":"EntityPlayer.html#setedenrange","title":"SetEdenRange ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#void-setedenrange-float-value","title":"void SetEdenRange ( float Value )","text":"<p>Sets the offset of the player's range stat for Eden's random stats. Has no effect on players that aren't Eden or Tainted Eden.</p>","tags":["Class"]},{"location":"EntityPlayer.html#setedenshotspeed","title":"SetEdenShotSpeed ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#void-setedenshotspeed-float-value","title":"void SetEdenShotSpeed ( float Value )","text":"<p>Sets the offset of the player's shot speed stat for Eden's random stats. Has no effect on players that aren't Eden or Tainted Eden.</p>","tags":["Class"]},{"location":"EntityPlayer.html#setedenspeed","title":"SetEdenSpeed ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#void-setedenspeed-float-value","title":"void SetEdenSpeed ( float Value )","text":"<p>Sets the offset of the player's speed stat for Eden's random stats. Has no effect on players that aren't Eden or Tainted Eden.</p>","tags":["Class"]},{"location":"EntityPlayer.html#setevesumptoriumcharge","title":"SetEveSumptoriumCharge ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#void-setevesumptoriumcharge-int-chargenum","title":"void SetEveSumptoriumCharge ( int ChargeNum )","text":"<p>Sets the current charge of Tainted Eve's innate Sumptorium ability.</p>","tags":["Class"]},{"location":"EntityPlayer.html#setfiredelaymodifier","title":"SetFireDelayModifier ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#void-setfiredelaymodifier-int-modifier","title":"void SetFireDelayModifier ( int Modifier )","text":"<p>Used for Experimental Treatment and for stat boosts from Void.</p> <p>Grants <code>0.5 * modifier</code> flat tears per second to the player.</p> <p>Experimental Treatment adds <code>-1</code>, <code>0</code> or <code>1</code> depending on the fire delay rolled. Void may randomly add <code>1</code>.</p>","tags":["Class"]},{"location":"EntityPlayer.html#setfootprintcolor","title":"SetFootprintColor ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#void-setfootprintcolor-kcolor-color-boolean-rightfoot-false","title":"void SetFootprintColor ( KColor color, boolean RightFoot = false )","text":"<p>Sets the player's footprint color.</p> Bug <p>This function currently crashes the game - will be fixed in a future update.</p>","tags":["Class"]},{"location":"EntityPlayer.html#setgnawedleaftimer","title":"SetGnawedLeafTimer ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#void-setgnawedleaftimer-int-timer","title":"void SetGnawedLeafTimer ( int Timer )","text":"","tags":["Class"]},{"location":"EntityPlayer.html#sethallowedgroundcountdown","title":"SetHallowedGroundCountdown ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#void-sethallowedgroundcountdown-int-countdown","title":"void SetHallowedGroundCountdown ( int Countdown )","text":"<p>Sets the grace period countdown of retaining stats from the Hallowed Ground/Star of Bethlehem aura.</p>","tags":["Class"]},{"location":"EntityPlayer.html#setheaddirection","title":"SetHeadDirection ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#void-setheaddirection-direction-direction-int-time-boolean-force-false","title":"void SetHeadDirection ( Direction Direction, int Time, boolean Force = false )","text":"<p>Locks the player's head animation to the specified Direction. <code>Force</code> will override existing head direction locks, such as the one from firing Mom's Knife.</p>","tags":["Class"]},{"location":"EntityPlayer.html#setheaddirectionlocktime","title":"SetHeadDirectionLockTime ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#void-setheaddirectionlocktime-int-time","title":"void SetHeadDirectionLockTime ( int Time )","text":"<p>How long the player's head should be forced to stay in its current direction.</p>","tags":["Class"]},{"location":"EntityPlayer.html#setimmaculateconceptionstate","title":"SetImmaculateConceptionState ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#void-setimmaculateconceptionstate-int-state","title":"void SetImmaculateConceptionState ( int State )","text":"<p>Sets how many hearts have been collected for the Immaculate Conception item.</p> <p>Note that the game checks to spawn a familiar only when the player picks up a heart, so you cannot trigger that directly with this function.</p> <p>If you set a value that is greater than 14, the value is automatically capped at 14, meaning that the next heart picked up will spawn a familiar.</p>","tags":["Class"]},{"location":"EntityPlayer.html#setitemstate","title":"SetItemState ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#void-setitemstate-collectibletype-collectible","title":"void SetItemState ( CollectibleType Collectible )","text":"<p>Changes the player's item state to the specified collectible. This is usually used for collectibles that the player holds above their head before activating (i.e: Bob's Rotten Head, Glass Cannon).</p>","tags":["Class"]},{"location":"EntityPlayer.html#setkeeperssackbonus","title":"SetKeepersSackBonus ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#void-setkeeperssackbonus-int-bonus","title":"void SetKeepersSackBonus ( int Bonus )","text":"<p>Sets the current coin bonus for the player's Keeper's Sack collectible.</p>","tags":["Class"]},{"location":"EntityPlayer.html#setlasercolor","title":"SetLaserColor ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#void-setlasercolor-color-color","title":"void SetLaserColor ( Color color )","text":"<p>Sets the player's laser color.</p>","tags":["Class"]},{"location":"EntityPlayer.html#setluckmodifier","title":"SetLuckModifier ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#void-setluckmodifier-int-modifier","title":"void SetLuckModifier ( int Modifier )","text":"<p>Used for Experimental Treatment and for stat boosts from Void.</p> <p>The modifier is added directly to the player's Luck stat.</p> <p>Experimental Treatment adds <code>-1</code>, <code>0</code> or <code>1</code> depending on the luck rolled. Void may randomly add <code>1</code>.</p>","tags":["Class"]},{"location":"EntityPlayer.html#setmaggyswingcooldown","title":"SetMaggySwingCooldown ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#void-setmaggyswingcooldown-int-cooldown","title":"void SetMaggySwingCooldown ( int Cooldown )","text":"<p>Sets the cooldown of Tainted Magdalene's swing attack to the specified amount of frames.</p>","tags":["Class"]},{"location":"EntityPlayer.html#setmaxbladdercharge","title":"SetMaxBladderCharge ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#void-setmaxbladdercharge-int-charge","title":"void SetMaxBladderCharge ( int Charge )","text":"<p>Sets the maximum charge for when the player stops shooting and charges the Kidney Stone item.</p>","tags":["Class"]},{"location":"EntityPlayer.html#setmegablastduration","title":"SetMegaBlastDuration ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#void-setmegablastduration-int-duration","title":"void SetMegaBlastDuration ( int Duration )","text":"<p>Sets the duration of the Mega Blast laser to the specified amount of frames. Setting the duration above zero will activate the effect if it wasn't already active.</p> Bug <p>If the Mega Blast laser is active and you call the function again with a lower duration, the laser will persist even after the amount of frames has passed until the player leaves the room.</p>","tags":["Class"]},{"location":"EntityPlayer.html#setnexturethrablockframe","title":"SetNextUrethraBlockFrame ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#void-setnexturethrablockframe-int-frame","title":"void SetNextUrethraBlockFrame ( int Frame )","text":"<p>Sets the frame at which the player stops shooting and starts charging the Kidney Stone item.</p>","tags":["Class"]},{"location":"EntityPlayer.html#setponycharge","title":"SetPonyCharge ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#void-setponycharge-int-time","title":"void SetPonyCharge ( int Time )","text":"<p>Sets the duration of the charge effect from the A Pony and White Pony to the specified amount of frames.</p>","tags":["Class"]},{"location":"EntityPlayer.html#setpoopspell","title":"SetPoopSpell ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#void-setpoopspell-int-slot-poopspelltype-poopspelltype","title":"void SetPoopSpell ( int Slot, PoopSpellType PoopSpellType )","text":"<p>Sets the specified slot in the poop list to a type of poop. This is only used by Tainted ???.</p>","tags":["Class"]},{"location":"EntityPlayer.html#setpuritystate","title":"SetPurityState ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#void-setpuritystate-puritystate-state","title":"void SetPurityState ( PurityState State )","text":"<p>Set the state in which the Purity item effect currently is.</p>","tags":["Class"]},{"location":"EntityPlayer.html#setredstewbonusduration","title":"SetRedStewBonusDuration ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#void-setredstewbonusduration-int-duration","title":"void SetRedStewBonusDuration ( int Duration )","text":"<p>Sets the duration of the damage bonus given by the Red Stew collectible to the specified amount of frames. Setting the duration above 0 will activate the effect if it wasn't active already.</p>","tags":["Class"]},{"location":"EntityPlayer.html#setshotspeedmodifier","title":"SetShotSpeedModifier ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#void-setshotspeedmodifier-int-modifier","title":"void SetShotSpeedModifier ( int Modifier )","text":"<p>Used for Experimental Treatment and for stat boosts from Void.</p> <p>Adds <code>0.2 * modifier</code> to the player's ShotSpeed.</p> <p>Experimental Treatment adds <code>-1</code>, <code>0</code> or <code>1</code> depending on the shot speed rolled. Void may randomly add <code>1</code>.</p>","tags":["Class"]},{"location":"EntityPlayer.html#setspeedmodifier","title":"SetSpeedModifier ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#void-setspeedmodifier-int-modifier","title":"void SetSpeedModifier ( int Modifier )","text":"<p>Used for Experimental Treatment and for stat boosts from Void.</p> <p>Adds <code>0.2 * modifier</code> to the player's MoveSpeed.</p> <p>Experimental Treatment adds <code>-1</code>, <code>0</code> or <code>1</code> depending on the speed rolled. Void may randomly add <code>1</code>.</p>","tags":["Class"]},{"location":"EntityPlayer.html#settearpoisondamage","title":"SetTearPoisonDamage ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#void-settearpoisondamage-float-damage","title":"void SetTearPoisonDamage ( float Damage )","text":"","tags":["Class"]},{"location":"EntityPlayer.html#settearrangemodifier","title":"SetTearRangeModifier ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#void-settearrangemodifier-int-modifier","title":"void SetTearRangeModifier ( int Modifier )","text":"<p>Used for Experimental Treatment and for stat boosts from Void.</p> <p>Adds <code>2.5 * modifier</code> to the player's TearRange.</p> <p>Experimental Treatment adds <code>-1</code>, <code>0</code> or <code>1</code> depending on the range rolled. Void may randomly add <code>1</code>.</p>","tags":["Class"]},{"location":"EntityPlayer.html#seturethrablock","title":"SetUrethraBlock ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#void-seturethrablock-boolean-blocked","title":"void SetUrethraBlock ( boolean Blocked )","text":"<p>Sets whether the tear spam attack from the Kidney Stone collectible is about to activate. If the player does not have the Kidney Stone collectible, the effect is immediately activated.</p> Bug <p>Setting the <code>Blocked</code> argument to <code>false</code> seems to do nothing at all.</p>","tags":["Class"]},{"location":"EntityPlayer.html#setweapon","title":"SetWeapon ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#void-setweapon-weapon-weapon-int-weaponslot","title":"void SetWeapon ( Weapon Weapon, int WeaponSlot )","text":"<p>Sets the active Weapon in the assigned <code>WeaponSlot</code>.</p> Info <p>Weapon slots and their descriptions:</p> <ul> <li><code>0</code> - Backup Weapon such as Notched Axe and Urn of Souls.</li> <li><code>1</code> - Primary Weapon.</li> <li><code>2</code> - Additional Weapon. Few instances of this exist in the vanilla game, but it can be populated by mods.</li> <li><code>3</code> - Additional Weapon.</li> <li><code>4</code> - Additional Weapon.</li> </ul> <p>Always check for <code>nil</code>, even for slot <code>1</code> as it can be deleted by mods via Isaac.DestroyWeapon().</p>","tags":["Class"]},{"location":"EntityPlayer.html#shootbluecandle","title":"ShootBlueCandle ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#void-shootbluecandle-vector-direction","title":"void ShootBlueCandle ( Vector Direction )","text":"<p>Makes the player shoot a blue flame from the Candle collectible.</p>","tags":["Class"]},{"location":"EntityPlayer.html#shufflecostumes","title":"ShuffleCostumes ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#void-shufflecostumes-int-seed-random","title":"void ShuffleCostumes ( int Seed = Random( ) )","text":"<p>Randomizes the current costumes.</p>","tags":["Class"]},{"location":"EntityPlayer.html#spawnaquariuscreep","title":"SpawnAquariusCreep ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#entityeffect-spawnaquariuscreep-tearparams-tearparams-selftearparams","title":"EntityEffect SpawnAquariusCreep ( TearParams TearParams = self.TearParams)","text":"<p>Spawns a creep effect that acts like the ones created by Aquarius, including inhereting the player's <code>TearParams</code>. Supports passing a custom <code>TearParams</code> instead.</p> Info <p>For reference, this is how the game calculates the <code>TearParams</code> for this normally:</p> <p><code>player-&gt;GetTearHitParams(&amp;params, WeaponType.WEAPON_TEARS, (*player-&gt;GetTearPoisonDamage() * 0.666f) / player-&gt;_damage, -(int)(-Isaac::Random(2) != 0) &amp; 2 - 1, nil)</code></p>","tags":["Class"]},{"location":"EntityPlayer.html#spawnclot","title":"SpawnClot ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#void-spawnclot-vector-pos-boolean-allowplayerdeath-false","title":"void SpawnClot ( Vector pos, boolean AllowPlayerDeath = false )","text":"<p>Acts like a use of Sumptorium, removing health and spawning a clot with the type of health removed. If <code>AllowPlayerDeath</code> is set, a clot will spawn even if the health drained will kill the player.</p>","tags":["Class"]},{"location":"EntityPlayer.html#spawnsaturnustears","title":"SpawnSaturnusTears ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#int-spawnsaturnustears","title":"int SpawnSaturnusTears ( )","text":"<p>Spawns a ring of tears that orbit around the player akin to the Saturnus collectible.</p>","tags":["Class"]},{"location":"EntityPlayer.html#swapforgottenform","title":"SwapForgottenForm ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#void-swapforgottenform-boolean-force-false-boolean-noeffects-false","title":"void SwapForgottenForm ( boolean Force = false, boolean NoEffects = false)","text":"<p>If the player is The Forgotten/The Soul, the two will swap forms. Otherwise, this function does nothing.</p> <p><code>Force</code> will swap even if the subplayer doesn't have any health, or while a room/stage transition is active. <code>NoEffects</code> will disable the dust effect &amp; fade from white when switching from The Soul to The Forgotten.</p>","tags":["Class"]},{"location":"EntityPlayer.html#syncconsumablecounts","title":"SyncConsumableCounts ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#void-syncconsumablecounts-entityplayer-player-int-collectibleflags","title":"void SyncConsumableCounts ( EntityPlayer Player, int CollectibleFlags )","text":"","tags":["Class"]},{"location":"EntityPlayer.html#teleport","title":"Teleport ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#void-teleport-vector-position-boolean-doeffects-true-boolean-teleporttwinplayers-false","title":"void Teleport ( Vector Position, boolean DoEffects = true, boolean TeleportTwinPlayers = false )","text":"<p>Teleports the player to a position within the room. </p> <p><code>DoEffects</code> controls whether the teleport animation and sound plays. <code>TeleportTwinPlayers</code> controls whether twin players (e.g. Esau, Tainted Lazarus w/ Birthright) are teleported alongside this one.</p>","tags":["Class"]},{"location":"EntityPlayer.html#triggerroomclear","title":"TriggerRoomClear ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#void-triggerroomclear","title":"void TriggerRoomClear ( )","text":"<p>Triggers effects on the player as if a room was cleared (i.e. Charging actives).</p>","tags":["Class"]},{"location":"EntityPlayer.html#tryaddtobagofcrafting","title":"TryAddToBagOfCrafting ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#void-tryaddtobagofcrafting-entitypickup-pickup","title":"void TryAddToBagOfCrafting ( EntityPickup Pickup )","text":"<p>Tries to add the specified pickup to the player's Bag of Crafting.</p>","tags":["Class"]},{"location":"EntityPlayer.html#trydecreaseglowinghourglassuses","title":"TryDecreaseGlowingHourglassUses ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#void-trydecreaseglowinghourglassuses-int-uses-boolean-forcehourglass-false","title":"void TryDecreaseGlowingHourglassUses ( int Uses, boolean ForceHourglass = false )","text":"<p>Attempts to decrease the uses left for the Glowing Hourglass collectible, if the player has it. <code>ForceHourglass</code> instantly removes all the charges and turns Glowing Hourglass into it's regular Hourglass form.</p> Bug <p><code>Uses</code> are only decreased by 1 regardless of how large of a number you tell it to remove.</p>","tags":["Class"]},{"location":"EntityPlayer.html#tryfakedeath","title":"TryFakeDeath ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#boolean-tryfakedeath","title":"boolean TryFakeDeath ( )","text":"<p>Spawns a copy of the player at its current position and plays the death animation and sound.</p>","tags":["Class"]},{"location":"EntityPlayer.html#tryforgottenthrow","title":"TryForgottenThrow ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#boolean-tryforgottenthrow-vector-direction","title":"boolean TryForgottenThrow ( Vector Direction )","text":"<p>If the player is holding Tainted Forgotten, he is thrown towards the specified direction.</p>","tags":["Class"]},{"location":"EntityPlayer.html#trypreventdeath","title":"TryPreventDeath ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#boolean-trypreventdeath","title":"boolean TryPreventDeath ( )","text":"<p>Adds a heart container to a character if there are none left to prevent death, depending on its HealthType.</p> <p>Returns <code>true</code> on success, otherwise <code>false</code>.</p>","tags":["Class"]},{"location":"EntityPlayer.html#tryremovesmeltedtrinket","title":"TryRemoveSmeltedTrinket ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#void-tryremovesmeltedtrinket-trinkettype-id","title":"void TryRemoveSmeltedTrinket ( TrinketType ID )","text":"<p>Tries to remove the specified smelted trinket from the player.</p>","tags":["Class"]},{"location":"EntityPlayer.html#unblockcollectible","title":"UnblockCollectible ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#void-unblockcollectible-collectibletype-collectible","title":"void UnblockCollectible ( CollectibleType Collectible )","text":"<p>Unblocks the CollectibleType that was blocked through BlockCollectible.</p>","tags":["Class"]},{"location":"EntityPlayer.html#updateisaacpregnancy","title":"UpdateIsaacPregnancy ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#void-updateisaacpregnancy-boolean-updatecambion","title":"void UpdateIsaacPregnancy ( boolean UpdateCambion )","text":"<p>Set <code>true</code> if you want to update the Cambion Conception costume, otherwise updates the Immaculate Conception costume.</p>","tags":["Class"]},{"location":"EntityPlayer.html#voidhascollectible","title":"VoidHasCollectible ()","text":"","tags":["Class"]},{"location":"EntityPlayer.html#boolean-voidhascollectible-collectibletype-collectible","title":"boolean VoidHasCollectible ( CollectibleType Collectible )","text":"<p>Returns true if the specified collectible has been consumed by the Void collectible.</p>","tags":["Class"]},{"location":"EntityProjectile.html","title":"Class \"EntityProjectile\"","text":"","tags":["Class"]},{"location":"EntityProjectile.html#class-diagram","title":"Class Diagram","text":"<pre><code>    classDiagram\n    class Entity:::diagramCurrentPage\n    class EntityBomb\n    class EntityEffect\n    class EntityFamiliar\n    class EntityKnife\n    class EntityLaser\n    class EntityNPC\n    class EntityPickup\n    class EntityPlayer\n    class EntityProjectile\n    class EntitySlot\n    class EntityTear\n    Entity &lt;|-- EntityBomb\n    Entity &lt;|-- EntityEffect\n    Entity &lt;|-- EntityFamiliar\n    Entity &lt;|-- EntityKnife\n    Entity &lt;|-- EntityLaser\n    Entity &lt;|-- EntityNPC\n    Entity &lt;|-- EntityPickup\n    Entity &lt;|-- EntityPlayer\n    Entity &lt;|-- EntityProjectile\n    Entity &lt;|-- EntitySlot\n    Entity &lt;|-- EntityTear\n    link Entity \"https://wofsauge.github.io/IsaacDocs/rep/Entity.html\" \"Go to page for 'Entity' class\"\n    link EntityBomb \"https://wofsauge.github.io/IsaacDocs/rep/EntityBomb.html\" \"Go to page for 'EntityBomb' class\"\n    link EntityEffect \"https://wofsauge.github.io/IsaacDocs/rep/EntityEffect.html\" \"Go to page for 'EntityEffect' class\"\n    link EntityFamiliar \"https://wofsauge.github.io/IsaacDocs/rep/EntityFamiliar.html\" \"Go to page for 'EntityFamiliar' class\"\n    link EntityKnife \"https://wofsauge.github.io/IsaacDocs/rep/EntityKnife.html\" \"Go to page for 'EntityKnife' class\"\n    link EntityLaser \"EntityLaser.html\" \"Go to page for 'EntityLaser' class\"\n    link EntityNPC \"EntityNPC.html\" \"Go to page for 'EntityNPC' class\"\n    link EntityPickup \"EntityPickup.html\" \"Go to page for 'EntityPickup' class\"\n    link EntityPlayer \"EntityPlayer.html\" \"Go to page for 'EntityPlayer' class\"\n    link EntityProjectile \"https://wofsauge.github.io/IsaacDocs/rep/EntityProjectile.html\" \"Go to page for 'EntityProjectile' class\"\n    link EntitySlot \"EntitySlot.html\" \"Go to page for 'EntitySlot' class\"\n    link EntityTear \"https://wofsauge.github.io/IsaacDocs/rep/EntityTear.html\" \"Go to page for 'EntityTear' class\"</code></pre>","tags":["Class"]},{"location":"EntityProjectile.html#functions","title":"Functions","text":"","tags":["Class"]},{"location":"EntityProjectile.html#deflect","title":"Deflect ()","text":"","tags":["Class"]},{"location":"EntityProjectile.html#void-deflect-vector-newvelocity","title":"void Deflect ( Vector NewVelocity )","text":"<p>Deflects the projectile.</p>","tags":["Class"]},{"location":"EntitySlot.html","title":"Class \"EntitySlot\"","text":"<p>It's Real.</p>","tags":["Class"]},{"location":"EntitySlot.html#class-diagram","title":"Class Diagram","text":"<pre><code>    classDiagram\n    class Entity:::diagramCurrentPage\n    class EntityBomb\n    class EntityEffect\n    class EntityFamiliar\n    class EntityKnife\n    class EntityLaser\n    class EntityNPC\n    class EntityPickup\n    class EntityPlayer\n    class EntityProjectile\n    class EntitySlot\n    class EntityTear\n    Entity &lt;|-- EntityBomb\n    Entity &lt;|-- EntityEffect\n    Entity &lt;|-- EntityFamiliar\n    Entity &lt;|-- EntityKnife\n    Entity &lt;|-- EntityLaser\n    Entity &lt;|-- EntityNPC\n    Entity &lt;|-- EntityPickup\n    Entity &lt;|-- EntityPlayer\n    Entity &lt;|-- EntityProjectile\n    Entity &lt;|-- EntitySlot\n    Entity &lt;|-- EntityTear\n    link Entity \"https://wofsauge.github.io/IsaacDocs/rep/Entity.html\" \"Go to page for 'Entity' class\"\n    link EntityBomb \"https://wofsauge.github.io/IsaacDocs/rep/EntityBomb.html\" \"Go to page for 'EntityBomb' class\"\n    link EntityEffect \"https://wofsauge.github.io/IsaacDocs/rep/EntityEffect.html\" \"Go to page for 'EntityEffect' class\"\n    link EntityFamiliar \"https://wofsauge.github.io/IsaacDocs/rep/EntityFamiliar.html\" \"Go to page for 'EntityFamiliar' class\"\n    link EntityKnife \"https://wofsauge.github.io/IsaacDocs/rep/EntityKnife.html\" \"Go to page for 'EntityKnife' class\"\n    link EntityLaser \"EntityLaser.html\" \"Go to page for 'EntityLaser' class\"\n    link EntityNPC \"EntityNPC.html\" \"Go to page for 'EntityNPC' class\"\n    link EntityPickup \"EntityPickup.html\" \"Go to page for 'EntityPickup' class\"\n    link EntityPlayer \"EntityPlayer.html\" \"Go to page for 'EntityPlayer' class\"\n    link EntityProjectile \"https://wofsauge.github.io/IsaacDocs/rep/EntityProjectile.html\" \"Go to page for 'EntityProjectile' class\"\n    link EntitySlot \"EntitySlot.html\" \"Go to page for 'EntitySlot' class\"\n    link EntityTear \"https://wofsauge.github.io/IsaacDocs/rep/EntityTear.html\" \"Go to page for 'EntityTear' class\"</code></pre>","tags":["Class"]},{"location":"EntitySlot.html#functions","title":"Functions","text":"","tags":["Class"]},{"location":"EntitySlot.html#createdropsfromexplosion","title":"CreateDropsFromExplosion ()","text":"","tags":["Class"]},{"location":"EntitySlot.html#void-createdropsfromexplosion","title":"void CreateDropsFromExplosion ( )","text":"<p>This forces the EntitySlot to drop what it typically would if blown up.</p>","tags":["Class"]},{"location":"EntitySlot.html#getdonationvalue","title":"GetDonationValue ()","text":"","tags":["Class"]},{"location":"EntitySlot.html#int-getdonationvalue","title":"int GetDonationValue ( )","text":"<p>Returns how many coins have been given to a beggar. The number returned varies based on the beggar.</p> Return info <ul> <li>Beggar: How many coins have been donated.</li> <li>Demon Beggar: How many hearts have been donated.</li> <li>Battery Bum, Rotten Beggar: Increases with each payment by random amounts, up to 3, and resets back to 0 upon reward or payout.</li> <li>All other slots: Remains at 0.</li> </ul>","tags":["Class"]},{"location":"EntitySlot.html#getprizecollectible","title":"GetPrizeCollectible ()","text":"","tags":["Class"]},{"location":"EntitySlot.html#collectibletype-getprizecollectible","title":"CollectibleType GetPrizeCollectible ( )","text":"<p>Seems to only be used by Crane Game and Hell Game. Gets the collectible that will be awarded as the prize when winning.</p>","tags":["Class"]},{"location":"EntitySlot.html#getprizetype","title":"GetPrizeType ()","text":"","tags":["Class"]},{"location":"EntitySlot.html#int-getprizetype","title":"int GetPrizeType ( )","text":"<p>Returns an integer that varies based on the slot machine.</p> Return info <ul> <li>Slot Machine: Returns a number between <code>3</code>-<code>24</code>. <code>3</code>-<code>12</code> cause the machine to spit out a reward<ul> <li><code>3</code>: Fly or pretty fly.</li> <li><code>4</code>: Bomb.</li> <li><code>5</code>-<code>6</code>: Heart.</li> <li><code>7</code>: Key.</li> <li><code>8</code>: Pill.</li> <li><code>9</code>: Unknown. This never appears to be used.</li> <li><code>10</code>-<code>12</code>: 1-2 coins.</li> <li><code>13</code>-<code>24</code>: Nothing.</li> </ul> </li> <li>Shell Game &amp; Hell Game: Returns the <code>PickupVariant</code> of the potential prize.</li> <li>Bomb Bum: Returns a number <code>1</code>-<code>3</code> based on the type of prize it had output.<ul> <li><code>1</code>: Coins.</li> <li><code>2</code>: Heart.</li> <li><code>3</code>: Collectible.</li> </ul> </li> </ul>","tags":["Class"]},{"location":"EntitySlot.html#getshellgameanimationindex","title":"GetShellGameAnimationIndex ()","text":"","tags":["Class"]},{"location":"EntitySlot.html#int-getshellgameanimationindex","title":"int GetShellGameAnimationIndex ( )","text":"<p>Returns the index used by Shell Game and Hell Game to determine which prize animation to play.</p>","tags":["Class"]},{"location":"EntitySlot.html#getstate","title":"GetState ()","text":"","tags":["Class"]},{"location":"EntitySlot.html#int-getstate","title":"int GetState ( )","text":"<p>Returns the current state of the slot.</p> Return info <p>All slots have a consistent state based on what it's doing that reflect as follows:</p> <ul> <li><code>1</code>: Idle.</li> <li><code>2</code>: Reward (Shell Game &amp; Hell Game: Idle Reward)</li> <li><code>3</code>: Bombed</li> <li><code>4</code>: Payout</li> <li><code>5</code>: Reward (only for Shell Game &amp; Hell Game)</li> </ul>","tags":["Class"]},{"location":"EntitySlot.html#gettimeout","title":"GetTimeout ()","text":"","tags":["Class"]},{"location":"EntitySlot.html#int-gettimeout","title":"int GetTimeout ( )","text":"<p>Returns the timeout in frames until the slot determines its prize. Not used by all slots.</p> Return info <ul> <li>All beggars except Bomb Beggar: Increases randomly with each payment, returning either <code>1 &lt;&lt; 16</code>, <code>1 &lt;&lt; 17</code>, or the sum of them, resetting to 0 upon giving a reward.</li> <li>Crane Game: For the first successful payout, minimum timeout is <code>1 &lt;&lt; 16</code>, still increasing by 30 and counting down. Second payout is <code>1 &lt;&lt; 17</code>. Third payout is <code>1 &lt;&lt; 16</code> + <code>1 &lt;&lt; 17</code>.</li> <li>All other slots: Remains at 0.</li> </ul>","tags":["Class"]},{"location":"EntitySlot.html#gettouch","title":"GetTouch ()","text":"","tags":["Class"]},{"location":"EntitySlot.html#int-gettouch","title":"int GetTouch ( )","text":"<p>Returns the slot's touch counter. The touch counter goes up by one every frame a player is touching the slot and is reset once no player is touching it.</p>","tags":["Class"]},{"location":"EntitySlot.html#gettriggertimernum","title":"GetTriggerTimerNum ()","text":"","tags":["Class"]},{"location":"EntitySlot.html#int-gettriggertimernum","title":"int GetTriggerTimerNum ( )","text":"<p>Returns a number used by Bomb Bum and Reroll Machine.</p> Return Info <p>When bombing Bomb Bum, this is set to <code>30</code></p> <p>Reroll Machine increments this by <code>1</code> for every successful reroll. When bombed, has a chance to set it to 11 and reroll another item.</p>","tags":["Class"]},{"location":"EntitySlot.html#randomcoinjamanim","title":"RandomCoinJamAnim ()","text":"","tags":["Class"]},{"location":"EntitySlot.html#string-randomcoinjamanim","title":"string RandomCoinJamAnim ( )","text":"<p>Returns a random string from the following options: <code>CoinJam</code>, <code>CoinJam2</code>, <code>CoinJam3,</code> <code>CoinJam4</code>. Presumably only used on the donation machines.</p>","tags":["Class"]},{"location":"EntitySlot.html#setdonationvalue","title":"SetDonationValue ()","text":"","tags":["Class"]},{"location":"EntitySlot.html#void-setdonationvalue-int-donationvalue","title":"void SetDonationValue ( int DonationValue )","text":"<p>Sets the slot's donation value. See GetDonationValue for more info.</p>","tags":["Class"]},{"location":"EntitySlot.html#setprizecollectible","title":"SetPrizeCollectible ()","text":"","tags":["Class"]},{"location":"EntitySlot.html#void-setprizecollectible-collectibletype-collectible","title":"void SetPrizeCollectible ( CollectibleType Collectible )","text":"<p>Seems to only be used by Crane Game and Hell Game. This sets the collectible that the games will pay out with, and updates the rendered collectible accordingly.</p>","tags":["Class"]},{"location":"EntitySlot.html#setprizetype","title":"SetPrizeType ()","text":"","tags":["Class"]},{"location":"EntitySlot.html#void-setprizetype-int-prizetype","title":"void SetPrizeType ( int PrizeType )","text":"<p>Sets the prize type of the slot. See GetPrizeType for more info.</p>","tags":["Class"]},{"location":"EntitySlot.html#setshellgameanimationindex","title":"SetShellGameAnimationIndex ()","text":"","tags":["Class"]},{"location":"EntitySlot.html#void-setshellgameanimationindex-int-index","title":"void SetShellGameAnimationIndex ( int index )","text":"<p>Sets the index used by Shell Game and Hell Game to determine which prize animation to play.</p>","tags":["Class"]},{"location":"EntitySlot.html#setstate","title":"SetState ()","text":"","tags":["Class"]},{"location":"EntitySlot.html#void-setstate-int-state","title":"void SetState ( int State )","text":"<p>Sets the state of the slot. See GetState for more info.</p>","tags":["Class"]},{"location":"EntitySlot.html#settimeout","title":"SetTimeout ()","text":"","tags":["Class"]},{"location":"EntitySlot.html#void-settimeout-int-timeout","title":"void SetTimeout ( int Timeout )","text":"<p>Sets the timeout of the slot. See GetTimeout for more info.</p>","tags":["Class"]},{"location":"EntitySlot.html#settouch","title":"SetTouch ()","text":"","tags":["Class"]},{"location":"EntitySlot.html#void-settouch-int-touch","title":"void SetTouch ( int Touch )","text":"<p>Sets the slot's touch counter. The touch counter goes up by one every frame a player is touching the slot and is reset to zero once no player is touching it.</p>","tags":["Class"]},{"location":"EntitySlot.html#settriggertimernum","title":"SetTriggerTimerNum ()","text":"","tags":["Class"]},{"location":"EntitySlot.html#void-settriggertimernum-int-num","title":"void SetTriggerTimerNum ( int num )","text":"<p>Returns a number used by Bomb Bum and Reroll Machine.</p> More Info <p>When bombing Bomb Bum, this is set to <code>30</code></p> <p>Reroll Machine increments this by <code>1</code> for every successful reroll. When bombed, has a chance to set it to 11 and reroll another item.</p>","tags":["Class"]},{"location":"EntityTear.html","title":"Class \"EntityTear\"","text":"","tags":["Class"]},{"location":"EntityTear.html#class-diagram","title":"Class Diagram","text":"<pre><code>    classDiagram\n    class Entity:::diagramCurrentPage\n    class EntityBomb\n    class EntityEffect\n    class EntityFamiliar\n    class EntityKnife\n    class EntityLaser\n    class EntityNPC\n    class EntityPickup\n    class EntityPlayer\n    class EntityProjectile\n    class EntitySlot\n    class EntityTear\n    Entity &lt;|-- EntityBomb\n    Entity &lt;|-- EntityEffect\n    Entity &lt;|-- EntityFamiliar\n    Entity &lt;|-- EntityKnife\n    Entity &lt;|-- EntityLaser\n    Entity &lt;|-- EntityNPC\n    Entity &lt;|-- EntityPickup\n    Entity &lt;|-- EntityPlayer\n    Entity &lt;|-- EntityProjectile\n    Entity &lt;|-- EntitySlot\n    Entity &lt;|-- EntityTear\n    link Entity \"https://wofsauge.github.io/IsaacDocs/rep/Entity.html\" \"Go to page for 'Entity' class\"\n    link EntityBomb \"https://wofsauge.github.io/IsaacDocs/rep/EntityBomb.html\" \"Go to page for 'EntityBomb' class\"\n    link EntityEffect \"https://wofsauge.github.io/IsaacDocs/rep/EntityEffect.html\" \"Go to page for 'EntityEffect' class\"\n    link EntityFamiliar \"https://wofsauge.github.io/IsaacDocs/rep/EntityFamiliar.html\" \"Go to page for 'EntityFamiliar' class\"\n    link EntityKnife \"https://wofsauge.github.io/IsaacDocs/rep/EntityKnife.html\" \"Go to page for 'EntityKnife' class\"\n    link EntityLaser \"EntityLaser.html\" \"Go to page for 'EntityLaser' class\"\n    link EntityNPC \"EntityNPC.html\" \"Go to page for 'EntityNPC' class\"\n    link EntityPickup \"EntityPickup.html\" \"Go to page for 'EntityPickup' class\"\n    link EntityPlayer \"EntityPlayer.html\" \"Go to page for 'EntityPlayer' class\"\n    link EntityProjectile \"https://wofsauge.github.io/IsaacDocs/rep/EntityProjectile.html\" \"Go to page for 'EntityProjectile' class\"\n    link EntitySlot \"EntitySlot.html\" \"Go to page for 'EntitySlot' class\"\n    link EntityTear \"https://wofsauge.github.io/IsaacDocs/rep/EntityTear.html\" \"Go to page for 'EntityTear' class\"</code></pre>","tags":["Class"]},{"location":"EntityTear.html#modified-functions","title":"Modified Functions","text":"","tags":["Class"]},{"location":"EntityTear.html#resetspritescale","title":"ResetSpriteScale ()","text":"","tags":["Class"]},{"location":"EntityTear.html#void-resetspritescale-boolean-force-false","title":"void ResetSpriteScale ( boolean Force = false )","text":"<p>Now accepts a <code>Force</code> argument to force the tear into re-evaluating what tear scale animation it should play.</p>","tags":["Class"]},{"location":"EntityTear.html#functions","title":"Functions","text":"","tags":["Class"]},{"location":"EntityTear.html#getdeadeyeintensity","title":"GetDeadEyeIntensity ()","text":"","tags":["Class"]},{"location":"EntityTear.html#float-getdeadeyeintensity","title":"float GetDeadEyeIntensity ( )","text":"<p>Returns the intensity value of the tear as a result of the Dead Eye collectible. It is between <code>0</code> and <code>1</code>.</p>","tags":["Class"]},{"location":"EntityTear.html#getdeadeyesprite","title":"GetDeadEyeSprite ()","text":"","tags":["Class"]},{"location":"EntityTear.html#sprite-getdeadeyesprite","title":"Sprite GetDeadEyeSprite ( )","text":"<p>Returns the red aura sprite used by the Dead Eye collectible.</p>","tags":["Class"]},{"location":"EntityTear.html#getteareffectsprite","title":"GetTearEffectSprite ()","text":"","tags":["Class"]},{"location":"EntityTear.html#sprite-getteareffectsprite","title":"Sprite GetTearEffectSprite ( )","text":"<p>Returns the tear effect sprite used by tear variants like Fire Mind and Mysterious Liquid.</p>","tags":["Class"]},{"location":"EntityTear.html#gettearhalosprite","title":"GetTearHaloSprite ()","text":"","tags":["Class"]},{"location":"EntityTear.html#sprite-gettearhalosprite","title":"Sprite GetTearHaloSprite ( )","text":"<p>Returns the tear halo sprite used by Godhead tears.</p>","tags":["Class"]},{"location":"EntityTear.html#ismultidimensionaltouched","title":"IsMultidimensionalTouched ()","text":"","tags":["Class"]},{"location":"EntityTear.html#boolean-ismultidimensionaltouched","title":"boolean IsMultidimensionalTouched ( )","text":"<p>Returns if the tear was created through the Multi Dimensional Baby effect.</p>","tags":["Class"]},{"location":"EntityTear.html#isprismtouched","title":"IsPrismTouched ()","text":"","tags":["Class"]},{"location":"EntityTear.html#boolean-isprismtouched","title":"boolean IsPrismTouched ( )","text":"<p>Returns if the tear was created through the Angelic Prism effect.</p>","tags":["Class"]},{"location":"EntityTear.html#makemultidimensionalcopy","title":"MakeMultidimensionalCopy ()","text":"","tags":["Class"]},{"location":"EntityTear.html#entitytear-makemultidimensionalcopy","title":"EntityTear MakeMultidimensionalCopy ( )","text":"<p>Copies the tear and applies a black and white effect to it. This effect is the same one used by the Multidimensional Baby familiar.</p>","tags":["Class"]},{"location":"EntityTear.html#setmultidimensionaltouched","title":"SetMultidimensionalTouched ()","text":"","tags":["Class"]},{"location":"EntityTear.html#void-setmultidimensionaltouched-boolean-istouched","title":"void SetMultidimensionalTouched ( boolean IsTouched )","text":"<p>Sets if the tear was created through the Angelic Prism effect.</p>","tags":["Class"]},{"location":"EntityTear.html#setprismtouched","title":"SetPrismTouched ()","text":"","tags":["Class"]},{"location":"EntityTear.html#void-setprismtouched-boolean-istouched","title":"void SetPrismTouched ( boolean IsTouched )","text":"<p>Sets if the tear was created through the Angelic Prism effect.</p>","tags":["Class"]},{"location":"FXParams.html","title":"Class \"FXParams\"","text":"Info <p>You can get this class by using the following functions:</p> <ul> <li>Room:GetFXParams()</li> </ul> Example Code <pre><code>local fxparams = Game():GetRoom():GetFXParams()\n</code></pre>","tags":["Class"]},{"location":"FXParams.html#variables","title":"Variables","text":"","tags":["Class"]},{"location":"FXParams.html#colormodifier","title":"ColorModifier","text":"","tags":["Class"]},{"location":"FXParams.html#colormodifier-colormodifier","title":"ColorModifier ColorModifier","text":"<p>Gets a modifiable copy of the color correction introduced in Repentance. This stores the values used in <code>fxlayers.xml</code> and not the raw values (see GetCurrentColorModifier for this).</p> <p>Changes made here are not automatically applied, use UpdateColorModifier to do this.</p>","tags":["Class"]},{"location":"FXParams.html#lightcolor","title":"LightColor","text":"","tags":["Class"]},{"location":"FXParams.html#kcolor-lightcolor","title":"KColor LightColor","text":"","tags":["Class"]},{"location":"FXParams.html#shadowalpha","title":"ShadowAlpha","text":"","tags":["Class"]},{"location":"FXParams.html#float-shadowalpha","title":"float ShadowAlpha","text":"","tags":["Class"]},{"location":"FXParams.html#shadowcolor","title":"ShadowColor","text":"","tags":["Class"]},{"location":"FXParams.html#kcolor-shadowcolor","title":"KColor ShadowColor","text":"","tags":["Class"]},{"location":"FXParams.html#usewaterv2","title":"UseWaterV2","text":"","tags":["Class"]},{"location":"FXParams.html#boolean-usewaterv2","title":"boolean UseWaterV2","text":"<p>If set, water will use the reflective shader featured in Downpour and Dross.</p>","tags":["Class"]},{"location":"FXParams.html#watercolor","title":"WaterColor","text":"","tags":["Class"]},{"location":"FXParams.html#kcolor-watercolor","title":"KColor WaterColor","text":"","tags":["Class"]},{"location":"FXParams.html#watercolormultiplier","title":"WaterColorMultiplier","text":"","tags":["Class"]},{"location":"FXParams.html#kcolor-watercolormultiplier","title":"KColor WaterColorMultiplier","text":"","tags":["Class"]},{"location":"FXParams.html#watereffectcolor","title":"WaterEffectColor","text":"","tags":["Class"]},{"location":"FXParams.html#color-watereffectcolor","title":"Color WaterEffectColor","text":"","tags":["Class"]},{"location":"Font.html","title":"Class \"Font\"","text":"","tags":["Class"]},{"location":"Font.html#modified-constructors","title":"Modified Constructors","text":"","tags":["Class"]},{"location":"Font.html#font","title":"Font ()","text":"","tags":["Class"]},{"location":"Font.html#fontbool-font-string-fontpath","title":"Font,bool Font ( string FontPath )","text":"<p>Added optional \"FontPath\" argument, the function now returns two values: Font object and the bool signifying whether the font was loaded successfully or not.</p>","tags":["Class"]},{"location":"Font.html#modified-functions","title":"Modified Functions","text":"","tags":["Class"]},{"location":"Font.html#drawstring","title":"DrawString ()","text":"","tags":["Class"]},{"location":"Font.html#void-drawstring-string-string-float-positionx-float-positiony-kcolor-rendercolor-int-boxwidth-0-boolean-center-false","title":"void DrawString ( string String, float PositionX, float PositionY, KColor RenderColor, int BoxWidth = 0, boolean Center = false )","text":"<p>Same as default function, but with better input validation to prevent crashes.</p>","tags":["Class"]},{"location":"Font.html#drawstringscaled","title":"DrawStringScaled ()","text":"","tags":["Class"]},{"location":"Font.html#void-drawstringscaled-string-string-float-positionx-float-positiony-float-scalex-float-scaley-kcolor-rendercolor-int-boxwidth-0-boolean-center-false","title":"void DrawStringScaled ( string String, float PositionX, float PositionY, float ScaleX, float ScaleY, KColor RenderColor, int BoxWidth = 0, boolean Center = false )","text":"<p>Same as default function, but with better input validation to prevent crashes.</p>","tags":["Class"]},{"location":"Font.html#drawstringscaledutf8","title":"DrawStringScaledUTF8 ()","text":"","tags":["Class"]},{"location":"Font.html#void-drawstringscaledutf8-string-string-float-positionx-float-positiony-float-scalex-float-scaley-kcolor-rendercolor-int-boxwidth-0-boolean-center-false","title":"void DrawStringScaledUTF8 ( string String, float PositionX, float PositionY, float ScaleX, float ScaleY, KColor RenderColor, int BoxWidth = 0, boolean Center = false )","text":"<p>Same as default function, but with better input validation to prevent crashes.</p>","tags":["Class"]},{"location":"Font.html#drawstringutf8","title":"DrawStringUTF8 ()","text":"","tags":["Class"]},{"location":"Font.html#void-drawstringutf8-string-string-float-positionx-float-positiony-kcolor-rendercolor-int-boxwidth-0-boolean-center-false","title":"void DrawStringUTF8 ( string String, float PositionX, float PositionY, KColor RenderColor, int BoxWidth = 0, boolean Center = false )","text":"<p>Same as default function, but with better input validation to prevent crashes.</p>","tags":["Class"]},{"location":"Font.html#getstringwidth","title":"GetStringWidth ()","text":"","tags":["Class"]},{"location":"Font.html#int-getstringwidth-string-string","title":"int GetStringWidth ( string String )","text":"<p>Same as default function, but with better input validation to prevent crashes.</p>","tags":["Class"]},{"location":"Font.html#getstringwidthutf8","title":"GetStringWidthUTF8 ()","text":"","tags":["Class"]},{"location":"Font.html#int-getstringwidthutf8-string-string","title":"int GetStringWidthUTF8 ( string String )","text":"<p>Same as default function, but with better input validation to prevent crashes.</p>","tags":["Class"]},{"location":"Game.html","title":"Class \"Game\"","text":"","tags":["Class"]},{"location":"Game.html#modified-functions","title":"Modified Functions","text":"","tags":["Class"]},{"location":"Game.html#getlastdevilroomstage","title":"GetLastDevilRoomStage ()","text":"","tags":["Class"]},{"location":"Game.html#levelstage-getlastdevilroomstage","title":"LevelStage GetLastDevilRoomStage ( )","text":"<p>Now returns integer instead of unusable userdata.</p>","tags":["Class"]},{"location":"Game.html#getlastlevelwithdamage","title":"GetLastLevelWithDamage ()","text":"","tags":["Class"]},{"location":"Game.html#levelstage-getlastlevelwithdamage","title":"LevelStage GetLastLevelWithDamage ( )","text":"<p>Now returns integer instead of unusable userdata.</p>","tags":["Class"]},{"location":"Game.html#getlastlevelwithouthalfhp","title":"GetLastLevelWithoutHalfHp ()","text":"","tags":["Class"]},{"location":"Game.html#levelstage-getlastlevelwithouthalfhp","title":"LevelStage GetLastLevelWithoutHalfHp ( )","text":"<p>Now returns integer instead of unusable userdata.</p>","tags":["Class"]},{"location":"Game.html#getplayer","title":"GetPlayer ()","text":"","tags":["Class"]},{"location":"Game.html#entityplayer-getplayer-int-index","title":"EntityPlayer GetPlayer ( int Index )","text":"<p>If no players exist, this now returns <code>nil</code> to prevent a crash. Invalid indexes will return index <code>0</code>.</p>","tags":["Class"]},{"location":"Game.html#movetorandomroom","title":"Move\u00b7To\u00b7Random\u00b7Room ()","text":"","tags":["Class"]},{"location":"Game.html#void-movetorandomroom-boolean-iamerrorroom-int-seed-entityplayer-player","title":"void MoveToRandomRoom ( boolean IAmErrorRoom, int Seed, EntityPlayer Player )","text":"<p>Now no longer crashes the game when given a seed equal <code>0</code>.</p>","tags":["Class"]},{"location":"Game.html#startstagetransition","title":"StartStageTransition ()","text":"","tags":["Class"]},{"location":"Game.html#void-startstagetransition-boolean-samestage-int-transitionoverride-entityplayer-player-nil","title":"void StartStageTransition ( boolean SameStage, int TransitionOverride, EntityPlayer Player = nil )","text":"<p>Fixed the crash that sometimes occurred due to an incorrect call on the C++ side. <code>Player</code> is now optional (will default to <code>GetPlayer(0)</code>).</p>","tags":["Class"]},{"location":"Game.html#functions","title":"Functions","text":"","tags":["Class"]},{"location":"Game.html#achievementunlocksdisallowed","title":"AchievementUnlocksDisallowed ()","text":"","tags":["Class"]},{"location":"Game.html#boolean-achievementunlocksdisallowed","title":"boolean AchievementUnlocksDisallowed ( )","text":"<p>Returns <code>true</code> if achievements can't be unlocked this run (challenges, seeded, etc).</p>","tags":["Class"]},{"location":"Game.html#adddebugflags","title":"AddDebugFlags ()","text":"","tags":["Class"]},{"location":"Game.html#void-adddebugflags-debugflag-flag","title":"void AddDebugFlags ( DebugFlag Flag )","text":"<p>Adds a debug flag to the game. Multiple can be added simultaneously with bitwise concatenation (e.g. <code>DebugFlag.ENTITY_POSITIONS | DebugFlag.HITSPHERES</code>).</p>","tags":["Class"]},{"location":"Game.html#addshopvisits","title":"AddShopVisits ()","text":"","tags":["Class"]},{"location":"Game.html#void-addshopvisits-int-count","title":"void AddShopVisits ( int Count )","text":"<p>Adds the amount of shops the player has entered this run.</p>","tags":["Class"]},{"location":"Game.html#clearerasedenemies","title":"ClearErasedEnemies ()","text":"","tags":["Class"]},{"location":"Game.html#void-clearerasedenemies","title":"void ClearErasedEnemies ( )","text":"<p>Clears out all enemies listed as an erased enemy, allowing them to spawn again.</p>","tags":["Class"]},{"location":"Game.html#devolveenemy","title":"DevolveEnemy ()","text":"","tags":["Class"]},{"location":"Game.html#void-devolveenemy-entity","title":"void DevolveEnemy ( Entity )","text":"<p>Devolves an enemy, as if the item D10 was used on it.</p>","tags":["Class"]},{"location":"Game.html#getchallengeparams","title":"GetChallengeParams ()","text":"","tags":["Class"]},{"location":"Game.html#challengeparam-getchallengeparams","title":"ChallengeParam GetChallengeParams ( )","text":"","tags":["Class"]},{"location":"Game.html#getcurrentcolormodifier","title":"GetCurrentColorModifier ()","text":"","tags":["Class"]},{"location":"Game.html#colormodifier-getcurrentcolormodifier","title":"ColorModifier GetCurrentColorModifier ( )","text":"<p>Gets a copy of the color correction introduced in Repentance. This stores the raw values currently being used (which can be affected by items such as Astral Projection) and not what the room is set to use (see FXParams.ColorModifier for this).</p>","tags":["Class"]},{"location":"Game.html#getdebugflags","title":"GetDebugFlags ()","text":"","tags":["Class"]},{"location":"Game.html#int-getdebugflags","title":"int GetDebugFlags ( )","text":"<p>Returns a DebugFlag bitmask.</p>","tags":["Class"]},{"location":"Game.html#getdizzyamount","title":"GetDizzyAmount ()","text":"","tags":["Class"]},{"location":"Game.html#float-getdizzyamount","title":"float GetDizzyAmount ( )","text":"<p>Returns the current dizzy amount akin to Wavy Cap.</p>","tags":["Class"]},{"location":"Game.html#getgenericprompt","title":"GetGenericPrompt ()","text":"","tags":["Class"]},{"location":"Game.html#genericprompt-getgenericprompt","title":"GenericPrompt GetGenericPrompt ( )","text":"<p>Returns the currently active <code>GenericPrompt</code> object.</p> Bug <p>Crashes the game if used during a run while no prompts are active.</p>","tags":["Class"]},{"location":"Game.html#getlerpcolormodifier","title":"GetLerpColorModifier ()","text":"","tags":["Class"]},{"location":"Game.html#colormodifier-getlerpcolormodifier","title":"ColorModifier GetLerpColorModifier ( )","text":"<p>Returns the lerped color modifier. This is formatted as the absolute rate of change (ie, all values are positive).</p>","tags":["Class"]},{"location":"Game.html#getpausemenustate","title":"GetPauseMenuState ()","text":"","tags":["Class"]},{"location":"Game.html#pausemenustates-getpausemenustate","title":"PauseMenuStates GetPauseMenuState ( )","text":"","tags":["Class"]},{"location":"Game.html#getplanetariumsvisited","title":"GetPlanetariumsVisited ()","text":"","tags":["Class"]},{"location":"Game.html#int-getplanetariumsvisited","title":"int GetPlanetariumsVisited ( )","text":"<p>Returns the amount of planetariums the player has entered this run.</p>","tags":["Class"]},{"location":"Game.html#getshopvisits","title":"GetShopVisits ()","text":"","tags":["Class"]},{"location":"Game.html#int-getshopvisits","title":"int GetShopVisits ( )","text":"<p>Returns the amount of shops the player has entered this run.</p>","tags":["Class"]},{"location":"Game.html#gettargetcolormodifier","title":"GetTargetColorModifier ()","text":"","tags":["Class"]},{"location":"Game.html#colormodifier-gettargetcolormodifier","title":"ColorModifier GetTargetColorModifier ( )","text":"<p>Returns the target ColorModifier. If currently lerping between two ColorModifier states, returns the target state. It is otherwise the same as GetCurrentColorModifier.</p>","tags":["Class"]},{"location":"Game.html#iserased","title":"IsErased ()","text":"","tags":["Class"]},{"location":"Game.html#boolean-iserased-entity-entity","title":"boolean IsErased ( Entity Entity )","text":"","tags":["Class"]},{"location":"Game.html#boolean-iserased-int-type-int-variant-1-int-subtype-1","title":"boolean IsErased ( int Type, int Variant = -1, int SubType = -1 )","text":"<p>Checks if an entity was erased.</p>","tags":["Class"]},{"location":"Game.html#isgreedboss","title":"IsGreedBoss ()","text":"","tags":["Class"]},{"location":"Game.html#boolean-isgreedboss","title":"boolean IsGreedBoss ( )","text":"<p>Returns <code>true</code> if the next or current wave is a boss wave. Returns <code>false</code> otherwise or if not in Greed Mode.</p>","tags":["Class"]},{"location":"Game.html#isgreedfinalboss","title":"IsGreedFinalBoss ()","text":"","tags":["Class"]},{"location":"Game.html#boolean-isgreedfinalboss","title":"boolean IsGreedFinalBoss ( )","text":"<p>Returns <code>true</code> if the next or current wave is the optional \"nightmare\" wave. Returns <code>false</code> otherwise or if not in Greed Mode.</p>","tags":["Class"]},{"location":"Game.html#ishardmode","title":"IsHardMode ()","text":"","tags":["Class"]},{"location":"Game.html#boolean-ishardmode","title":"boolean IsHardMode ( )","text":"<p>Returns <code>true</code> if current mode is Hard Mode or Greedier.</p>","tags":["Class"]},{"location":"Game.html#ispausemenuopen","title":"IsPauseMenuOpen ()","text":"","tags":["Class"]},{"location":"Game.html#boolean-ispausemenuopen","title":"boolean IsPauseMenuOpen ( )","text":"<p>Returns <code>true</code> if the pause menu is open.</p>","tags":["Class"]},{"location":"Game.html#isrerun","title":"IsRerun ()","text":"","tags":["Class"]},{"location":"Game.html#boolean-isrerun","title":"boolean IsRerun ( )","text":"<p>Returns <code>true</code> if the current run is a rerun.</p>","tags":["Class"]},{"location":"Game.html#recordplayercompletion","title":"RecordPlayerCompletion ()","text":"","tags":["Class"]},{"location":"Game.html#void-recordplayercompletion-completiontype-type","title":"void RecordPlayerCompletion ( CompletionType Type )","text":"<p>Sets marks and unlocks achievements associated with this type for all players. Used by the game to award marks as well as tainted completion paper groups.</p>","tags":["Class"]},{"location":"Game.html#setbloom","title":"SetBloom ()","text":"","tags":["Class"]},{"location":"Game.html#void-setbloom-float-duration-float-amount","title":"void SetBloom ( float Duration, float Amount )","text":"","tags":["Class"]},{"location":"Game.html#setcolormodifier","title":"SetColorModifier ()","text":"","tags":["Class"]},{"location":"Game.html#void-setcolormodifier-colormodifier-colormodifier-boolean-lerp-true-float-rate-0015","title":"void SetColorModifier ( ColorModifier ColorModifier, boolean Lerp = true, float Rate = 0.015 )","text":"","tags":["Class"]},{"location":"Game.html#setdizzyamount","title":"SetDizzyAmount ()","text":"","tags":["Class"]},{"location":"Game.html#void-setdizzyamount-float-targetintensity-float-currentintensity","title":"void SetDizzyAmount ( float TargetIntensity , float CurrentIntensity )","text":"<p>Sets the dizzy amount akin to Wavy Cap.</p> <p>The current intensity of the effect will gradually move towards the \"TargetIntensity\".</p> <p>Providing \"CurrentIntensity\" to this function is optional. If provided, the current intensity is instantly changed to that amount. If unspecified, the current intensity will remain unchanged.</p> Warning <p>Best to stay within <code>0</code>-<code>1</code> and increment by 0.1 while using this function. <code>1</code> has the most extreme effect on the screen while <code>0</code> removes the effect.</p>","tags":["Class"]},{"location":"Game.html#setdonationmodangel","title":"SetDonationModAngel ()","text":"","tags":["Class"]},{"location":"Game.html#void-setdonationmodangel-int-amount","title":"void SetDonationModAngel ( int Amount )","text":"","tags":["Class"]},{"location":"Game.html#setdonationmodgreed","title":"SetDonationModGreed ()","text":"","tags":["Class"]},{"location":"Game.html#void-setdonationmodgreed-int-amount","title":"void SetDonationModGreed ( int Amount )","text":"","tags":["Class"]},{"location":"Game.html#showgenericleaderboard","title":"ShowGenericLeaderboard ()","text":"","tags":["Class"]},{"location":"Game.html#void-showgenericleaderboard","title":"void ShowGenericLeaderboard ( )","text":"","tags":["Class"]},{"location":"Game.html#spawnbombcrater","title":"SpawnBombCrater ()","text":"","tags":["Class"]},{"location":"Game.html#entity-spawnbombcrater-vector-position-float-radius-10","title":"Entity SpawnBombCrater ( Vector Position, float Radius = 1.0 )","text":"","tags":["Class"]},{"location":"GenericPrompt.html","title":"Class \"GenericPrompt\"","text":"Info <p>You can get this class by using its constructor or using the following functions:</p> <ul> <li>Game:GetGenericPrompt()</li> </ul> Example Code <p>This code creates a generic popup that opens when pressing the \"Minus\"-button. It prints the selected option to the console and displays some dummy text.  <pre><code>local myPrompt = GenericPrompt()\nmyPrompt:Initialize()\nmyPrompt:SetText(\"Some test text\")\n\nlocal wasPromptDisplayed = false\n\nfunction mod:myRenderFunction(_)\n    myPrompt:Render()\nend \nmod:AddCallback(ModCallbacks.MC_POST_RENDER, mod.myRenderFunction)\n\nfunction mod:myUpdateFunction(_) \n    myPrompt:Update(true) -- true = Process user inputs\n    if wasPromptDisplayed and not myPrompt:IsActive() then -- prompt was closed by user \n        print(\"User selected option: \"..myPrompt:GetSubmittedSelection()) \n        wasPromptDisplayed = false \n    end\n    if Input.IsButtonTriggered(Keyboard.KEY_MINUS, 0)  then -- on Pressing minus button will open prompt \n        myPrompt:Show() \n        wasPromptDisplayed = true \n    end \nend \nmod:AddCallback(ModCallbacks.MC_POST_UPDATE, mod.myUpdateFunction)\n</code></pre></p>","tags":["Class"]},{"location":"GenericPrompt.html#constructors","title":"Constructors","text":"","tags":["Class"]},{"location":"GenericPrompt.html#genericprompt","title":"GenericPrompt ()","text":"","tags":["Class"]},{"location":"GenericPrompt.html#genericprompt-genericprompt","title":"GenericPrompt GenericPrompt ( )","text":"<p>Returns a GenericPrompt object. Allows for rendering a popup paper with the option to include text and tracking input for a yes/no decision.</p>","tags":["Class"]},{"location":"GenericPrompt.html#functions","title":"Functions","text":"","tags":["Class"]},{"location":"GenericPrompt.html#getcurrentselection","title":"GetCurrentSelection ()","text":"","tags":["Class"]},{"location":"GenericPrompt.html#int-getcurrentselection","title":"int GetCurrentSelection ( )","text":"<p>Returns what selection the player is currently hovering over.</p> Return info <ul> <li><code>0</code> - No</li> <li><code>1</code> - Yes</li> </ul>","tags":["Class"]},{"location":"GenericPrompt.html#getsprite","title":"GetSprite ()","text":"","tags":["Class"]},{"location":"GenericPrompt.html#sprite-getsprite","title":"Sprite GetSprite ( )","text":"<p>Returns the paper sprite of the prompt.</p>","tags":["Class"]},{"location":"GenericPrompt.html#getsubmittedselection","title":"GetSubmittedSelection ()","text":"","tags":["Class"]},{"location":"GenericPrompt.html#int-getsubmittedselection","title":"int GetSubmittedSelection ( )","text":"<p>Returns the chosen selection. </p> Return info <ul> <li><code>0</code> - None (Returns if the player dismisses the prompt).</li> <li><code>1</code> - Yes</li> <li><code>2</code> - No</li> </ul>","tags":["Class"]},{"location":"GenericPrompt.html#initialize","title":"Initialize ()","text":"","tags":["Class"]},{"location":"GenericPrompt.html#void-initialize-boolean-smallprompt-false","title":"void Initialize ( boolean SmallPrompt = false )","text":"","tags":["Class"]},{"location":"GenericPrompt.html#isactive","title":"IsActive ()","text":"","tags":["Class"]},{"location":"GenericPrompt.html#boolean-isactive","title":"boolean IsActive ( )","text":"<p>Returns whether the prompt is active or not.</p>","tags":["Class"]},{"location":"GenericPrompt.html#render","title":"Render ()","text":"","tags":["Class"]},{"location":"GenericPrompt.html#void-render","title":"void Render ( )","text":"<p>Renders the prompt on-screen. Place this in any of the non-entity-specific RENDER callbacks.</p>","tags":["Class"]},{"location":"GenericPrompt.html#settext","title":"SetText ()","text":"","tags":["Class"]},{"location":"GenericPrompt.html#void-settext-string-text1-string-text2-string-text3-string-text4-string-text5","title":"void SetText ( string Text1 = \"\", string Text2 = \"\", string Text3 = \"\", string Text4 = \"\", string Text5 = \"\", )","text":"<p>Set text that will appear on the paper.</p> <p>Text strings are associated with their position on the prompt from top to bottom. The first two strings should used as header text, being bolded and at a higher font size, while the rest as description text.</p>","tags":["Class"]},{"location":"GenericPrompt.html#show","title":"Show ()","text":"","tags":["Class"]},{"location":"GenericPrompt.html#void-show","title":"void Show ( )","text":"<p>Starts showing the prompt on-screen.</p>","tags":["Class"]},{"location":"GenericPrompt.html#update","title":"Update ()","text":"","tags":["Class"]},{"location":"GenericPrompt.html#void-update-boolean-processinput","title":"void Update ( boolean ProcessInput )","text":"<p>Updates the animation of the prompt paper. Set <code>ProcessInput</code> to <code>true</code> to track the player's input for selecting yes/no, <code>false</code> otherwise.</p>","tags":["Class"]},{"location":"GridEntitiesSaveStateVector.html","title":"Class \"GridEntitiesSaveStateVector\"","text":"","tags":["Class"]},{"location":"GridEntitiesSaveStateVector.html#functions","title":"Functions","text":"","tags":["Class"]},{"location":"GridEntitiesSaveStateVector.html#get","title":"Get ()","text":"","tags":["Class"]},{"location":"GridEntitiesSaveStateVector.html#gridentitydesc-get-int-index","title":"GridEntityDesc Get ( int Index )","text":"","tags":["Class"]},{"location":"GridEntitiesSaveStateVector.html#getbytype","title":"GetByType ()","text":"","tags":["Class"]},{"location":"GridEntitiesSaveStateVector.html#gridentitydesc-getbytype-gridentitytype-type","title":"GridEntityDesc GetByType ( GridEntityType Type )","text":"","tags":["Class"]},{"location":"GridEntitiesSaveStateVector.html#__len","title":"__len ()","text":"","tags":["Class"]},{"location":"GridEntitiesSaveStateVector.html#int-__len","title":"int __len ( )","text":"","tags":["Class"]},{"location":"GridEntity.html","title":"Class \"GridEntity\"","text":"","tags":["Class"]},{"location":"GridEntity.html#modified-functions","title":"Modified Functions","text":"","tags":["Class"]},{"location":"GridEntity.html#totnt","title":"ToTNT ()","text":"","tags":["Class"]},{"location":"GridEntity.html#gridentitytnt-totnt","title":"GridEntityTNT ToTNT ( )","text":"<p>Altered function to improve GridEntity Update callback behavior.</p>","tags":["Class"]},{"location":"GridEntity.html#functions","title":"Functions","text":"","tags":["Class"]},{"location":"GridEntity.html#getrenderposition","title":"GetRenderPosition ()","text":"","tags":["Class"]},{"location":"GridEntity.html#vector-getrenderposition","title":"Vector GetRenderPosition ( )","text":"","tags":["Class"]},{"location":"GridEntity.html#hurtdamage","title":"HurtDamage ()","text":"","tags":["Class"]},{"location":"GridEntity.html#void-hurtdamage-entity-entity-int-playerdamage-int-damageflags-float-damage-boolean-ignoregridcollision","title":"void HurtDamage ( Entity Entity, int PlayerDamage, int DamageFlags, float Damage, boolean ignoreGridCollision )","text":"Bug <p>The value passed to the float Damage parameter (the intended damage amount to non-player entities) is currently ignored - will be fixed in a future update.</p>","tags":["Class"]},{"location":"GridEntity.html#isbreakablerock","title":"IsBreakableRock ()","text":"","tags":["Class"]},{"location":"GridEntity.html#void-isbreakablerock","title":"void IsBreakableRock ( )","text":"","tags":["Class"]},{"location":"GridEntity.html#todecoration","title":"ToDecoration ()","text":"","tags":["Class"]},{"location":"GridEntity.html#gridentitydecoration-todecoration","title":"GridEntityDecoration ToDecoration ( )","text":"<p>Used to cast a GridEntity object to a GridEntityDecoration object.</p> Return behavior <p>If the conversion is not successful, this function returns <code>nil</code>.</p>","tags":["Class"]},{"location":"GridEntity.html#tofire","title":"ToFire ()","text":"","tags":["Class"]},{"location":"GridEntity.html#gridentityfire-tofire","title":"GridEntityFire ToFire ( )","text":"<p>Used to cast a GridEntity object to a GridEntityFire object.</p> Return behavior <p>If the conversion is not successful, this function returns <code>nil</code>.</p>","tags":["Class"]},{"location":"GridEntity.html#togravity","title":"ToGravity ()","text":"","tags":["Class"]},{"location":"GridEntity.html#gridentitygravity-togravity","title":"GridEntityGravity ToGravity ( )","text":"<p>Used to cast a GridEntity object to a GridEntityGravity object.</p> Return behavior <p>If the conversion is not successful, this function returns <code>nil</code>.</p>","tags":["Class"]},{"location":"GridEntity.html#tolock","title":"ToLock ()","text":"","tags":["Class"]},{"location":"GridEntity.html#gridentitylock-tolock","title":"GridEntityLock ToLock ( )","text":"<p>Used to cast a GridEntity object to a GridEntityLock object.</p> Return behavior <p>If the conversion is not successful, this function returns <code>nil</code>.</p>","tags":["Class"]},{"location":"GridEntity.html#tostairs","title":"ToStairs ()","text":"","tags":["Class"]},{"location":"GridEntity.html#gridentitystairs-tostairs","title":"GridEntityStairs ToStairs ( )","text":"<p>Used to cast a GridEntity object to a GridEntityStairs object.</p> Return behavior <p>If the conversion is not successful, this function returns <code>nil</code>.</p>","tags":["Class"]},{"location":"GridEntity.html#tostatue","title":"ToStatue ()","text":"","tags":["Class"]},{"location":"GridEntity.html#gridentitystatue-tostatue","title":"GridEntityStatue ToStatue ( )","text":"<p>Used to cast a GridEntity object to a GridEntityStatue object.</p> Return behavior <p>If the conversion is not successful, this function returns <code>nil</code>.</p>","tags":["Class"]},{"location":"GridEntity.html#toteleporter","title":"ToTeleporter ()","text":"","tags":["Class"]},{"location":"GridEntity.html#gridentityteleporter-toteleporter","title":"GridEntityTeleporter ToTeleporter ( )","text":"<p>Used to cast a GridEntity object to a GridEntityTeleporter object.</p> Return behavior <p>If the conversion is not successful, this function returns <code>nil</code>.</p>","tags":["Class"]},{"location":"GridEntity.html#totrapdoor","title":"ToTrapDoor ()","text":"","tags":["Class"]},{"location":"GridEntity.html#gridentitytrapdoor-totrapdoor","title":"GridEntityTrapDoor ToTrapDoor ( )","text":"<p>Used to cast a GridEntity object to a GridEntityTrapDoor object.</p> Return behavior <p>If the conversion is not successful, this function returns <code>nil</code>.</p>","tags":["Class"]},{"location":"GridEntity.html#towall","title":"ToWall ()","text":"","tags":["Class"]},{"location":"GridEntity.html#gridentitywall-towall","title":"GridEntityWall ToWall ( )","text":"<p>Used to cast a GridEntity object to a GridEntityWall object.</p> Return behavior <p>If the conversion is not successful, this function returns <code>nil</code>.</p>","tags":["Class"]},{"location":"GridEntity.html#toweb","title":"ToWeb ()","text":"","tags":["Class"]},{"location":"GridEntity.html#gridentityweb-toweb","title":"GridEntityWeb ToWeb ( )","text":"<p>Used to cast a GridEntity object to a GridEntityWeb object.</p> Return behavior <p>If the conversion is not successful, this function returns <code>nil</code>.</p>","tags":["Class"]},{"location":"GridEntityDecoration.html","title":"Class \"GridEntityDecoration\"","text":"<p>Currently used as a distinct object from GridEntity. No content at this point, sorry!</p>","tags":["Class"]},{"location":"GridEntityDoor.html","title":"Class \"GridEntityDoor\"","text":"","tags":["Class"]},{"location":"GridEntityDoor.html#modified-variables","title":"Modified Variables","text":"","tags":["Class"]},{"location":"GridEntityDoor.html#previousstate","title":"PreviousState","text":"","tags":["Class"]},{"location":"GridEntityDoor.html#int-previousstate","title":"int PreviousState","text":"<p>Same as default, but now returns a proper integer value instead of userdata.</p>","tags":["Class"]},{"location":"GridEntityDoor.html#previousvariant","title":"PreviousVariant","text":"","tags":["Class"]},{"location":"GridEntityDoor.html#int-previousvariant","title":"int PreviousVariant","text":"<p>Same as default, but now returns a proper integer value instead of userdata.</p>","tags":["Class"]},{"location":"GridEntityDoor.html#functions","title":"Functions","text":"","tags":["Class"]},{"location":"GridEntityDoor.html#getextrasprite","title":"GetExtraSprite ()","text":"","tags":["Class"]},{"location":"GridEntityDoor.html#sprite-getextrasprite","title":"Sprite GetExtraSprite ( )","text":"<p>Same as the vanilla variable <code>ExtraSprite</code>, but as a getter function.</p>","tags":["Class"]},{"location":"GridEntityDoor.html#playanimation","title":"PlayAnimation ()","text":"","tags":["Class"]},{"location":"GridEntityDoor.html#void-playanimation","title":"void PlayAnimation ( )","text":"","tags":["Class"]},{"location":"GridEntityFire.html","title":"Class \"GridEntityFire\"","text":"<p>Currently used as a distinct object from GridEntity. No content at this point, sorry!</p>","tags":["Class"]},{"location":"GridEntityGravity.html","title":"Class \"GridEntityGravity\"","text":"<p>Currently used as a distinct object from GridEntity. No content at this point, sorry!</p>","tags":["Class"]},{"location":"GridEntityLock.html","title":"Class \"GridEntityLock\"","text":"<p>Currently used as a distinct object from GridEntity. No content at this point, sorry!</p>","tags":["Class"]},{"location":"GridEntityPressurePlate.html","title":"Class \"GridEntityPressurePlate\"","text":"<p>Currently used as a distinct object from GridEntity. No content at this point, sorry!</p>","tags":["Class"]},{"location":"GridEntityRock.html","title":"Class \"GridEntityRock\"","text":"","tags":["Class"]},{"location":"GridEntityRock.html#functions","title":"Functions","text":"","tags":["Class"]},{"location":"GridEntityRock.html#getaltrocktype","title":"GetAltRockType ()","text":"","tags":["Class"]},{"location":"GridEntityRock.html#int-getaltrocktype-backdroptype-backdrop-0","title":"int GetAltRockType ( BackdropType Backdrop = 0 )","text":"","tags":["Class"]},{"location":"GridEntityRock.html#playbreaksound","title":"PlayBreakSound ()","text":"","tags":["Class"]},{"location":"GridEntityRock.html#void-playbreaksound-gridentitytype-type-backdroptype-backdrop-0","title":"void PlayBreakSound ( GridEntityType Type, BackdropType Backdrop = 0 )","text":"","tags":["Class"]},{"location":"GridEntityRock.html#registerrockdestroyed","title":"RegisterRockDestroyed ()","text":"","tags":["Class"]},{"location":"GridEntityRock.html#void-registerrockdestroyed-gridentitytype-type","title":"void RegisterRockDestroyed ( GridEntityType Type )","text":"","tags":["Class"]},{"location":"GridEntityRock.html#rendertop","title":"RenderTop ()","text":"","tags":["Class"]},{"location":"GridEntityRock.html#void-rendertop-vector-offset","title":"void RenderTop ( Vector Offset )","text":"","tags":["Class"]},{"location":"GridEntityRock.html#spawndrops","title":"SpawnDrops ()","text":"","tags":["Class"]},{"location":"GridEntityRock.html#static-void-spawndrops-vector-position-gridentitytype-type-int-gridvariant-int-seed-boolean-unknown-backdroptype-backdrop-0","title":"static void SpawnDrops ( Vector Position, GridEntityType Type, int GridVariant, int Seed, boolean Unknown, BackdropType Backdrop = 0 )","text":"","tags":["Class"]},{"location":"GridEntityRock.html#tryspawnladder","title":"TrySpawnLadder ()","text":"","tags":["Class"]},{"location":"GridEntityRock.html#void-tryspawnladder","title":"void TrySpawnLadder ( )","text":"","tags":["Class"]},{"location":"GridEntityRock.html#tryspawnworms","title":"TrySpawnWorms ()","text":"","tags":["Class"]},{"location":"GridEntityRock.html#void-tryspawnworms","title":"void TrySpawnWorms ( )","text":"","tags":["Class"]},{"location":"GridEntityRock.html#updatecollision","title":"UpdateCollision ()","text":"","tags":["Class"]},{"location":"GridEntityRock.html#void-updatecollision","title":"void UpdateCollision ( )","text":"","tags":["Class"]},{"location":"GridEntityRock.html#updateneighbors","title":"UpdateNeighbors ()","text":"","tags":["Class"]},{"location":"GridEntityRock.html#void-updateneighbors","title":"void UpdateNeighbors ( )","text":"","tags":["Class"]},{"location":"GridEntityStairs.html","title":"Class \"GridEntityStairs\"","text":"<p>Currently used as a distinct object from GridEntity. No content at this point, sorry!</p>","tags":["Class"]},{"location":"GridEntityStatue.html","title":"Class \"GridEntityStatue\"","text":"<p>Currently used as a distinct object from GridEntity. No content at this point, sorry!</p>","tags":["Class"]},{"location":"GridEntityTeleporter.html","title":"Class \"GridEntityTeleporter\"","text":"<p>Currently used as a distinct object from GridEntity. No content at this point, sorry!</p>","tags":["Class"]},{"location":"GridEntityTrapDoor.html","title":"Class \"GridEntityTrapDoor\"","text":"<p>Currently used as a distinct object from GridEntity. No content at this point, sorry!</p>","tags":["Class"]},{"location":"GridEntityWall.html","title":"Class \"GridEntityWall\"","text":"<p>Currently used as a distinct object from GridEntity. No content at this point, sorry!</p>","tags":["Class"]},{"location":"GridEntityWeb.html","title":"Class \"GridEntityWeb\"","text":"<p>Currently used as a distinct object from GridEntity. No content at this point, sorry!</p>","tags":["Class"]},{"location":"HUD.html","title":"Class \"HUD\"","text":"Info <p>You can get this class by using the following functions:</p> <ul> <li>Game:GetHUD()</li> </ul> Example Code <pre><code>local hud = Game():GetHUD()\nlocal sprite = hud:GetChargeBarSprite()\n</code></pre>","tags":["Class"]},{"location":"HUD.html#functions","title":"Functions","text":"","tags":["Class"]},{"location":"HUD.html#flashredhearts","title":"FlashRedHearts ()","text":"","tags":["Class"]},{"location":"HUD.html#void-flashredhearts-entityplayer-player","title":"void FlashRedHearts ( EntityPlayer Player )","text":"","tags":["Class"]},{"location":"HUD.html#getbosshpbarfill","title":"GetBossHPBarFill ()","text":"","tags":["Class"]},{"location":"HUD.html#float-getbosshpbarfill","title":"float GetBossHPBarFill ( )","text":"<p>Get the fill of the boss hp bar</p>","tags":["Class"]},{"location":"HUD.html#getcardspillssprite","title":"GetCardsPillsSprite ()","text":"","tags":["Class"]},{"location":"HUD.html#sprite-getcardspillssprite","title":"Sprite GetCardsPillsSprite ( )","text":"<p>Sprite object used to render pills, cards and rune sprites in the hud.</p>","tags":["Class"]},{"location":"HUD.html#getchargebarsprite","title":"GetChargeBarSprite ()","text":"","tags":["Class"]},{"location":"HUD.html#sprite-getchargebarsprite","title":"Sprite GetChargeBarSprite ( )","text":"","tags":["Class"]},{"location":"HUD.html#getcoopmenusprite","title":"GetCoopMenuSprite ()","text":"","tags":["Class"]},{"location":"HUD.html#sprite-getcoopmenusprite","title":"Sprite GetCoopMenuSprite ( )","text":"<p>Sprite object used to render the coop player selection menu.</p>","tags":["Class"]},{"location":"HUD.html#getcraftingsprite","title":"GetCraftingSprite ()","text":"","tags":["Class"]},{"location":"HUD.html#sprite-getcraftingsprite","title":"Sprite GetCraftingSprite ( )","text":"<p>Sprite object used for bag of crafting hud.</p>","tags":["Class"]},{"location":"HUD.html#getfortunesprite","title":"GetFortuneSprite ()","text":"","tags":["Class"]},{"location":"HUD.html#sprite-getfortunesprite","title":"Sprite GetFortuneSprite ( )","text":"<p>Sprite object used for the fortune popup window.</p>","tags":["Class"]},{"location":"HUD.html#getheartssprite","title":"GetHeartsSprite ()","text":"","tags":["Class"]},{"location":"HUD.html#sprite-getheartssprite","title":"Sprite GetHeartsSprite ( )","text":"","tags":["Class"]},{"location":"HUD.html#getinventorysprite","title":"GetInventorySprite ()","text":"","tags":["Class"]},{"location":"HUD.html#sprite-getinventorysprite","title":"Sprite GetInventorySprite ( )","text":"<p>Sprite object used for Tainted Isaac inventory system.</p>","tags":["Class"]},{"location":"HUD.html#getpickupshudsprite","title":"GetPickupsHUDSprite ()","text":"","tags":["Class"]},{"location":"HUD.html#sprite-getpickupshudsprite","title":"Sprite GetPickupsHUDSprite ( )","text":"","tags":["Class"]},{"location":"HUD.html#getplayerhud","title":"GetPlayerHUD ()","text":"","tags":["Class"]},{"location":"HUD.html#playerhud-getplayerhud-int-index-0","title":"PlayerHUD GetPlayerHUD ( int Index = 0 )","text":"","tags":["Class"]},{"location":"HUD.html#getpoopspellsprite","title":"GetPoopSpellSprite ()","text":"","tags":["Class"]},{"location":"HUD.html#sprite-getpoopspellsprite","title":"Sprite GetPoopSpellSprite ( )","text":"<p>Tainted blue baby poop spell sprite</p>","tags":["Class"]},{"location":"HUD.html#getstreaksprite","title":"GetStreakSprite ()","text":"","tags":["Class"]},{"location":"HUD.html#sprite-getstreaksprite","title":"Sprite GetStreakSprite ( )","text":"<p>Sprite object used for text streak popups. For example: picking up items, displaying floor name, etc.</p>","tags":["Class"]},{"location":"HUD.html#setbosshpbarfill","title":"SetBossHPBarFill ()","text":"","tags":["Class"]},{"location":"HUD.html#void-setbosshpbarfill-float-percent","title":"void SetBossHPBarFill ( float percent )","text":"<p>Sets the fill of the boss hp bar. Accepts values between 0 and 1. Numbers below 0 cause the boss hp bar to not be rendered.</p>","tags":["Class"]},{"location":"History.html","title":"Class \"History\"","text":"Info <p>You can get this class by using the following functions:</p> <ul> <li>EntityPlayer:GetHistory()</li> </ul> Example Code <pre><code>local history = Isaac.GetPlayer(0):GetHistory()\n</code></pre>","tags":["Class"]},{"location":"History.html#functions","title":"Functions","text":"","tags":["Class"]},{"location":"History.html#getcollectibleshistory","title":"GetCollectiblesHistory ()","text":"","tags":["Class"]},{"location":"History.html#historyitems-getcollectibleshistory","title":"HistoryItems[] GetCollectiblesHistory ( )","text":"<p>Returns table of collectible HistoryItems.</p>","tags":["Class"]},{"location":"History.html#removehistoryitembyindex","title":"RemoveHistoryItemByIndex ()","text":"","tags":["Class"]},{"location":"History.html#boolean-removehistoryitembyindex-int-index","title":"boolean RemoveHistoryItemByIndex ( int Index )","text":"<p>Removes an item from the item history tracker on the right-hand side of the screen. Note that this does not remove the item effect from the player.</p> <p>Returns <code>true</code> if an item was removed, <code>false</code> if not.</p>","tags":["Class"]},{"location":"HistoryItem.html","title":"Class \"HistoryItem\"","text":"Info <p>You can get this class by using the following functions:</p> <ul> <li>History:GetCollectiblesHistory()</li> </ul> Example Code <pre><code>local history = Isaac.GetPlayer(0):GetHistory():GetCollectiblesHistory()[1]\n</code></pre>","tags":["Class"]},{"location":"HistoryItem.html#functions","title":"Functions","text":"","tags":["Class"]},{"location":"HistoryItem.html#getitemid","title":"GetItemID ()","text":"","tags":["Class"]},{"location":"HistoryItem.html#int-getitemid","title":"int GetItemID ( )","text":"","tags":["Class"]},{"location":"HistoryItem.html#getitempooltype","title":"GetItemPoolType ()","text":"","tags":["Class"]},{"location":"HistoryItem.html#itempooltype-getitempooltype","title":"ItemPoolType GetItemPoolType ( )","text":"","tags":["Class"]},{"location":"HistoryItem.html#getlevelstage","title":"GetLevelStage ()","text":"","tags":["Class"]},{"location":"HistoryItem.html#levelstage-getlevelstage","title":"LevelStage GetLevelStage ( )","text":"","tags":["Class"]},{"location":"HistoryItem.html#getroomtype","title":"GetRoomType ()","text":"","tags":["Class"]},{"location":"HistoryItem.html#roomtype-getroomtype","title":"RoomType GetRoomType ( )","text":"","tags":["Class"]},{"location":"HistoryItem.html#getstagetype","title":"GetStageType ()","text":"","tags":["Class"]},{"location":"HistoryItem.html#stagetype-getstagetype","title":"StageType GetStageType ( )","text":"","tags":["Class"]},{"location":"HistoryItem.html#gettime","title":"GetTime ()","text":"","tags":["Class"]},{"location":"HistoryItem.html#int-gettime","title":"int GetTime ( )","text":"","tags":["Class"]},{"location":"HistoryItem.html#istrinket","title":"IsTrinket ()","text":"","tags":["Class"]},{"location":"HistoryItem.html#boolean-istrinket","title":"boolean IsTrinket ( )","text":"","tags":["Class"]},{"location":"ImGui.html","title":"Class \"ImGui\"","text":"<p>An example mod using the ImGui class can be found here.</p> Info <p>You can get this class by using the global table \"ImGui\"</p> Example Code <pre><code>local isblind = ImGui.GetVisible(\"braillemenu\")\n</code></pre>","tags":["Class"]},{"location":"ImGui.html#reference","title":"Reference","text":"<p>For element types we use the same names as in ImGui itself. Check out the interactive ImGui example.</p>","tags":["Class"]},{"location":"ImGui.html#icons","title":"Icons","text":"<p>All imgui text supports the usage of icons. Right now, we use \"FontAwesome 6\", which provides ~1400 icons. You can search for fitting icons here: https://fontawesome.com/search?o=r&amp;m=free&amp;s=solid</p> <p>Icon usage in Lua:</p> <p>If you want to add an Icon into your widget, just use the \"Unicode\" representation of the icon and put it in between a <code>\\u{ }</code> string. You can find this, by selecting the icon on the fontawesome page, and looking in the top right corner of the popup-window. You can add it to your element like this:</p> <p><code>\"\\u{f0f9} My Text\"</code></p> <p>This will add the \"truck-medical\" icon in front of the text \"My text\".</p> <p>Result: \" My Text\"</p>","tags":["Class"]},{"location":"ImGui.html#functions","title":"Functions","text":"","tags":["Class"]},{"location":"ImGui.html#addbutton","title":"AddButton ()","text":"","tags":["Class"]},{"location":"ImGui.html#void-addbutton-string-parentid-string-elementid-string-label-function-clickcallback-nil-boolean-issmall-false","title":"void AddButton ( string ParentId, string ElementId, string Label = \"\", function ClickCallback = nil, boolean IsSmall = false )","text":"","tags":["Class"]},{"location":"ImGui.html#addcallback","title":"AddCallback ()","text":"","tags":["Class"]},{"location":"ImGui.html#void-addcallback-string-elementid-imguicallback-type-function-func","title":"void AddCallback ( string ElementId, ImGuiCallback Type, Function func )","text":"<p>Add a callback to an ImGui-element. An element can have one callback per type.</p>","tags":["Class"]},{"location":"ImGui.html#addcheckbox","title":"AddCheckbox ()","text":"","tags":["Class"]},{"location":"ImGui.html#void-addcheckbox-string-parentid-string-elementid-string-label-function-changecallback-nil-boolean-isactive-false","title":"void AddCheckbox ( string ParentId, string ElementId, string Label = \"\", function ChangeCallback = nil, boolean IsActive = false )","text":"","tags":["Class"]},{"location":"ImGui.html#addcombobox","title":"AddCombobox ()","text":"","tags":["Class"]},{"location":"ImGui.html#void-addcombobox-string-parentid-string-elementid-string-label-function-changecallback-nil-table-options-int-selectedindex-0-boolean-isslider-false","title":"void AddCombobox ( string ParentId, string ElementId, string Label = \"\", function ChangeCallback = nil, table Options, int SelectedIndex = 0, boolean IsSlider = false )","text":"<p>Adds a Combobox element which represents a single line element that allows you to select a value from a dropdown menu. If <code>isSlider</code> is set to true, instead of a dropdown menu, the values can be selected by interacting with a slider element.</p> Example Code <pre><code>ImGui.AddCombobox(\"catInput\", \"combobox1\", \"Combobox\", function(index, val) print(index, val) end, { \"Item 1\", \"Item 2\", \"Item 3\" }, 1)\n</code></pre>","tags":["Class"]},{"location":"ImGui.html#adddragfloat","title":"AddDragFloat ()","text":"","tags":["Class"]},{"location":"ImGui.html#void-adddragfloat-string-parentid-string-elementid-string-label-function-changecallback-nil-float-defaultval-0-float-speed-1-float-min-integer_min-float-min-integer_max-string-formatting-3f","title":"void AddDragFloat ( string ParentId, string ElementId, string Label = \"\", function ChangeCallback = nil, float DefaultVal = 0, float Speed = 1, float Min = INTEGER_MIN, float Min = INTEGER_MAX, string Formatting = \"%.3f\" )","text":"","tags":["Class"]},{"location":"ImGui.html#adddraginteger","title":"AddDragInteger ()","text":"","tags":["Class"]},{"location":"ImGui.html#void-adddraginteger-string-parentid-string-elementid-string-label-function-changecallback-nil-int-defaultval-0-float-speed-1-int-min-integer_min-int-min-integer_max-string-formatting-d","title":"void AddDragInteger ( string ParentId, string ElementId, string Label = \"\", function ChangeCallback = nil, int DefaultVal = 0, float Speed = 1, int Min = INTEGER_MIN, int Min = INTEGER_MAX, string Formatting = \"%d%\" )","text":"","tags":["Class"]},{"location":"ImGui.html#addelement","title":"AddElement ()","text":"","tags":["Class"]},{"location":"ImGui.html#void-addelement-string-parentid-string-elementid-imguielement-type-string-label","title":"void AddElement ( string ParentId, string ElementId = \"\", ImGuiElement type, string Label = \"\" )","text":"<p>Adds a generic element to a given parent. Useful to add control elements like \"SameLine\", \"Bullet\" or \"Text\".</p>","tags":["Class"]},{"location":"ImGui.html#addinputcolor","title":"AddInputColor ()","text":"","tags":["Class"]},{"location":"ImGui.html#void-addinputcolor-string-parentid-string-elementid-string-label-function-changecallback-nil-float-r-0-float-g-0-float-b-0","title":"void AddInputColor ( string ParentId, string ElementId, string Label = \"\", function ChangeCallback = nil, float r = 0, float g = 0, float b = 0)","text":"","tags":["Class"]},{"location":"ImGui.html#void-addinputcolor-string-parentid-string-elementid-string-label-function-changecallback-nil-float-r-0-float-g-0-float-b-0-float-a-1","title":"void AddInputColor ( string ParentId, string ElementId, string Label = \"\", function ChangeCallback = nil, float r = 0, float g = 0, float b = 0, float a = 1 )","text":"<p>Adds a color input element. If the parameter <code>a</code> is set, it acts as an RGBA input. Otherwise its just an RGB input. The float values are between <code>0</code> and <code>1</code>.</p> <p>The callback gets passed the r,g,b and a values as seperate parameters.</p> Example Code <pre><code>ImGui.AddInputColor(\"catInput\", \"inputColorRGB\", \"RGB input\", function(r, g, b) print(r, g, b) end, 1, 0.25, 0.45)\nImGui.AddInputColor(\"catInput\", \"inputColorRGBA\", \"RGBA input\", function(r, g, b, a) print(r, g, b, a) end, 0.5, 0.5, 0.5,\n    0.5)\n</code></pre>","tags":["Class"]},{"location":"ImGui.html#addinputcontroller","title":"AddInputController ()","text":"","tags":["Class"]},{"location":"ImGui.html#void-addinputcontroller-string-parentid-string-elementid-string-buttonlabel-function-changecallback-nil-float-defaultval-0","title":"void AddInputController ( string ParentId, string ElementId, string ButtonLabel = \"\", function ChangeCallback = nil, float DefaultVal = 0 )","text":"<p>Adds an input for Gamepad / controller buttons.</p> <p>The callback gets passed the ButtonAction ID and the ImGuiKey name of the new button.</p>","tags":["Class"]},{"location":"ImGui.html#addinputfloat","title":"AddInputFloat ()","text":"","tags":["Class"]},{"location":"ImGui.html#void-addinputfloat-string-parentid-string-elementid-string-label-function-changecallback-nil-float-defaultval-0-float-step-1-float-stepfast-100","title":"void AddInputFloat ( string ParentId, string ElementId, string Label = \"\", function ChangeCallback = nil, float DefaultVal = 0, float Step = 1, float StepFast = 100  )","text":"","tags":["Class"]},{"location":"ImGui.html#addinputinteger","title":"AddInputInteger ()","text":"","tags":["Class"]},{"location":"ImGui.html#void-addinputinteger-string-parentid-string-elementid-string-label-function-changecallback-nil-int-defaultval-0-int-step-1-int-stepfast-100","title":"void AddInputInteger ( string ParentId, string ElementId, string Label = \"\", function ChangeCallback = nil, int DefaultVal = 0, int Step = 1, int StepFast = 100  )","text":"","tags":["Class"]},{"location":"ImGui.html#addinputkeyboard","title":"AddInputKeyboard ()","text":"","tags":["Class"]},{"location":"ImGui.html#void-addinputkeyboard-string-parentid-string-elementid-string-buttonlabel-function-changecallback-nil-float-defaultval-0","title":"void AddInputKeyboard ( string ParentId, string ElementId, string ButtonLabel = \"\", function ChangeCallback = nil, float DefaultVal = 0 )","text":"<p>Adds an input for keyboard buttons.</p> <p>The callback gets passed the Keyboard key ID and the ImGuiKey name of the new button.</p>","tags":["Class"]},{"location":"ImGui.html#addinputtext","title":"AddInputText ()","text":"","tags":["Class"]},{"location":"ImGui.html#void-addinputtext-string-parentid-string-elementid-string-description-function-changecallback-nil-string-defaultval-string-hinttext","title":"void AddInputText ( string ParentId, string ElementId, string Description = \"\", function ChangeCallback = nil, string DefaultVal = \"\", string HintText = \"\" )","text":"<p>Adds a text input element. The text from <code>HintText</code> will get displayed as a \"placeholder\" inside the input element, if the input of the element is empty.</p>","tags":["Class"]},{"location":"ImGui.html#addinputtextmultiline","title":"AddInputTextMultiline ()","text":"","tags":["Class"]},{"location":"ImGui.html#void-addinputtextmultiline-string-parentid-string-elementid-string-description-function-changecallback-nil-string-defaultval-float-displayedlines-6","title":"void AddInputTextMultiline ( string ParentId, string ElementId, string Description = \"\", function ChangeCallback = nil, string DefaultVal = \"\", float DisplayedLines = 6 )","text":"<p>Adds a text input element that allows to input multiple lines of text. The attribute <code>displayedLines</code> can be used to change the height of the element.</p>","tags":["Class"]},{"location":"ImGui.html#addplothistogram","title":"AddPlotHistogram ()","text":"","tags":["Class"]},{"location":"ImGui.html#void-addplothistogram-string-parentid-string-elementid-string-label-table-values-string-overlaytext-float-minimum-flt_min-float-maximum-flt_max-float-height-40","title":"void AddPlotHistogram ( string ParentId, string ElementId, string Label = \"\", table Values, string OverlayText = \"\", float Minimum = FLT_MIN, float Maximum = FLT_MAX, float Height = 40 )","text":"<p>Adds a bar-diagram displaying the given data as vertical bars. On default, minimum and maximum are set \"dynamicaly\", making the diagram fit its content perfectly.</p>","tags":["Class"]},{"location":"ImGui.html#addplotlines","title":"AddPlotLines ()","text":"","tags":["Class"]},{"location":"ImGui.html#void-addplotlines-string-parentid-string-elementid-string-label-table-values-string-overlaytext-float-minimum-flt_min-float-maximum-flt_max-float-height-40","title":"void AddPlotLines ( string ParentId, string ElementId, string Label = \"\", table Values, string OverlayText = \"\", float Minimum = FLT_MIN, float Maximum = FLT_MAX, float Height = 40 )","text":"<p>Adds a line-diagram connecting the given values using lines. On default, minimum and maximum are set \"dynamicaly\", making the diagram fit its content perfectly.</p>","tags":["Class"]},{"location":"ImGui.html#addprogressbar","title":"AddProgressBar ()","text":"","tags":["Class"]},{"location":"ImGui.html#void-addprogressbar-string-parentid-string-elementid-string-label-float-progress-0-string-overlaytext-default","title":"void AddProgressBar ( string ParentId, string ElementId, string Label = \"\", float Progress = 0, string OverlayText = \"DEFAULT\" )","text":"<p>Adds a progressbar element. The <code>progress</code> value defines the fill percentage (<code>0</code> to <code>1</code>). </p> <p>If the <code>overlayText</code> was not defined, the progressbar will display the current fill state in percent inside the progressbar (for example 50% when progress is set to 0.5).</p> <p>If the <code>label</code> is empty, the progressbar will render over the full width of the parent element.</p>","tags":["Class"]},{"location":"ImGui.html#addradiobuttons","title":"AddRadioButtons ()","text":"","tags":["Class"]},{"location":"ImGui.html#void-addradiobuttons-string-parentid-string-elementid-function-changecallback-nil-table-options-int-selectedindex-0-boolean-rendersameline-true","title":"void AddRadioButtons ( string ParentId, string ElementId, function ChangeCallback = nil, table options, int SelectedIndex = 0, boolean renderSameLine = true )","text":"Example Code <pre><code>ImGui.AddRadioButtons(\"catInput\", \"radioButtons\", function(index) print(index) end, { \"Radio 1\", \"Radio 2\", \"Radio 3\" }, 1)\n</code></pre>","tags":["Class"]},{"location":"ImGui.html#addsliderfloat","title":"AddSliderFloat ()","text":"","tags":["Class"]},{"location":"ImGui.html#void-addsliderfloat-string-parentid-string-elementid-string-label-function-changecallback-nil-float-defaultval-0-float-min-integer_min-float-max-integer_max-string-formatting-3f","title":"void AddSliderFloat ( string ParentId, string ElementId, string Label = \"\", function ChangeCallback = nil, float DefaultVal = 0, float Min = INTEGER_MIN, float Max = INTEGER_MAX, string Formatting = \"%.3f\" )","text":"","tags":["Class"]},{"location":"ImGui.html#addsliderinteger","title":"AddSliderInteger ()","text":"","tags":["Class"]},{"location":"ImGui.html#void-addsliderinteger-string-parentid-string-elementid-string-label-function-changecallback-nil-int-defaultval-0-int-min-integer_min-int-max-integer_max-string-formatting-d","title":"void AddSliderInteger ( string ParentId, string ElementId, string Label = \"\", function ChangeCallback = nil, int DefaultVal = 0, int Min = INTEGER_MIN, int Max = INTEGER_MAX, string Formatting = \"%d%\" )","text":"","tags":["Class"]},{"location":"ImGui.html#addtab","title":"AddTab ()","text":"","tags":["Class"]},{"location":"ImGui.html#void-addtab-string-parentid-string-elementid-string-label","title":"void AddTab ( string ParentId, string ElementId, string Label )","text":"<p>A tab is a clickable area that shows another page or area.</p> <p>The parent object needs to be a TabBar.</p>","tags":["Class"]},{"location":"ImGui.html#addtabbar","title":"AddTabBar ()","text":"","tags":["Class"]},{"location":"ImGui.html#void-addtabbar-string-parentid-string-elementid","title":"void AddTabBar ( string ParentId, string ElementId )","text":"<p>A TabBar is a container which is used to store Tab elements.</p>","tags":["Class"]},{"location":"ImGui.html#addtext","title":"AddText ()","text":"","tags":["Class"]},{"location":"ImGui.html#void-addtext-string-parentid-string-text-boolean-wraptext-false-string-elementid","title":"void AddText ( string ParentId, string Text, boolean WrapText = false, string ElementId = \"\" )","text":"<p>Creates a text element. If <code>wrapText</code> is set to <code>true</code>, the text will wrap on the window borders. If set to <code>false</code> it will expand the window content till it fits.</p> <p>The ElementId can be set as well, if the text should be able to be edited by later code.</p>","tags":["Class"]},{"location":"ImGui.html#createmenu","title":"CreateMenu ()","text":"","tags":["Class"]},{"location":"ImGui.html#void-createmenu-string-elementid-string-label","title":"void CreateMenu ( string ElementId, string Label = \"\" )","text":"<p>Creates an entry to the main menu bar of Repentogon.</p>","tags":["Class"]},{"location":"ImGui.html#createwindow","title":"CreateWindow ()","text":"","tags":["Class"]},{"location":"ImGui.html#void-createwindow-string-elementid-string-title","title":"void CreateWindow ( string ElementId, string Title = \"\" )","text":"<p>Creates a window object. You need to use <code>LinkWindowToElement()</code> or <code>SetVisible()</code> to toggle the visibility of the window.</p>","tags":["Class"]},{"location":"ImGui.html#elementexists","title":"ElementExists ()","text":"","tags":["Class"]},{"location":"ImGui.html#boolean-elementexists-string-elementid","title":"boolean ElementExists ( string ElementId )","text":"<p>Returns true if an element with the given ID exists already.</p>","tags":["Class"]},{"location":"ImGui.html#getmouseposition","title":"GetMousePosition ()","text":"","tags":["Class"]},{"location":"ImGui.html#void-getmouseposition","title":"void GetMousePosition ( )","text":"<p>Returns the mouse position in Screen coordinates.</p> <p>Use this instead of <code>Input.GetMousePosition()</code> when working with imgui!</p>","tags":["Class"]},{"location":"ImGui.html#getvisible","title":"GetVisible ()","text":"","tags":["Class"]},{"location":"ImGui.html#boolean-getvisible-string-elementid","title":"boolean GetVisible ( string ElementId )","text":"<p>Get if a window element is visible or not.</p>","tags":["Class"]},{"location":"ImGui.html#getwindowpinned","title":"GetWindowPinned ()","text":"","tags":["Class"]},{"location":"ImGui.html#boolean-getwindowpinned-string-windowid","title":"boolean GetWindowPinned ( string WindowId )","text":"<p>Get the pinned state of a window.</p>","tags":["Class"]},{"location":"ImGui.html#hide","title":"Hide ()","text":"","tags":["Class"]},{"location":"ImGui.html#void-hide","title":"void Hide ( )","text":"<p>Closes ImGui.</p>","tags":["Class"]},{"location":"ImGui.html#imguitoworld","title":"ImGuiToWorld ()","text":"","tags":["Class"]},{"location":"ImGui.html#void-imguitoworld-vector-position","title":"void ImGuiToWorld ( Vector Position )","text":"<p>Converts ImGui coordinates into World coordinates.</p> Bug <p>This function does not work correctly when the game's scale factor exceeds MaxRenderScale.</p>","tags":["Class"]},{"location":"ImGui.html#isvisible","title":"IsVisible ()","text":"","tags":["Class"]},{"location":"ImGui.html#boolean-isvisible","title":"boolean IsVisible ( )","text":"<p>Called when the player is actively in ImGui. This isn't triggered by \"pinned\" windows.</p>","tags":["Class"]},{"location":"ImGui.html#linkwindowtoelement","title":"LinkWindowToElement ()","text":"","tags":["Class"]},{"location":"ImGui.html#void-linkwindowtoelement-string-windowid-string-elementid","title":"void LinkWindowToElement ( string WindowId, string ElementId )","text":"<p>Connects a Window or Popup element to another element, making said element act as a \"toggle\" for that window.</p> Example Code <p>this code creates a new menu entry with one menuitem, which on click toggles a window <pre><code>ImGui.CreateMenu(\"myMenu\", \"Test Menu\")\nImGui.AddElement(\"myMenu\", \"myButton\", ImGuiElement.MenuItem, \"Some Text\")\nImGui.CreateWindow(\"myWindow\", \"Some Window title\")\nImGui.LinkWindowToElement(\"myWindow\", \"myButton\")\n</code></pre></p>","tags":["Class"]},{"location":"ImGui.html#pushnotification","title":"PushNotification ()","text":"","tags":["Class"]},{"location":"ImGui.html#void-pushnotification-string-text-imguinotificationtype-notificationtype-0-int-lifetime-5000","title":"void PushNotification ( string Text, ImGuiNotificationType notificationType = 0, int lifetime = 5000 )","text":"<p>Displays a pop-up message window in the style of a notification.</p>","tags":["Class"]},{"location":"ImGui.html#removecallback","title":"RemoveCallback ()","text":"","tags":["Class"]},{"location":"ImGui.html#void-removecallback-string-elementid-imguicallback-type","title":"void RemoveCallback ( string ElementId, ImGuiCallback type )","text":"<p>Remove the callback of the given type from the element.</p>","tags":["Class"]},{"location":"ImGui.html#removecolor","title":"RemoveColor ()","text":"","tags":["Class"]},{"location":"ImGui.html#void-removecolor-string-elementid-imguicolor-colortype","title":"void RemoveColor ( string ElementId, ImGuiColor colorType )","text":"<p>Remove a color modifier of the given type from the element.</p>","tags":["Class"]},{"location":"ImGui.html#removeelement","title":"RemoveElement ()","text":"","tags":["Class"]},{"location":"ImGui.html#void-removeelement-string-elementid","title":"void RemoveElement ( string ElementId )","text":"<p>General function to remove any kind of element.</p>","tags":["Class"]},{"location":"ImGui.html#removemenu","title":"RemoveMenu ()","text":"","tags":["Class"]},{"location":"ImGui.html#void-removemenu-string-elementid","title":"void RemoveMenu ( string ElementId )","text":"","tags":["Class"]},{"location":"ImGui.html#removewindow","title":"RemoveWindow ()","text":"","tags":["Class"]},{"location":"ImGui.html#void-removewindow-string-elementid","title":"void RemoveWindow ( string ElementId )","text":"","tags":["Class"]},{"location":"ImGui.html#reset","title":"Reset ()","text":"","tags":["Class"]},{"location":"ImGui.html#void-reset","title":"void Reset ( )","text":"<p>Removes all custom defined Imgui elements and resets imgui back to its original state.</p>","tags":["Class"]},{"location":"ImGui.html#setcolor","title":"SetColor ()","text":"","tags":["Class"]},{"location":"ImGui.html#void-setcolor-string-elementid-imguicolor-colortype-float-r-float-g-float-b-float-a-10","title":"void SetColor ( string ElementId, ImGuiColor ColorType, float r, float g, float b, float a = 1.0 )","text":"<p>Adds a color modifier to a given element.</p>","tags":["Class"]},{"location":"ImGui.html#sethelpmarker","title":"SetHelpmarker ()","text":"","tags":["Class"]},{"location":"ImGui.html#void-sethelpmarker-string-elementid-string-text","title":"void SetHelpmarker ( string ElementId, string Text )","text":"<p>Adds a helpmarker to a given element. A Helpmarker is a <code>(?)</code> element rendered on the right of an element, which when hovered displays a tooltip.</p>","tags":["Class"]},{"location":"ImGui.html#settextcolor","title":"SetTextColor ()","text":"","tags":["Class"]},{"location":"ImGui.html#void-settextcolor-string-elementid-float-r-float-g-float-b-float-a-10","title":"void SetTextColor ( string ElementId, float r, float g, float b, float a = 1.0 )","text":"<p>Shortcut function to add a color modifier to text of a given element.</p>","tags":["Class"]},{"location":"ImGui.html#settooltip","title":"SetTooltip ()","text":"","tags":["Class"]},{"location":"ImGui.html#void-settooltip-string-elementid-string-text","title":"void SetTooltip ( string ElementId, string Text )","text":"<p>Adds a tooltip to a given element. The tooltip is visible when the user hovers over the element.</p>","tags":["Class"]},{"location":"ImGui.html#setvisible","title":"SetVisible ()","text":"","tags":["Class"]},{"location":"ImGui.html#void-setvisible-string-elementid-boolean-visible","title":"void SetVisible ( string ElementId, boolean Visible )","text":"","tags":["Class"]},{"location":"ImGui.html#setwindowpinned","title":"SetWindowPinned ()","text":"","tags":["Class"]},{"location":"ImGui.html#void-setwindowpinned-string-windowid-boolean-pinned","title":"void SetWindowPinned ( string WindowId, boolean Pinned )","text":"<p>Set the pinned state of a window, making it visible when the ImGui interface is not active.</p>","tags":["Class"]},{"location":"ImGui.html#setwindowposition","title":"SetWindowPosition ()","text":"","tags":["Class"]},{"location":"ImGui.html#void-setwindowposition-string-windowid-float-x-float-y","title":"void SetWindowPosition ( string WindowId, float x, float y )","text":"<p>Set the position of a window in screen coordinates.</p>","tags":["Class"]},{"location":"ImGui.html#setwindowsize","title":"SetWindowSize ()","text":"","tags":["Class"]},{"location":"ImGui.html#void-setwindowsize-string-windowid-float-width-float-height","title":"void SetWindowSize ( string WindowId, float width, float Height )","text":"<p>Set the width and height of a window, in pixels.</p>","tags":["Class"]},{"location":"ImGui.html#show","title":"Show ()","text":"","tags":["Class"]},{"location":"ImGui.html#void-show","title":"void Show ( )","text":"<p>Opens ImGui.</p>","tags":["Class"]},{"location":"ImGui.html#updatedata","title":"UpdateData ()","text":"","tags":["Class"]},{"location":"ImGui.html#void-updatedata-string-elementid-imguidata-datatype-int-newdatavalue","title":"void UpdateData ( string ElementId, ImGuiData DataType, int NewDataValue )","text":"","tags":["Class"]},{"location":"ImGui.html#void-updatedata-string-elementid-imguidata-datatype-float-newdatavalue","title":"void UpdateData ( string ElementId, ImGuiData DataType, float NewDataValue )","text":"","tags":["Class"]},{"location":"ImGui.html#void-updatedata-string-elementid-imguidata-datatype-boolean-newdatavalue","title":"void UpdateData ( string ElementId, ImGuiData DataType, boolean NewDataValue )","text":"","tags":["Class"]},{"location":"ImGui.html#void-updatedata-string-elementid-imguidata-datatype-string-newdatavalue","title":"void UpdateData ( string ElementId, ImGuiData DataType, string NewDataValue )","text":"","tags":["Class"]},{"location":"ImGui.html#void-updatedata-string-elementid-imguidata-datatype-table-newdatavalues","title":"void UpdateData ( string ElementId, ImGuiData DataType, table NewDataValues )","text":"<p>Update arbitrary data of a given element. See ImGuiData for possible data to update.</p> <p>The dataTypes and the expected NewDataValue are evaluated per element. Therefore, if you try to update data of an element where this data is not used, this function will throw an error for you.</p>","tags":["Class"]},{"location":"ImGui.html#updatetext","title":"UpdateText ()","text":"","tags":["Class"]},{"location":"ImGui.html#void-updatetext-string-elementid-string-text","title":"void UpdateText ( string ElementId, string Text )","text":"<p>Shortcut function to update an element text or label.</p>","tags":["Class"]},{"location":"ImGui.html#worldtoimgui","title":"WorldToImGui ()","text":"","tags":["Class"]},{"location":"ImGui.html#void-worldtoimgui-vector-position","title":"void WorldToImGui ( Vector Position )","text":"<p>Converts world coordinates into ImGui coordinates.</p> Bug <p>This function does not work correctly when the game's scale factor exceeds MaxRenderScale.</p>","tags":["Class"]},{"location":"Input.html","title":"Class \"Input\"","text":"","tags":["Class"]},{"location":"Input.html#functions","title":"Functions","text":"","tags":["Class"]},{"location":"Input.html#getdevicenamebyidx","title":"GetDeviceNameByIdx ()","text":"","tags":["Class"]},{"location":"Input.html#string-getdevicenamebyidx-integer-controlleridx","title":"string GetDeviceNameByIdx ( integer controllerIdx )","text":"","tags":["Class"]},{"location":"Input.html#getmousewheel","title":"GetMouseWheel ()","text":"","tags":["Class"]},{"location":"Input.html#vector-getmousewheel","title":"Vector GetMouseWheel ( )","text":"","tags":["Class"]},{"location":"Isaac.html","title":"Global Class \"Isaac\"","text":"","tags":["Global","Class"]},{"location":"Isaac.html#modified-functions","title":"Modified Functions","text":"","tags":["Global","Class"]},{"location":"Isaac.html#findbytype","title":"FindByType ()","text":"","tags":["Global","Class"]},{"location":"Isaac.html#entity-findbytype-entitytype-type-int-variant-1-int-subtype-1-boolean-cache-false-boolean-ignorefriendly-false","title":"Entity[] FindByType ( EntityType Type, int Variant = -1, int SubType = -1, boolean Cache = false, boolean IgnoreFriendly = false )","text":"<p>Same as vanilla, but much faster.</p>","tags":["Global","Class"]},{"location":"Isaac.html#findinradius","title":"FindInRadius ()","text":"","tags":["Global","Class"]},{"location":"Isaac.html#entity-findinradius-vector-position-float-radius-entitypartition-partitions-0xffffffff","title":"Entity[] FindInRadius ( Vector Position, float Radius, EntityPartition Partitions = 0xFFFFFFFF  )","text":"<p>Same as in vanilla, but much faster and with fixed search for effects.</p>","tags":["Global","Class"]},{"location":"Isaac.html#getroomentities","title":"GetRoomEntities ()","text":"","tags":["Global","Class"]},{"location":"Isaac.html#entity-getroomentities","title":"Entity[] GetRoomEntities ( )","text":"<p>Same as vanilla, but much faster.</p>","tags":["Global","Class"]},{"location":"Isaac.html#functions","title":"Functions","text":"","tags":["Global","Class"]},{"location":"Isaac.html#allmarksfilled","title":"AllMarksFilled ()","text":"","tags":["Global","Class"]},{"location":"Isaac.html#int-allmarksfilled-playertype-character","title":"int AllMarksFilled ( PlayerType Character)","text":"<p>Checks if a given character has completed all marks and returns an integer representing the highest difficulty it was accomplished in.</p> Note <p>The difficulties are as follows:</p> <ul> <li><code>0</code> - None</li> <li><code>1</code> - Normal</li> <li><code>2</code> - Hard</li> </ul>","tags":["Global","Class"]},{"location":"Isaac.html#alltaintedcompletion","title":"AllTaintedCompletion ()","text":"","tags":["Global","Class"]},{"location":"Isaac.html#int-alltaintedcompletion-playertype-character-taintedmarksgroup-group","title":"int AllTaintedCompletion ( PlayerType Character, TaintedMarksGroup Group)","text":"<p>Checks if a given character has completed all the tainted unlock-related marks and returns an integer representing the highest difficulty it was accomplished in.</p> Note <p>The difficulties are as follows:</p> <ul> <li><code>0</code> - None</li> <li><code>1</code> - Normal</li> <li><code>2</code> - Hard</li> </ul>","tags":["Global","Class"]},{"location":"Isaac.html#canstarttruecoop","title":"CanStartTrueCoop ()","text":"","tags":["Global","Class"]},{"location":"Isaac.html#boolean-canstarttruecoop","title":"boolean CanStartTrueCoop ( )","text":"","tags":["Global","Class"]},{"location":"Isaac.html#centercursor","title":"CenterCursor ()","text":"","tags":["Global","Class"]},{"location":"Isaac.html#void-centercursor","title":"void CenterCursor ( )","text":"<p>Moves the windows mouse cursor to the center of the game's window. This is incredibly niche but useful if you want to use cursor controls for anything fancy and have full control over it. It wont move the cursor if Isaac.exe becomes out of focus.</p> Note <p>Take in mind the screen center is NOT the center of the room necessarily, it's just the center of the game's window(center of the actual screen if you are on fullscreen).</p>","tags":["Global","Class"]},{"location":"Isaac.html#clearbosshazards","title":"ClearBossHazards ()","text":"","tags":["Global","Class"]},{"location":"Isaac.html#void-clearbosshazards-boolean-ignorenpcs-false","title":"void ClearBossHazards ( boolean IgnoreNPCs = false )","text":"<p>Kills all projectiles. Kills all non-friendly NPCs capable of keeping doors closed as well if <code>IgnoreNPCs</code> is false.</p>","tags":["Global","Class"]},{"location":"Isaac.html#clearchallenge","title":"ClearChallenge ()","text":"","tags":["Global","Class"]},{"location":"Isaac.html#void-clearchallenge-int-challengeid","title":"void ClearChallenge ( int challengeid)","text":"<p>Sets the challenge of the corresponding <code>challengeid</code> to completed.</p>","tags":["Global","Class"]},{"location":"Isaac.html#clearcompletionmarks","title":"ClearCompletionMarks ()","text":"","tags":["Global","Class"]},{"location":"Isaac.html#void-clearcompletionmarks-playertype-character","title":"void ClearCompletionMarks ( PlayerType Character)","text":"<p>Deletes all completion marks for a given character.</p>","tags":["Global","Class"]},{"location":"Isaac.html#createtimer","title":"CreateTimer ()","text":"","tags":["Global","Class"]},{"location":"Isaac.html#entityeffect-createtimer-function-function-int-interval-int-times-boolean-persistent","title":"EntityEffect CreateTimer ( function Function, int Interval, int Times, boolean Persistent )","text":"<p>Spawns a timer EntityEffect. This entity will starting running <code>Function</code> function after <code>Interval</code> frames, and will repeat it <code>Times</code> amount of times. <code>Persistent</code> controls whether or not this timer \"dies\" in the current room, or persists across rooms.</p> Timer behavior <p>This timer is called every game update. This means the timer only takes into consideration frames in which the game is actively running, not paused, and uses update frames for its Delay parameter (30 frames per second). </p> <p>If your use case requires that a timer takes paused time into account, stick with a custom timer running on a RENDER callback.</p>","tags":["Global","Class"]},{"location":"Isaac.html#createweapon","title":"CreateWeapon ()","text":"","tags":["Global","Class"]},{"location":"Isaac.html#weapon-createweapon-weapontype-type-entity-owner","title":"Weapon CreateWeapon ( WeaponType Type, Entity Owner )","text":"<p>Creates and returns a Weapon object. It is not automatically useable by <code>owner</code> and <code>Isaac.SetWeaponType</code> must be used in tandem.</p>","tags":["Global","Class"]},{"location":"Isaac.html#destroyweapon","title":"DestroyWeapon ()","text":"","tags":["Global","Class"]},{"location":"Isaac.html#void-destroyweapon-weapon-weapon","title":"void DestroyWeapon ( Weapon Weapon )","text":"<p>Destroys the provided Weapon object.</p>","tags":["Global","Class"]},{"location":"Isaac.html#drawline","title":"DrawLine ()","text":"","tags":["Global","Class"]},{"location":"Isaac.html#void-drawline-vector-startpos-vector-endpos-kcolor-startcolor-kcolor-endcolor-int-thickness","title":"void DrawLine ( Vector StartPos, Vector EndPos, KColor StartColor, KColor EndColor, int Thickness )","text":"<p>Draws a line between the two given positions this render frame.</p>","tags":["Global","Class"]},{"location":"Isaac.html#drawquad","title":"DrawQuad ()","text":"","tags":["Global","Class"]},{"location":"Isaac.html#void-drawquad-vector-topleftpos-vector-toprightpos-vector-bottomleftpos-vector-bottomrightpos-kcolor-color-int-thickness","title":"void DrawQuad ( Vector TopLeftPos, Vector TopRightPos, Vector BottomLeftPos, Vector BottomRightPos, KColor Color, int Thickness )","text":"<p>Draws a line between the two given positions this render frame. Internally the game uses its own struct for this, DestinationQuad, but I haven't gotten to adding that to Lua yet </p>","tags":["Global","Class"]},{"location":"Isaac.html#fillcompletionmarks","title":"FillCompletionMarks ()","text":"","tags":["Global","Class"]},{"location":"Isaac.html#void-fillcompletionmarks-playertype-character","title":"void FillCompletionMarks ( PlayerType Character)","text":"<p>Completes all completion marks for a given character.</p>","tags":["Global","Class"]},{"location":"Isaac.html#findincapsule","title":"FindInCapsule ()","text":"","tags":["Global","Class"]},{"location":"Isaac.html#entity-findincapsule-capsule-capsule-entitypartitions-partitions-1","title":"Entity[] FindInCapsule ( Capsule Capsule, EntityPartitions Partitions = -1 )","text":"<p>Return entities inside of given capsule, filtered by partitions mask.</p>","tags":["Global","Class"]},{"location":"Isaac.html#findtargetpit","title":"FindTargetPit ()","text":"","tags":["Global","Class"]},{"location":"Isaac.html#int-findtargetpit-vector-position-vector-targetposition-int-pitindex-1","title":"int FindTargetPit ( Vector Position, Vector TargetPosition, int PitIndex = -1 )","text":"","tags":["Global","Class"]},{"location":"Isaac.html#getachievementidbyname","title":"GetAchievementIdByName ()","text":"","tags":["Global","Class"]},{"location":"Isaac.html#int-getachievementidbyname-string-name","title":"int GetAchievementIdByName ( string Name )","text":"<p>Gets the Achievement ID By Name.</p>","tags":["Global","Class"]},{"location":"Isaac.html#getaxisalignedunitvectorfromdir","title":"GetAxisAlignedUnitVectorFromDir ()","text":"","tags":["Global","Class"]},{"location":"Isaac.html#vector-getaxisalignedunitvectorfromdir-direction-direction-1","title":"Vector GetAxisAlignedUnitVectorFromDir ( Direction Direction = -1 )","text":"","tags":["Global","Class"]},{"location":"Isaac.html#getbackdropidbyname","title":"GetBackdropIdByName ()","text":"","tags":["Global","Class"]},{"location":"Isaac.html#int-getbackdropidbyname-string-backdropname","title":"int GetBackdropIdByName ( string BackdropName )","text":"","tags":["Global","Class"]},{"location":"Isaac.html#getbosscoloridxbyname","title":"GetBossColorIdxByName ()","text":"","tags":["Global","Class"]},{"location":"Isaac.html#int-getbosscoloridxbyname-string-name","title":"int GetBossColorIdxByName ( string Name )","text":"<p>Gets the boss color idx By Name, the idx is usually the subtype the boss needs to become the desired color. Granted, you actually need to give your color entry a name on the xml for this to work (suffix wont work usually, since its not mandatory).</p>","tags":["Global","Class"]},{"location":"Isaac.html#getclipboard","title":"GetClipboard ()","text":"","tags":["Global","Class"]},{"location":"Isaac.html#string-getclipboard","title":"string GetClipboard ( )","text":"<p>Gets the contents of the clipboard as long as they are in text form, otherwise it will just return nil.</p>","tags":["Global","Class"]},{"location":"Isaac.html#getcollectiblespawnposition","title":"GetCollectibleSpawnPosition ()","text":"","tags":["Global","Class"]},{"location":"Isaac.html#vector-getcollectiblespawnposition-vector-position","title":"Vector GetCollectibleSpawnPosition ( Vector Position )","text":"","tags":["Global","Class"]},{"location":"Isaac.html#getcompletionmark","title":"GetCompletionMark ()","text":"","tags":["Global","Class"]},{"location":"Isaac.html#int-getcompletionmark-playertype-character-completiontype-mark","title":"int GetCompletionMark ( PlayerType Character, CompletionType Mark)","text":"<p>Gets a completion mark value for a specific character, value from <code>0</code> to <code>2</code> (0 = not accomplished, 1 = normal, 2 = hard).</p>","tags":["Global","Class"]},{"location":"Isaac.html#getcompletionmarks","title":"GetCompletionMarks ()","text":"","tags":["Global","Class"]},{"location":"Isaac.html#table-getcompletionmarks-playertype-character","title":"table GetCompletionMarks ( PlayerType Character)","text":"<p>Returns a table containing all the marks for the character.</p> Table structure &amp; usage <ul> <li>The table has the following fields: <ul> <li>PlayerType: containing the PlayerType associated to the marks</li> <li>MomsHeart: value of Difficulty 0-2 indicating the completion</li> <li>Isaac: value of Difficulty 0-2 indicating the completion</li> <li>Satan: value of Difficulty 0-2 indicating the completion</li> <li>BossRush: value of Difficulty 0-2 indicating the completion</li> <li>BlueBaby: value of Difficulty 0-2 indicating the completion</li> <li>Lamb: value of Difficulty 0-2 indicating the completion</li> <li>MegaSatan: value of Difficulty 0-2 indicating the completion</li> <li>UltraGreed: value of Difficulty 0-2 indicating the completion</li> <li>Hush: value of Difficulty 0-2 indicating the completion</li> <li>UltraGreedier: Mostly redundant with UltraGreed when it has a value of 2, no need to set it</li> <li>Delirium: value of Difficulty 0-2 indicating the completion</li> <li>Mother: value of Difficulty 0-2 indicating the completion</li> <li>Beast: value of Difficulty 0-2 indicating the completion     <pre><code>local marks = Isaac.GetCompletionMarks(0)\nif (marks.MomsHeart &gt; 0) then\n    print(\"got mom\")\nend\nif (marks.Lamb &gt;= 2) then\n    print(\"GOATED ON H4RD\")\nend\nif (Isaac.GetCompletionMarks(0).Delirium &gt; 0) then --doing it the lazy way, fitting deliriums theme\n    print(\"Got Deli\")\nend\n</code></pre></li> </ul> </li> </ul>","tags":["Global","Class"]},{"location":"Isaac.html#getcurrentstageconfigid","title":"GetCurrentStageConfigId ()","text":"","tags":["Global","Class"]},{"location":"Isaac.html#stbtype-getcurrentstageconfigid","title":"StbType GetCurrentStageConfigId ( )","text":"<p>Gets the current stageconfigId/stbType, or whatever you wanna call the id of the stages.xml, for the current stage.</p>","tags":["Global","Class"]},{"location":"Isaac.html#getcursorsprite","title":"GetCursorSprite ()","text":"","tags":["Global","Class"]},{"location":"Isaac.html#sprite-getcursorsprite","title":"Sprite GetCursorSprite ( )","text":"<p>Returns the cursor sprite that is rendered when <code>Options.MouseControl</code> is set to true. </p>","tags":["Global","Class"]},{"location":"Isaac.html#getcutsceneidbyname","title":"GetCutsceneIdByName ()","text":"","tags":["Global","Class"]},{"location":"Isaac.html#table-getcutsceneidbyname-string-name","title":"table GetCutsceneIdByName ( string Name )","text":"<p>Gets the Cutscene ID By Name.</p>","tags":["Global","Class"]},{"location":"Isaac.html#getdwmwindowattribute","title":"GetDwmWindowAttribute ()","text":"","tags":["Global","Class"]},{"location":"Isaac.html#dwmwindowattribute-getdwmwindowattribute","title":"DwmWindowAttribute GetDwmWindowAttribute ( )","text":"","tags":["Global","Class"]},{"location":"Isaac.html#getentitysubtypebyname","title":"GetEntitySubTypeByName ()","text":"","tags":["Global","Class"]},{"location":"Isaac.html#int-getentitysubtypebyname-string-name","title":"int GetEntitySubTypeByName ( string Name )","text":"<p>Gets the entity SubType by entity name.</p>","tags":["Global","Class"]},{"location":"Isaac.html#getgiantbookidbyname","title":"GetGiantBookIdByName ()","text":"","tags":["Global","Class"]},{"location":"Isaac.html#int-getgiantbookidbyname-string-name","title":"int GetGiantBookIdByName ( string Name )","text":"<p>Gets a GiantBook Id by name. For vanilla giantbooks, the png filename, from the gfx xml attribute, is used as the giantbook name.</p>","tags":["Global","Class"]},{"location":"Isaac.html#getloadedmodules","title":"GetLoadedModules ()","text":"","tags":["Global","Class"]},{"location":"Isaac.html#table-getloadedmodules","title":"table GetLoadedModules ( )","text":"<p>Returns a key - value table containing all loaded script files, where the key is the name or path of a given script file, and the value the return value of that file after loading. (In most cases its true or a table)</p>","tags":["Global","Class"]},{"location":"Isaac.html#getlocalizedstring","title":"GetLocalizedString ()","text":"","tags":["Global","Class"]},{"location":"Isaac.html#string-getlocalizedstring-string-category-string-key-int-language","title":"string GetLocalizedString ( string Category, string Key, int Language )","text":"","tags":["Global","Class"]},{"location":"Isaac.html#string-getlocalizedstring-string-category-string-key-string-languagecode","title":"string GetLocalizedString ( string Category, string Key, string LanguageCode )","text":"<p>Returns the translation string associated with the given key in the given category. The translation is given in the language ID/language code given as parameter.</p>","tags":["Global","Class"]},{"location":"Isaac.html#getmodchallengeclearcount","title":"GetModChallengeClearCount ()","text":"","tags":["Global","Class"]},{"location":"Isaac.html#int-getmodchallengeclearcount-int-challengeid","title":"int GetModChallengeClearCount ( int challengeid )","text":"<p>Returns the number of times a custom challenge was cleared. It resets if its ever set as not Done.</p>","tags":["Global","Class"]},{"location":"Isaac.html#getnullitemidbyname","title":"GetNullItemIdByName ()","text":"","tags":["Global","Class"]},{"location":"Isaac.html#int-getnullitemidbyname-string-nullitemname","title":"int GetNullItemIdByName ( string NullItemName )","text":"","tags":["Global","Class"]},{"location":"Isaac.html#getpersistentgamedata","title":"GetPersistentGameData ()","text":"","tags":["Global","Class"]},{"location":"Isaac.html#persistentgamedata-getpersistentgamedata","title":"PersistentGameData GetPersistentGameData ( )","text":"","tags":["Global","Class"]},{"location":"Isaac.html#getpoolidbyname","title":"GetPoolIdByName ()","text":"","tags":["Global","Class"]},{"location":"Isaac.html#itempooltype-getpoolidbyname-string-poolname","title":"ItemPoolType GetPoolIdByName ( string PoolName )","text":"<p>Returns the ID of a given custom pool. Returns <code>-1</code> if the pool is not found.</p>","tags":["Global","Class"]},{"location":"Isaac.html#getrenderposition","title":"GetRenderPosition ()","text":"","tags":["Global","Class"]},{"location":"Isaac.html#vector-getrenderposition-vector-position-boolean-scale-true","title":"Vector GetRenderPosition ( Vector Position, boolean Scale = true )","text":"","tags":["Global","Class"]},{"location":"Isaac.html#getstring","title":"GetString ()","text":"","tags":["Global","Class"]},{"location":"Isaac.html#string-getstring-string-category-string-key","title":"string GetString ( string Category, string Key )","text":"<p>Returns the translation string associated with the given key in the given category. The translation is given in the currently selected language.</p>","tags":["Global","Class"]},{"location":"Isaac.html#getwindowtitle","title":"GetWindowTitle ()","text":"","tags":["Global","Class"]},{"location":"Isaac.html#string-getwindowtitle","title":"string GetWindowTitle ( )","text":"<p>Returns the appended text on the game's window title.</p>","tags":["Global","Class"]},{"location":"Isaac.html#ischallengedone","title":"IsChallengeDone ()","text":"","tags":["Global","Class"]},{"location":"Isaac.html#boolean-ischallengedone-int-challengeid","title":"boolean IsChallengeDone ( int challengeid )","text":"<p>Returns <code>true</code> if the challenge of the corresponding challengeid is completed.</p>","tags":["Global","Class"]},{"location":"Isaac.html#isingame","title":"IsInGame ()","text":"","tags":["Global","Class"]},{"location":"Isaac.html#boolean-isingame","title":"boolean IsInGame ( )","text":"<p>Returns <code>true</code> if <code>Game</code> is non-nil and the current state is correct.</p>","tags":["Global","Class"]},{"location":"Isaac.html#levelgeneratorentry","title":"LevelGeneratorEntry ()","text":"","tags":["Global","Class"]},{"location":"Isaac.html#levelgeneratorentry-levelgeneratorentry","title":"LevelGeneratorEntry LevelGeneratorEntry ( )","text":"<p>Creates a new blank LevelGeneratorEntry object.</p>","tags":["Global","Class"]},{"location":"Isaac.html#markchallengeasnotdone","title":"MarkChallengeAsNotDone ()","text":"","tags":["Global","Class"]},{"location":"Isaac.html#void-markchallengeasnotdone-int-challengeid","title":"void MarkChallengeAsNotDone ( int challengeid )","text":"<p>Sets the challenge as not done.</p>","tags":["Global","Class"]},{"location":"Isaac.html#playcutscene","title":"PlayCutscene ()","text":"","tags":["Global","Class"]},{"location":"Isaac.html#int-playcutscene-int-id-boolean-cleargamestate-false","title":"int PlayCutscene ( int ID, boolean ClearGameState = false )","text":"<p>Plays the Cutscene of the provided ID. Use Isaac.GetCutsceneIdByName to get the IDs, or the enum for the vanilla ones if you prefer.</p>","tags":["Global","Class"]},{"location":"Isaac.html#setclipboard","title":"SetClipboard ()","text":"","tags":["Global","Class"]},{"location":"Isaac.html#boolean-setclipboard-string-clipboarddata","title":"boolean SetClipboard ( string ClipboardData )","text":"<p>Sets the contents of the clipboard to the provided string.</p>","tags":["Global","Class"]},{"location":"Isaac.html#setcompletionmark","title":"SetCompletionMark ()","text":"","tags":["Global","Class"]},{"location":"Isaac.html#void-setcompletionmark-playertype-character-completiontype-mark-int-value","title":"void SetCompletionMark ( PlayerType Character, CompletionType Mark, int Value)","text":"<p>Sets a completion mark of a character to match a specific value from <code>0</code> to <code>2</code> (0 = not accomplished, 1 = normal, 2 = hard).</p>","tags":["Global","Class"]},{"location":"Isaac.html#setcompletionmarks","title":"SetCompletionMarks ()","text":"","tags":["Global","Class"]},{"location":"Isaac.html#void-setcompletionmarks-table-marks","title":"void SetCompletionMarks ( table Marks )","text":"<p>Sets the completion marks of a character to match an input table. Requires a table containing all the marks for the character, getting it from GetCompletionMarks is advised for convenience.</p> Table structure &amp; usage <ul> <li>The table needs the following fields: <ul> <li>PlayerType: containing the PlayerType asociated to the marks</li> <li>MomsHeart: value of Difficulty 0-2 indicating the completion</li> <li>Isaac: value of Difficulty 0-2 indicating the completion</li> <li>Satan: value of Difficulty 0-2 indicating the completion</li> <li>BossRush: value of Difficulty 0-2 indicating the completion</li> <li>BlueBaby: value of Difficulty 0-2 indicating the completion</li> <li>Lamb: value of Difficulty 0-2 indicating the completion</li> <li>MegaSatan: value of Difficulty 0-2 indicating the completion</li> <li>UltraGreed: value of Difficulty 0-2 indicating the completion</li> <li>Hush: value of Difficulty 0-2 indicating the completion</li> <li>UltraGreedier: Mostly redundant with UltraGreed when it has a value of 2, no need to set it</li> <li>Delirium: value of Difficulty 0-2 indicating the completion</li> <li>Mother: value of Difficulty 0-2 indicating the completion</li> <li>Beast: value of Difficulty 0-2 indicating the completion     <pre><code>local marks = Isaac.GetCompletionMarks(0) --getting the current table\nmarks.MomsHeart = 2 --Isaac now will have the hard mark on MHeart\nmarks.Satan = 1 --Isaac will now have the normal mark on Satan\nmarks.BlueBaby = 0 --Removes the BlueBaby Mark if its present\nIsaac.SetCompletionMarks(marks) --Impacts the changes on the player\n</code></pre></li> </ul> </li> </ul>","tags":["Global","Class"]},{"location":"Isaac.html#setcurrentfloorbackdrop","title":"SetCurrentFloorBackdrop ()","text":"","tags":["Global","Class"]},{"location":"Isaac.html#void-setcurrentfloorbackdrop-int-backdropid","title":"void SetCurrentFloorBackdrop ( int BackdropId )","text":"<p>Changes the default room backdrop for the current floor to match the input id. This change wont persists on save/continue so make sure to account for that.</p>","tags":["Global","Class"]},{"location":"Isaac.html#setcurrentfloormusic","title":"SetCurrentFloorMusic ()","text":"","tags":["Global","Class"]},{"location":"Isaac.html#void-setcurrentfloormusic-int-musicid","title":"void SetCurrentFloorMusic ( int MusicId )","text":"<p>Changes the music track for the current floor to match the input id. This change wont persists on save/continue so make sure to account for that.</p>","tags":["Global","Class"]},{"location":"Isaac.html#setcurrentfloorname","title":"SetCurrentFloorName ()","text":"","tags":["Global","Class"]},{"location":"Isaac.html#void-setcurrentfloorname-string-name","title":"void SetCurrentFloorName ( string Name )","text":"<p>Changes the display name for the current floor to match the input id. This change wont persists on save/continue so make sure to account for that.</p>","tags":["Global","Class"]},{"location":"Isaac.html#setdwmwindowattribute","title":"SetDwmWindowAttribute ()","text":"","tags":["Global","Class"]},{"location":"Isaac.html#void-setdwmwindowattribute-dwmwindowattribute-attribute","title":"void SetDwmWindowAttribute ( DwmWindowAttribute Attribute )","text":"","tags":["Global","Class"]},{"location":"Isaac.html#seticon","title":"SetIcon ()","text":"","tags":["Global","Class"]},{"location":"Isaac.html#void-seticon-int-isaacicon-or-string-iconpath-boolean-bypasssize","title":"void SetIcon ( int IsaacIcon OR string IconPath, boolean BypassSize)","text":"<p>Sets the 16x16 icon located on the game window. Does not update the icon elsewhere, such as the task bar.</p> <p><code>IsaacIcon</code> is <code>0</code> for the normal icon, <code>1</code> for the Tainted icon.</p> <p><code>IconPath</code> accepts a path to a .ico file.</p> <p><code>BypassSize</code> bypasses the 16x16 resolution cap.</p>","tags":["Global","Class"]},{"location":"Isaac.html#setwindowtitle","title":"SetWindowTitle ()","text":"","tags":["Global","Class"]},{"location":"Isaac.html#void-setwindowtitle-string-title","title":"void SetWindowTitle ( string Title )","text":"<p>Sets the appended text on the game's window title.</p>","tags":["Global","Class"]},{"location":"Isaac.html#showerrordialog","title":"ShowErrorDialog ()","text":"","tags":["Global","Class"]},{"location":"Isaac.html#dialogreturn-showerrordialog-string-title-string-text-dialogicons-icon-dialogiconserror-dialogbuttons-buttons-dialogbuttonsok","title":"DialogReturn ShowErrorDialog ( string Title, string Text, DialogIcons Icon = DialogIcons.ERROR, DialogButtons Buttons = DialogButtons.OK )","text":"<p>Displays a Win32 message box. Can be controlled with the <code>icon</code> and <code>buttons</code> parameters. Returns a <code>DialogReturn</code> value that indicates the button pressed.</p> Note <p>Take in mind that gamepad wont work for this popup, you'll need to use mouse/keyboard or touchscreen, and the window title wont show up on some enviroments like the steam deck, so dont rely on it too much.</p>","tags":["Global","Class"]},{"location":"Isaac.html#startnewgame","title":"StartNewGame ()","text":"","tags":["Global","Class"]},{"location":"Isaac.html#void-startnewgame-playertype-character-challenge-challenge-challengetypechallenge_null-difficulty-mode-difficultydifficulty_normal-int-seed-random","title":"void StartNewGame ( PlayerType Character, Challenge Challenge = ChallengeType.CHALLENGE_NULL, Difficulty Mode = Difficulty.DIFFICULTY_NORMAL, int Seed = Random )","text":"<p>Starts a new game using the specified arguments. Can be used from the main menu.</p>","tags":["Global","Class"]},{"location":"Isaac.html#triggerwindowresize","title":"TriggerWindowResize ()","text":"","tags":["Global","Class"]},{"location":"Isaac.html#void-triggerwindowresize","title":"void TriggerWindowResize ( )","text":"<p>Simulates a window resize, useful to refresh some option changes like <code>MaxRenderScale</code>.</p>","tags":["Global","Class"]},{"location":"Isaac.html#worldtomenuposition","title":"WorldToMenuPosition ()","text":"","tags":["Global","Class"]},{"location":"Isaac.html#vector-worldtomenuposition-mainmenu-menuid-vector-position","title":"Vector WorldToMenuPosition ( MainMenu MenuId, Vector Position )","text":"<p>Converts the World position from input to a pinned main menu position that varies depending on the enum selected. It's important to reconvert this every frame, in a similar fashion to WorldToRender, in order to properly render when menus are changed or the window is resized.</p>","tags":["Global","Class"]},{"location":"ItemConfig.html","title":"Class \"ItemConfig\"","text":"","tags":["Class"]},{"location":"ItemConfig.html#functions","title":"Functions","text":"","tags":["Class"]},{"location":"ItemConfig.html#canrerollcollectible","title":"CanRerollCollectible ()","text":"","tags":["Class"]},{"location":"ItemConfig.html#boolean-canrerollcollectible-int-id","title":"boolean CanRerollCollectible ( int ID )","text":"<p>Returns <code>true</code> if the collectible can be rerolled.</p> Bug <p>Despite not being a static function, this function must be called with a <code>.</code>, like <code>Isaac.GetItemConfig().CanRerollCollectible(1)</code>.</p>","tags":["Class"]},{"location":"ItemConfig.html#gettaggeditems","title":"GetTaggedItems ()","text":"","tags":["Class"]},{"location":"ItemConfig.html#itemconfig_item-gettaggeditems-int-tags","title":"ItemConfig_Item[] GetTaggedItems ( int Tags )","text":"<p>Returns a table of ItemConfig_Item objects with the given tags</p>","tags":["Class"]},{"location":"ItemConfig_Card.html","title":"Class \"ItemConfigCard\"","text":"","tags":["Class"]},{"location":"ItemConfig_Card.html#functions","title":"Functions","text":"","tags":["Class"]},{"location":"ItemConfig_Card.html#setavailabilitycondition","title":"SetAvailabilityCondition","text":"","tags":["Class"]},{"location":"ItemConfig_Card.html#void-setavailabilitycondition-function-availabilitycondition","title":"void SetAvailabilityCondition ( function AvailabilityCondition )","text":"<p>Sets an additional function that runs when IsAvailable() is called, internally or through the Lua API.</p> <p>The function must return a boolean that determines whether or not the card is available.</p> <p>This is function is only checked after the GreedModeAllowed, Achievement and Hidden check have all being passed, as such this cannot be used to overwrite those evaluations </p> Function Errors <p>If at any point the function errors whilst being executed, then it will be treated the same as if <code>true</code> was returned.</p> <p>If this is not your intended behavior then it is suggested to wrap your actual function around a <code>pcall</code> or <code>xpcall</code> and return false if they fail.</p> <pre><code>local function AvailabilityCondition()\n    -- Your code here\nend\n\n\nlocal function AvailabilityWrapper()\n    -- Call function with pcall to catch errors\n    local success, result = pcall(AvailabilityCondition)\n\n    if success then\n        return result  -- Return result if no error\n    else\n        local errorMessage = 'Error whilst checking Availability of card \"Your Card\": ' .. result\n        Console.PrintError(errorMessage) -- Print the error message\n        Isaac.DebugString(errorMessage) -- Log the error message\n        return false\n    end\nend\n\nIsaac.GetItemConfig():GetCard(YourCardId):SetAvailabilityCondition(AvailabilityWrapper)\n</code></pre>","tags":["Class"]},{"location":"ItemConfig_Card.html#clearavailabilitycondition","title":"ClearAvailabilityCondition","text":"","tags":["Class"]},{"location":"ItemConfig_Card.html#void-clearavailabilitycondition","title":"void ClearAvailabilityCondition ( )","text":"<p>Sets the availability condition to <code>nil</code>, useful if the condition is no longer needed and increase performance.</p>","tags":["Class"]},{"location":"ItemConfig_Card.html#getavailabilitycondition","title":"GetAvailabilityCondition","text":"","tags":["Class"]},{"location":"ItemConfig_Card.html#function-getavailabilitycondition","title":"function GetAvailabilityCondition ( )","text":"<p>Returns <code>nil</code> if no AvailabilityCondition is set or if it has been cleared.</p>","tags":["Class"]},{"location":"ItemConfig_Card.html#variables","title":"Variables","text":"","tags":["Class"]},{"location":"ItemConfig_Card.html#hidden","title":"Hidden","text":"","tags":["Class"]},{"location":"ItemConfig_Card.html#const-boolean-hidden","title":"const boolean Hidden","text":"","tags":["Class"]},{"location":"ItemConfig_Card.html#initialweight","title":"InitialWeight","text":"","tags":["Class"]},{"location":"ItemConfig_Card.html#const-float-initialweight","title":"const float InitialWeight","text":"","tags":["Class"]},{"location":"ItemConfig_Card.html#moddedcardfront","title":"ModdedCardFront","text":"","tags":["Class"]},{"location":"ItemConfig_Card.html#sprite-moddedcardfront","title":"Sprite ModdedCardFront","text":"","tags":["Class"]},{"location":"ItemConfig_Card.html#weight","title":"Weight","text":"","tags":["Class"]},{"location":"ItemConfig_Card.html#float-weight","title":"float Weight","text":"<p>Can be set to a value to increase or decrease the chance of this card being randomly picked</p>","tags":["Class"]},{"location":"ItemConfig_Item.html","title":"Class \"ItemConfigItem\"","text":"","tags":["Class"]},{"location":"ItemConfig_Item.html#functions","title":"Functions","text":"","tags":["Class"]},{"location":"ItemConfig_Item.html#getcustomcachetags","title":"GetCustomCacheTags ()","text":"","tags":["Class"]},{"location":"ItemConfig_Item.html#table-getcustomcachetags","title":"table GetCustomCacheTags ( )","text":"<p>Returns a table containing all the strings specified in the item's <code>customcache</code> attribute in items.xml. Tags are always provided in all lowercase. See items.xml for more information on <code>customcache</code>.</p>","tags":["Class"]},{"location":"ItemConfig_Item.html#getcustomtags","title":"GetCustomTags ()","text":"","tags":["Class"]},{"location":"ItemConfig_Item.html#table-getcustomtags","title":"table GetCustomTags ( )","text":"<p>Returns a table containing all the strings specified in the item's <code>customtags</code> attribute in items.xml. Tags are always provided in all lowercase. See items.xml for more information on <code>customtags</code>.</p>","tags":["Class"]},{"location":"ItemConfig_Item.html#hascustomcachetag","title":"HasCustomCacheTag ()","text":"","tags":["Class"]},{"location":"ItemConfig_Item.html#boolean-hascustomcachetag-string-tag","title":"boolean HasCustomCacheTag ( string tag )","text":"<p>Returns true if the items has the provided string specified in its <code>customcache</code> attribute in items.xml. Capitalization does not matter. See items.xml for more information on <code>customcache</code>.</p>","tags":["Class"]},{"location":"ItemConfig_Item.html#hascustomtag","title":"HasCustomTag ()","text":"","tags":["Class"]},{"location":"ItemConfig_Item.html#boolean-hascustomtag-string-tag","title":"boolean HasCustomTag ( string tag )","text":"<p>Returns true if the items has the provided string specified in its <code>customtags</code> attribute in items.xml. Capitalization does not matter. See items.xml for more information on <code>customtags</code>.</p>","tags":["Class"]},{"location":"ItemConfig_PillEffect.html","title":"Class \"ItemConfigPillEffect\"","text":"","tags":["Class"]},{"location":"ItemConfig_PillEffect.html#modified-variables","title":"Modified Variables","text":"","tags":["Class"]},{"location":"ItemConfig_PillEffect.html#effectclass","title":"EffectClass","text":"","tags":["Class"]},{"location":"ItemConfig_PillEffect.html#int-effectclass","title":"int EffectClass","text":"<p>Same as default, but now returns a proper integer value instead of userdata.</p>","tags":["Class"]},{"location":"ItemConfig_PillEffect.html#effectsubclass","title":"EffectSubClass","text":"","tags":["Class"]},{"location":"ItemConfig_PillEffect.html#int-effectsubclass","title":"int EffectSubClass","text":"<p>Same as default, but now returns a proper integer value instead of userdata.</p>","tags":["Class"]},{"location":"ItemOverlay.html","title":"Global Class \"ItemOverlay\"","text":"Info <p>You can get this class by using the <code>ItemOverlay</code> global table.</p> <p>Note that to call these functions, you must use a <code>.</code> (period) instead of a <code>:</code> (colon)!</p> Example Code <pre><code>local overlaysprite = ItemOverlay.GetSprite()\n</code></pre>","tags":["Global","Class"]},{"location":"ItemOverlay.html#functions","title":"Functions","text":"","tags":["Global","Class"]},{"location":"ItemOverlay.html#getdelay","title":"GetDelay ()","text":"","tags":["Global","Class"]},{"location":"ItemOverlay.html#int-getdelay","title":"int GetDelay ( )","text":"","tags":["Global","Class"]},{"location":"ItemOverlay.html#getmegamushplayersprite","title":"GetMegaMushPlayerSprite ()","text":"","tags":["Global","Class"]},{"location":"ItemOverlay.html#sprite-getmegamushplayersprite","title":"Sprite GetMegaMushPlayerSprite ( )","text":"","tags":["Global","Class"]},{"location":"ItemOverlay.html#getoverlayid","title":"GetOverlayID ()","text":"","tags":["Global","Class"]},{"location":"ItemOverlay.html#giantbook-getoverlayid","title":"Giantbook GetOverlayID ( )","text":"Info <p>Returns the last Giantbook animation that played. This is the current Giantbook if one is currently playing. If none have played yet, returns 0.</p>","tags":["Global","Class"]},{"location":"ItemOverlay.html#getplayer","title":"GetPlayer ()","text":"","tags":["Global","Class"]},{"location":"ItemOverlay.html#entityplayer-getplayer","title":"EntityPlayer GetPlayer ( )","text":"","tags":["Global","Class"]},{"location":"ItemOverlay.html#getsprite","title":"GetSprite ()","text":"","tags":["Global","Class"]},{"location":"ItemOverlay.html#sprite-getsprite","title":"Sprite GetSprite ( )","text":"","tags":["Global","Class"]},{"location":"ItemOverlay.html#show","title":"Show ()","text":"","tags":["Global","Class"]},{"location":"ItemOverlay.html#void-show-giantbook-giantbookid-int-delay-3-entityplayer-nil","title":"void Show ( Giantbook GiantbookID, int Delay = 3, EntityPlayer = nil )","text":"","tags":["Global","Class"]},{"location":"ItemPool.html","title":"Class \"ItemPool\"","text":"","tags":["Class"]},{"location":"ItemPool.html#modified-functions","title":"Modified Functions","text":"","tags":["Class"]},{"location":"ItemPool.html#getcollectible","title":"GetCollectible ()","text":"","tags":["Class"]},{"location":"ItemPool.html#collectibletype-getcollectible-itempooltype-pooltype-boolean-decrease-false-int-seed-random-collectibletype-defaultitem-collectibletypecollectible_null-getcollectibleflag-flags-0","title":"CollectibleType GetCollectible ( ItemPoolType PoolType, boolean Decrease = false, int Seed = Random(), CollectibleType DefaultItem = CollectibleType.COLLECTIBLE_NULL, GetCollectibleFlag Flags = 0 )","text":"<p>Now gives access to the Flags parameter.</p> Setting both Ban Flags <p>Setting both the <code>BAN_ACTIVE</code> and the <code>BAN_PASSIVE</code> flag will cause the function to always return either the <code>DefaultItem</code> or <code>CollectibleType.COLLECTIBLE_BREAKFAST</code></p>","tags":["Class"]},{"location":"ItemPool.html#functions","title":"Functions","text":"","tags":["Class"]},{"location":"ItemPool.html#addbibleupgrade","title":"AddBibleUpgrade ()","text":"","tags":["Class"]},{"location":"ItemPool.html#void-addbibleupgrade-int-add-itempooltype-pooltype","title":"void AddBibleUpgrade ( int Add, ItemPoolType PoolType )","text":"","tags":["Class"]},{"location":"ItemPool.html#canspawncollectible","title":"CanSpawnCollectible ()","text":"","tags":["Class"]},{"location":"ItemPool.html#boolean-canspawncollectible-collectibletype-collectible-boolean-ignorelocked","title":"boolean CanSpawnCollectible ( CollectibleType Collectible, boolean ignoreLocked )","text":"IgnoreLocked <p>If <code>IgnoreLocked</code> is set to true, this function will return true for items that could appear but are locked behind achievements.</p> <p>It will still return false if the item was removed from the item pool or if it can't appear because other effects (Tainted Lost offensive items mechanic or NO! trinket effect).</p>","tags":["Class"]},{"location":"ItemPool.html#getbibleupgrades","title":"GetBibleUpgrades ()","text":"","tags":["Class"]},{"location":"ItemPool.html#int-getbibleupgrades-itempooltype-pooltype","title":"int GetBibleUpgrades ( ItemPoolType PoolType )","text":"<p>Returns number of Bible collectibles added to a pool.</p>","tags":["Class"]},{"location":"ItemPool.html#getcardex","title":"GetCardEx ()","text":"","tags":["Class"]},{"location":"ItemPool.html#card-getcardex-int-seed-int-specialchance-int-runechance-int-suitchance-boolean-allownoncards","title":"Card GetCardEx ( int Seed, int SpecialChance, int RuneChance, int SuitChance, boolean AllowNonCards )","text":"<p>More sophisticated version of ItemPool:GetCard() that allows to define individual chances.</p>","tags":["Class"]},{"location":"ItemPool.html#getcollectiblefromlist","title":"GetCollectibleFromList ()","text":"","tags":["Class"]},{"location":"ItemPool.html#collectibletype-getcollectiblefromlist-collectibletype-itemlist-int-seed-random-collectibletype-defaultitem-collectibletypecollectible_breakfast-boolean-addtoblacklist-true-boolean-excludelockeditems-false","title":"CollectibleType GetCollectibleFromList ( CollectibleType[] ItemList, int Seed = Random(), CollectibleType DefaultItem = CollectibleType.COLLECTIBLE_BREAKFAST, boolean AddToBlacklist = true, boolean ExcludeLockedItems = false )","text":"","tags":["Class"]},{"location":"ItemPool.html#getcollectiblesfrompool","title":"GetCollectiblesFromPool ()","text":"","tags":["Class"]},{"location":"ItemPool.html#table-getcollectiblesfrompool-itempooltype-pooltype","title":"table GetCollectiblesFromPool ( ItemPoolType PoolType )","text":"<p>Returns a table of collectibles registered in the specified pool. The table contains the following fields</p> Field Type Comment itemID CollectibleType initialWeight float weight float decreaseBy float removeOn float isUnlocked boolean","tags":["Class"]},{"location":"ItemPool.html#getnumavailabletrinkets","title":"GetNumAvailableTrinkets ()","text":"","tags":["Class"]},{"location":"ItemPool.html#int-getnumavailabletrinkets","title":"int GetNumAvailableTrinkets ( )","text":"<p>Returns the amount of trinkets available in the item pool.</p>","tags":["Class"]},{"location":"ItemPool.html#getnumitempools","title":"GetNumItemPools ()","text":"","tags":["Class"]},{"location":"ItemPool.html#int-getnumitempools","title":"int GetNumItemPools ( )","text":"<p>Retrieves the total number of item pools in the game, including custom item pools.</p>","tags":["Class"]},{"location":"ItemPool.html#getpillcolor","title":"GetPillColor ()","text":"","tags":["Class"]},{"location":"ItemPool.html#pillcolor-getpillcolor-pilleffect-id","title":"PillColor GetPillColor ( PillEffect ID )","text":"<p>Returns a PillColor matching the specificed PillEffect, returns -1 if the Effect is not in the rotation.</p> <p>Currently not applied by pill modifications, such as PHD/False PHD.</p>","tags":["Class"]},{"location":"ItemPool.html#getrandompool","title":"GetRandomPool ()","text":"","tags":["Class"]},{"location":"ItemPool.html#itempooltype-getrandompool-rng-rng-boolean-advancedsearch-false-itempooltype-filter-boolean-iswhitelist-false","title":"ItemPoolType GetRandomPool ( RNG RNG, boolean AdvancedSearch = false, ItemPoolType[] Filter = {}, boolean IsWhitelist = false)","text":"<p>Picks a random pool in an identical manner to Chaos, where pools with more items have a higher probability of being chosen compared to those with fewer items.</p> <p>Normally this function is tied to the same rules as Chaos, meaning that you can only get the pools for the current mode, but by setting <code>Advanced Search</code> to true you can bypass these restrictions.</p> Advanced Search <p>Setting <code>Advanced Search</code> to true allows you to make use of the <code>Filter</code> parameter.</p> <p>Normally the <code>Filter</code> acts as a blacklist of unwanted itemPools, however setting <code>IsWhitelist</code> to true turns it into a list from which to choose from.</p> Pick Pool From List <p>This code picks a random pool from any of the \"Beggar\" pools</p> <pre><code>local PoolList = {\n    ItemPoolType.POOL_BEGGAR,\n    ItemPoolType.POOL_DEMON_BEGGAR,\n    ItemPoolType.POOL_KEY_MASTER,\n    ItemPoolType.POOL_BATTERY_BUM,\n    ItemPoolType.POOL_BOMB_BUM,\n    ItemPoolType.POOL_ROTTEN_BEGGAR\n}\n\nlocal rng = RNG() -- replace this with your own rng\nlocal randomPool = Game():GetItemPool():GetRandomPool(rng, true, PoolList, true)\n</code></pre> Pick Pool From Vanilla <p>This code picks a random pool from any of the vanilla</p> <pre><code>local itemPool = Game():GetItemPool()\n\nlocal CustomPools = {}\n\n-- Put all custom pools within the Filter\nfor i = 31, itemPool:GetNumItemPools() - 1 do\n    table.insert(CustomPools, i)\nend\n\nlocal rng = RNG(Random()) -- replace this with your own rng\nlocal randomPool = Game():GetItemPool():GetRandomPool(rng, true, CustomPools, false)\n</code></pre>","tags":["Class"]},{"location":"ItemPool.html#getremovedcollectibles","title":"GetRemovedCollectibles ()","text":"","tags":["Class"]},{"location":"ItemPool.html#table-getremovedcollectibles","title":"table GetRemovedCollectibles ( )","text":"<p>Returns a table of collectibles removed from all pools.</p> Example Code <p>This code checks if the sad onion has been removed.</p> <pre><code>local removedCollectibles = itemPool:GetRemovedCollectibles()\n\nif removedCollectibles[CollectibleType.COLLECTIBLE_SAD_ONION] then\n  print(\"Sad onion removed!\")\nend\n</code></pre>","tags":["Class"]},{"location":"ItemPool.html#getroomblacklistedcollectibles","title":"GetRoomBlacklistedCollectibles ()","text":"","tags":["Class"]},{"location":"ItemPool.html#table-getroomblacklistedcollectibles","title":"table GetRoomBlacklistedCollectibles ( )","text":"<p>Returns a table of collectibles blacklisted in the current room.</p> Example Code <p>This code checks if the sad onion has been removed.</p> <pre><code>local blacklistedCollectibles = itemPool:GetRoomBlacklistedCollectibles()\n\nif blacklistedCollectibles[CollectibleType.COLLECTIBLE_SAD_ONION] then\n  print(\"Sad onion blacklisted!\")\nend\n</code></pre>","tags":["Class"]},{"location":"ItemPool.html#hascollectible","title":"HasCollectible ()","text":"","tags":["Class"]},{"location":"ItemPool.html#boolean-hascollectible-collectibletype-collectible","title":"boolean HasCollectible ( CollectibleType Collectible )","text":"<p>Returns <code>true</code> if collectible is available in item pools, <code>false</code> otherwise.</p>","tags":["Class"]},{"location":"ItemPool.html#hastrinket","title":"HasTrinket ()","text":"","tags":["Class"]},{"location":"ItemPool.html#boolean-hastrinket-trinkettype-trinket","title":"boolean HasTrinket ( TrinketType Trinket )","text":"<p>Returns <code>true</code> if trinket is currently available in trinket pool, <code>false</code> otherwise.</p>","tags":["Class"]},{"location":"ItemPool.html#pickcollectible","title":"PickCollectible ()","text":"","tags":["Class"]},{"location":"ItemPool.html#table-pickcollectible-itempooltype-pooltype-boolean-decrease-false-rng-rng-rng-getcollectibleflag-flags-0","title":"table PickCollectible ( ItemPoolType PoolType, boolean Decrease = false, RNG RNG = RNG(), GetCollectibleFlag Flags = 0 )","text":"<p>Returns the raw result of GetCollectible(), without any of the filtering applied by the original function. If the pool has completely ran out of repicks then this function will return <code>nil</code>.</p> <p>If RNG is not set, its initialized with <code>RNG(Random(), 4)</code></p> <p>The table contains the following fields:</p> Field Type Comment itemID CollectibleType initialWeight float weight float decreaseBy float removeOn float isUnlocked boolean Differences with GetCollectible <p>For reference GetCollectible() Gives Up after either this function has failed to pick an Unlocked collectible 20 times in a row or has failed to produce any result at all (nil).</p> <ul> <li> <p>Does not generate a Glitched Item when having the <code>CollectibleType.COLLECTIBLE_TMTRAINER</code> effect.</p> </li> <li> <p>Does not randomize the pool when having the <code>CollectibleType.COLLECTIBLE_CHAOS</code> effect.</p> </li> <li> <p>Does not attempt to get a collectible from <code>ItemPoolType.POOL_TREASURE</code> if Giving up.</p> </li> <li> <p>Does not morph the collectible into <code>CollectibleType.COLLECTIBLE_BREAKFAST</code> if Giving up.</p> </li> <li> <p>Does not attempt to morph the collectible into <code>CollectibleType.COLLECTIBLE_BIBLE</code>, <code>CollectibleType.COLLECTIBLE_MAGIC_SKIN</code> or <code>CollectibleType.COLLECTIBLE_ROSARY</code></p> </li> <li> <p>Does not trigger the MC_PRE_GET_COLLECTIBLE and MC_POST_GET_COLLECTIBLE callback.</p> </li> </ul>","tags":["Class"]},{"location":"ItemPool.html#resetcollectible","title":"ResetCollectible ()","text":"","tags":["Class"]},{"location":"ItemPool.html#void-resetcollectible-collectibletype-collectible","title":"void ResetCollectible ( CollectibleType Collectible )","text":"<p>Makes the available once again, allowing it to naturally spawned even if previously remove. Also restores all instances of the collectible to it's initialWeight in every item pool.</p>","tags":["Class"]},{"location":"ItemPool.html#setlastpool","title":"SetLastPool ()","text":"","tags":["Class"]},{"location":"ItemPool.html#void-setlastpool-itempooltype","title":"void SetLastPool ( ItemPoolType )","text":"","tags":["Class"]},{"location":"ItemPool.html#unidentifypill","title":"UnidentifyPill ()","text":"","tags":["Class"]},{"location":"ItemPool.html#void-unidentifypill-pillcolor-pill","title":"void UnidentifyPill ( PillColor Pill )","text":"<p>Will reset a pill back to unidentified (???) state.</p>","tags":["Class"]},{"location":"LRoomAreaDesc.html","title":"Class \"LRoomAreaDesc\"","text":"Info <p>You can get this class by using the following functions:</p> <ul> <li>Room:GetLRoomAreaDesc()</li> </ul> Example Code <pre><code>local areaDesc = Game():GetRoom():GetLRoomAreaDesc()\n</code></pre>","tags":["Class"]},{"location":"LRoomAreaDesc.html#functions","title":"Functions","text":"","tags":["Class"]},{"location":"LRoomAreaDesc.html#gethighbottomright","title":"GetHighBottomRight ()","text":"","tags":["Class"]},{"location":"LRoomAreaDesc.html#vector-gethighbottomright","title":"Vector GetHighBottomRight ( )","text":"<p>Returns the bottom right corner of the high half of the L-room.</p>","tags":["Class"]},{"location":"LRoomAreaDesc.html#gethightopleft","title":"GetHighTopLeft ()","text":"","tags":["Class"]},{"location":"LRoomAreaDesc.html#vector-gethightopleft","title":"Vector GetHighTopLeft ( )","text":"<p>Returns the top left corner of the high half of the L-room.</p>","tags":["Class"]},{"location":"LRoomAreaDesc.html#getlowbottomright","title":"GetLowBottomRight ()","text":"","tags":["Class"]},{"location":"LRoomAreaDesc.html#vector-getlowbottomright","title":"Vector GetLowBottomRight ( )","text":"<p>Returns the bottom right corner of the low half of the L-room.</p>","tags":["Class"]},{"location":"LRoomAreaDesc.html#getlowtopleft","title":"GetLowTopLeft ()","text":"","tags":["Class"]},{"location":"LRoomAreaDesc.html#vector-getlowtopleft","title":"Vector GetLowTopLeft ( )","text":"<p>Returns the top left corner of the low half of the L-room.</p>","tags":["Class"]},{"location":"LRoomTileDesc.html","title":"Class \"LRoomTileDesc\"","text":"Info <p>You can get this class by using the following functions:</p> <ul> <li>Room:GetLRoomTileDesc()</li> </ul> Example Code <pre><code>local TileDesc = Game():GetRoom():GetLRoomTileDesc()\n</code></pre>","tags":["Class"]},{"location":"LRoomTileDesc.html#functions","title":"Functions","text":"","tags":["Class"]},{"location":"LRoomTileDesc.html#gethighbottomright","title":"GetHighBottomRight ()","text":"","tags":["Class"]},{"location":"LRoomTileDesc.html#int2-gethighbottomright","title":"int[2] GetHighBottomRight ( )","text":"<p>Returns the grid coordinates of the high half's bottom right corner.</p>","tags":["Class"]},{"location":"LRoomTileDesc.html#gethightopleft","title":"GetHighTopLeft ()","text":"","tags":["Class"]},{"location":"LRoomTileDesc.html#int2-gethightopleft","title":"int[2] GetHighTopLeft ( )","text":"<p>Returns the grid coordinates of the high half's top left corner.</p>","tags":["Class"]},{"location":"LRoomTileDesc.html#getlowbottomright","title":"GetLowBottomRight ()","text":"","tags":["Class"]},{"location":"LRoomTileDesc.html#int2-getlowbottomright","title":"int[2] GetLowBottomRight ( )","text":"<p>Returns the grid coordinates of the low half's bottom right corner.</p>","tags":["Class"]},{"location":"LRoomTileDesc.html#getlowtopleft","title":"GetLowTopLeft ()","text":"","tags":["Class"]},{"location":"LRoomTileDesc.html#int2-getlowtopleft","title":"int[2] GetLowTopLeft ( )","text":"<p>Returns the grid coordinates of the low half's top left corner.</p>","tags":["Class"]},{"location":"LRoomTileDesc.html#getrandomtile-int-seed","title":"GetRandomTile ( int Seed )","text":"","tags":["Class"]},{"location":"LRoomTileDesc.html#int2-getrandomtile-int-seed","title":"int[2] GetRandomTile ( int Seed )","text":"<p>Returns the grid coordinates of a random tile in this L-room.</p>","tags":["Class"]},{"location":"LayerState.html","title":"Class \"LayerState\"","text":"","tags":["Class"]},{"location":"LayerState.html#functions","title":"Functions","text":"","tags":["Class"]},{"location":"LayerState.html#clearcustomchampionshader","title":"ClearCustomChampionShader ()","text":"","tags":["Class"]},{"location":"LayerState.html#void-clearcustomchampionshader","title":"void ClearCustomChampionShader ( )","text":"<p>Removes any custom <code>coloroffset_champion</code> shader applied by <code>layer:SetCustomChampionShader(path)</code>.</p>","tags":["Class"]},{"location":"LayerState.html#clearcustomshader","title":"ClearCustomShader ()","text":"","tags":["Class"]},{"location":"LayerState.html#void-clearcustomshader","title":"void ClearCustomShader ( )","text":"<p>Removes any custom <code>coloroffset</code> shader applied by <code>layer:SetCustomShader(path)</code>.</p>","tags":["Class"]},{"location":"LayerState.html#getblendmode","title":"GetBlendMode ()","text":"","tags":["Class"]},{"location":"LayerState.html#blendmode-getblendmode","title":"BlendMode GetBlendMode ( )","text":"","tags":["Class"]},{"location":"LayerState.html#getcolor","title":"GetColor ()","text":"","tags":["Class"]},{"location":"LayerState.html#color-getcolor","title":"Color GetColor ( )","text":"","tags":["Class"]},{"location":"LayerState.html#getcropoffset","title":"GetCropOffset ()","text":"","tags":["Class"]},{"location":"LayerState.html#vector-getcropoffset","title":"Vector GetCropOffset ( )","text":"","tags":["Class"]},{"location":"LayerState.html#getdefaultspritesheetpath","title":"GetDefaultSpritesheetPath ()","text":"","tags":["Class"]},{"location":"LayerState.html#string-getdefaultspritesheetpath","title":"string GetDefaultSpritesheetPath ( )","text":"","tags":["Class"]},{"location":"LayerState.html#getflipx","title":"GetFlipX ()","text":"","tags":["Class"]},{"location":"LayerState.html#boolean-getflipx","title":"boolean GetFlipX ( )","text":"","tags":["Class"]},{"location":"LayerState.html#getflipy","title":"GetFlipY ()","text":"","tags":["Class"]},{"location":"LayerState.html#boolean-getflipy","title":"boolean GetFlipY ( )","text":"","tags":["Class"]},{"location":"LayerState.html#getlayerid","title":"GetLayerID ()","text":"","tags":["Class"]},{"location":"LayerState.html#int-getlayerid","title":"int GetLayerID ( )","text":"","tags":["Class"]},{"location":"LayerState.html#getname","title":"GetName ()","text":"","tags":["Class"]},{"location":"LayerState.html#string-getname","title":"string GetName ( )","text":"","tags":["Class"]},{"location":"LayerState.html#getpos","title":"GetPos ()","text":"","tags":["Class"]},{"location":"LayerState.html#vector-getpos","title":"Vector GetPos ( )","text":"","tags":["Class"]},{"location":"LayerState.html#getrenderflags","title":"GetRenderFlags ()","text":"","tags":["Class"]},{"location":"LayerState.html#animrenderflags-getrenderflags","title":"AnimRenderFlags GetRenderFlags ( )","text":"","tags":["Class"]},{"location":"LayerState.html#getrotation","title":"GetRotation ()","text":"","tags":["Class"]},{"location":"LayerState.html#float-getrotation","title":"float GetRotation ( )","text":"","tags":["Class"]},{"location":"LayerState.html#getsize","title":"GetSize ()","text":"","tags":["Class"]},{"location":"LayerState.html#vector-getsize","title":"Vector GetSize ( )","text":"","tags":["Class"]},{"location":"LayerState.html#getspritesheetpath","title":"GetSpritesheetPath ()","text":"","tags":["Class"]},{"location":"LayerState.html#string-getspritesheetpath","title":"string GetSpritesheetPath ( )","text":"","tags":["Class"]},{"location":"LayerState.html#getwrapsmode","title":"GetWrapSMode ()","text":"","tags":["Class"]},{"location":"LayerState.html#int-getwrapsmode","title":"int GetWrapSMode ( )","text":"<p>Returns the wrap mode for the <code>x</code> coordinate. See this website for a general overview.</p> Info <p>Enums for these are pending.</p>","tags":["Class"]},{"location":"LayerState.html#getwraptmode","title":"GetWrapTMode ()","text":"","tags":["Class"]},{"location":"LayerState.html#int-getwraptmode","title":"int GetWrapTMode ( )","text":"<p>Returns the wrap mode for the <code>y</code> coordinate. See this website for a general overview.</p> Info <p>Enums for these are pending.</p>","tags":["Class"]},{"location":"LayerState.html#hascustomchampionshader","title":"HasCustomChampionShader ()","text":"","tags":["Class"]},{"location":"LayerState.html#boolean-hascustomchampionshader-string-shaderpath","title":"boolean HasCustomChampionShader ( string ShaderPath )","text":"<p>Returns true if the specified custom champion shader is currently loaded (see <code>SetCustomChampionShader</code> below). If no string is provided, returns true if ANY custom champion shader is applied.</p>","tags":["Class"]},{"location":"LayerState.html#hascustomshader","title":"HasCustomShader ()","text":"","tags":["Class"]},{"location":"LayerState.html#boolean-hascustomshader-string-shaderpath","title":"boolean HasCustomShader ( string ShaderPath )","text":"<p>Returns true if the specified custom shader is currently loaded (see <code>SetCustomShader</code> below). If no string is provided, returns true if ANY custom shader is applied.</p>","tags":["Class"]},{"location":"LayerState.html#isvisible","title":"IsVisible ()","text":"","tags":["Class"]},{"location":"LayerState.html#boolean-isvisible","title":"boolean IsVisible ( )","text":"","tags":["Class"]},{"location":"LayerState.html#setcolor","title":"SetColor ()","text":"","tags":["Class"]},{"location":"LayerState.html#void-setcolor-color-color","title":"void SetColor ( Color Color )","text":"","tags":["Class"]},{"location":"LayerState.html#setcropoffset","title":"SetCropOffset ()","text":"","tags":["Class"]},{"location":"LayerState.html#void-setcropoffset-vector-offset","title":"void SetCropOffset ( Vector Offset )","text":"","tags":["Class"]},{"location":"LayerState.html#setcustomchampionshader","title":"SetCustomChampionShader ()","text":"","tags":["Class"]},{"location":"LayerState.html#void-setcustomchampionshader-string-shaderpath","title":"void SetCustomChampionShader ( string ShaderPath )","text":"<p>Specify a custom champion shader file for this layer to use instead of the usual <code>coloroffset_champion</code> shader. Provided path is expected to start at <code>.../resources/</code> and to find both a .vs and .fs file at that location. For example: <code>layer:SetCustomChampionShader(\"shaders/my_shader\")</code> will load <code>.../resources/shaders/my_shader.vs</code> and <code>.../resources/shaders/my_shader.fs</code>.</p> <p>The custom champion shader will only be used by the game if the entity is actually a champion.</p> <p>Note that the custom shader must take the exact same inputs as the default <code>coloroffset_champion</code> shader the game uses (it has one additional input compared to <code>coloroffset</code>).</p>","tags":["Class"]},{"location":"LayerState.html#setcustomshader","title":"SetCustomShader ()","text":"","tags":["Class"]},{"location":"LayerState.html#void-setcustomshader-string-shaderpath","title":"void SetCustomShader ( string ShaderPath )","text":"<p>Specify a custom shader file for this layer to use instead of the default <code>coloroffset</code> shader. Provided path is expected to start at <code>.../resources/</code> and to find both a .vs and .fs file at that location. For example: <code>layer:SetCustomShader(\"shaders/my_shader\")</code> will load <code>.../resources/shaders/my_shader.vs</code> and <code>.../resources/shaders/my_shader.fs</code>.</p> <p>This custom shader will not be used by the game if the entity is a champion, or if it has the gold/dogma shader applied.</p> <p>Note that the custom shader must take the exact same inputs as the default <code>coloroffset</code> shader the game uses. The gold and dogma shaders also use the same inputs, and can be a good reference.</p>","tags":["Class"]},{"location":"LayerState.html#setflipx","title":"SetFlipX ()","text":"","tags":["Class"]},{"location":"LayerState.html#void-setflipx-boolean-value","title":"void SetFlipX ( boolean Value )","text":"","tags":["Class"]},{"location":"LayerState.html#setflipy","title":"SetFlipY ()","text":"","tags":["Class"]},{"location":"LayerState.html#void-setflipy-boolean-value","title":"void SetFlipY ( boolean Value )","text":"","tags":["Class"]},{"location":"LayerState.html#setpos","title":"SetPos ()","text":"","tags":["Class"]},{"location":"LayerState.html#void-setpos-vector-pos","title":"void SetPos ( Vector Pos )","text":"","tags":["Class"]},{"location":"LayerState.html#setrenderflags","title":"SetRenderFlags ()","text":"","tags":["Class"]},{"location":"LayerState.html#void-setrenderflags-animrenderflags-flags","title":"void SetRenderFlags ( AnimRenderFlags Flags )","text":"","tags":["Class"]},{"location":"LayerState.html#setrotation","title":"SetRotation ()","text":"","tags":["Class"]},{"location":"LayerState.html#void-setrotation-float-rotation","title":"void SetRotation ( float Rotation )","text":"","tags":["Class"]},{"location":"LayerState.html#setsize","title":"SetSize ()","text":"","tags":["Class"]},{"location":"LayerState.html#void-setsize-vector-size","title":"void SetSize ( Vector Size )","text":"","tags":["Class"]},{"location":"LayerState.html#setvisible","title":"SetVisible ()","text":"","tags":["Class"]},{"location":"LayerState.html#void-setvisible-boolean-visible","title":"void SetVisible ( boolean Visible )","text":"","tags":["Class"]},{"location":"LayerState.html#setwrapsmode","title":"SetWrapSMode ()","text":"","tags":["Class"]},{"location":"LayerState.html#void-setwrapsmode-int-mode","title":"void SetWrapSMode ( int Mode )","text":"<p>Sets the wrap mode for the <code>x</code> coordinate. See this website for a general overview.</p> Info <p>Enums for these are pending.</p>","tags":["Class"]},{"location":"LayerState.html#setwraptmode","title":"SetWrapTMode ()","text":"","tags":["Class"]},{"location":"LayerState.html#void-setwraptmode-int-mode","title":"void SetWrapTMode ( int Mode )","text":"<p>Sets the wrap mode for the <code>y</code> coordinate. See this website for a general overview.</p> Info <p>Enums for these are pending.</p>","tags":["Class"]},{"location":"Level.html","title":"Class \"Level\"","text":"","tags":["Class"]},{"location":"Level.html#functions","title":"Functions","text":"","tags":["Class"]},{"location":"Level.html#canplaceroom","title":"CanPlaceRoom ()","text":"","tags":["Class"]},{"location":"Level.html#boolean-canplaceroom-roomconfigroom-roomconfigtoplace-int-gridindex-dimension-dimension-1-bool-allowmultipledoors-true-bool-allowspecialneighbors-false-bool-allownoneighbors-false","title":"boolean CanPlaceRoom ( RoomConfigRoom RoomConfigToPlace, int GridIndex, Dimension Dimension = -1, bool AllowMultipleDoors = true, bool AllowSpecialNeighbors = false, bool AllowNoNeighbors = false )","text":"<p>Returns true if the provided room could be successfully placed at this location using TryPlaceRoom.</p> <p>See documentation for TryPlaceRoom for more information.</p>","tags":["Class"]},{"location":"Level.html#canplaceroomatdoor","title":"CanPlaceRoomAtDoor ()","text":"","tags":["Class"]},{"location":"Level.html#boolean-canplaceroomatdoor-roomconfigroom-roomconfigtoplace-roomdescriptor-neighborroomdescriptor-doorslot-doorslot-bool-allowmultipledoors-true-bool-allowspecialneighbors-false","title":"boolean CanPlaceRoomAtDoor ( RoomConfigRoom RoomConfigToPlace, RoomDescriptor NeighborRoomDescriptor, DoorSlot DoorSlot, bool AllowMultipleDoors = true, bool AllowSpecialNeighbors = false )","text":"<p>Returns true if the provided room (the RoomConfigRoom) could be successfully placed as a neighbor of an existing room (the RoomDescriptor) at the specified DoorSlot, using TryPlaceRoomAtDoor.</p> <p>See documentation for TryPlaceRoomAtDoor and TryPlaceRoom for more information.</p>","tags":["Class"]},{"location":"Level.html#canspawndooroutline","title":"CanSpawnDoorOutline ()","text":"","tags":["Class"]},{"location":"Level.html#boolean-canspawndooroutline-int-roomidx-doorslot-doorslot","title":"boolean CanSpawnDoorOutline ( int RoomIdx, DoorSlot DoorSlot )","text":"","tags":["Class"]},{"location":"Level.html#findvalidroomplacementlocations","title":"FindValidRoomPlacementLocations ()","text":"","tags":["Class"]},{"location":"Level.html#int-findvalidroomplacementlocations-roomconfigroom-roomconfig-dimension-dimension-1-bool-allowmultipledoors-true-bool-allowspecialneighbors-false","title":"int[] FindValidRoomPlacementLocations ( RoomConfigRoom RoomConfig, Dimension Dimension = -1, bool AllowMultipleDoors = true, bool AllowSpecialNeighbors = false )","text":"<p>Returns a table of room grid indices that would be valid locations to place the specified room using TryPlaceRoom.</p> <p>Note that if you set <code>AllowSpecialNeighbors</code> to <code>true</code>, you can get weird placements next to the ultra secret room. You can use GetNeighboringRooms to confirm that potential neighbors are desired before placing your room.</p> <p>See TryPlaceRoom for more information on room placement and example code.</p>","tags":["Class"]},{"location":"Level.html#getdimension","title":"GetDimension ()","text":"","tags":["Class"]},{"location":"Level.html#dimension-getdimension","title":"Dimension GetDimension ( )","text":"<p>Get's the current Dimension the player is in.</p>","tags":["Class"]},{"location":"Level.html#getforcespecialquest","title":"GetForceSpecialQuest ()","text":"","tags":["Class"]},{"location":"Level.html#specialquest-getforcespecialquest","title":"SpecialQuest GetForceSpecialQuest ( )","text":"<p>If set, the level will automatically attempt to place the Knife Piece puzzle door for this LevelStage.</p> Info <p>This is set to <code>SpecialQuest.DEFAULT</code> immediately before calling <code>MC_PRE_LEVEL_INIT</code>.</p>","tags":["Class"]},{"location":"Level.html#getgreedwavesclearedwithoutredheartdamage","title":"GetGreedWavesClearedWithoutRedHeartDamage ()","text":"","tags":["Class"]},{"location":"Level.html#int-getgreedwavesclearedwithoutredheartdamage","title":"int GetGreedWavesClearedWithoutRedHeartDamage ( )","text":"","tags":["Class"]},{"location":"Level.html#getmyosotispickups","title":"GetMyosotisPickups ()","text":"","tags":["Class"]},{"location":"Level.html#entitiessavestatevector-getmyosotispickups","title":"EntitiesSaveStateVector GetMyosotisPickups ( )","text":"<p>Returns the pickups that will be transferred to the next floor by the Myosotis trinket effect.</p>","tags":["Class"]},{"location":"Level.html#getneighboringrooms","title":"GetNeighboringRooms ()","text":"","tags":["Class"]},{"location":"Level.html#table-getneighboringrooms-int-gridindex-roomshape-dimension-dimension-1","title":"table GetNeighboringRooms ( int GridIndex, RoomShape, Dimension Dimension = -1 )","text":"<p>Returns a table that maps DoorSlot to RoomDescriptor for all of the neighbors that a room of the specified shape would have if placed at this location.</p> <p>Don't use <code>ipairs</code> to iterate over this, use <code>pairs</code>!</p> <p>Note that this does not give you any information on if a room would actually fit here, or if the neighbors would even allow the connection.</p> <p>If you want to get the neighbors of an existing room, you can simply use RoomDescriptor:GetNeighboringRooms() instead.</p> Example Code <pre><code>-- Returns true if a room placed at this GridIndex with this RoomShape would have a neighboring secret room.\nlocal function WouldHaveSecretRoomNeighbor(gridIndex, roomShape)\n    for doorSlot, neighborDesc in pairs(Game():GetLevel():GetNeighboringRooms(gridIndex, roomShape)) do\n        local roomType = neighborDesc.Data.Type\n        if roomType == RoomType.ROOM_SECRET or roomType == RoomType.ROOM_SUPERSECRET or roomType == RoomType.ROOM_ULTRASECRET then\n            return true\n        end\n    end\n    return false\nend\n</code></pre>","tags":["Class"]},{"location":"Level.html#hasabandonedmineshaft","title":"HasAbandonedMineshaft ()","text":"","tags":["Class"]},{"location":"Level.html#boolean-hasabandonedmineshaft","title":"boolean HasAbandonedMineshaft ( )","text":"<p>Returns <code>true</code> if the floor has the mineshaft room used for the second Knife Piece puzzle.</p>","tags":["Class"]},{"location":"Level.html#hasmirrordimension","title":"HasMirrorDimension ()","text":"","tags":["Class"]},{"location":"Level.html#boolean-hasmirrordimension","title":"boolean HasMirrorDimension ( )","text":"<p>Returns <code>true</code> if the floor has the mirror dimension used for the first Knife Piece puzzle.</p>","tags":["Class"]},{"location":"Level.html#hasphotodoor","title":"HasPhotoDoor ()","text":"","tags":["Class"]},{"location":"Level.html#boolean-hasphotodoor","title":"boolean HasPhotoDoor ( )","text":"<p>Returns <code>true</code> if the floor has the photo door used to enter Mausoleum/Gehenna leading to the Ascent sequence.</p>","tags":["Class"]},{"location":"Level.html#isstageavailable","title":"IsStageAvailable ()","text":"","tags":["Class"]},{"location":"Level.html#void-isstageavailable-levelstage-level-stagetype-stage","title":"void IsStageAvailable ( LevelStage Level, StageType Stage )","text":"<p>Returns <code>true</code> if the provided <code>Level</code> and <code>Stage</code> combination is available to be generated in any given run. Returns <code>false</code> if locked behind an achievement.</p>","tags":["Class"]},{"location":"Level.html#placeroom","title":"PlaceRoom ()","text":"","tags":["Class"]},{"location":"Level.html#boolean-placeroom-levelgeneratorentry-room-roomconfigroom-roomconfig-int-seed","title":"boolean PlaceRoom ( LevelGeneratorEntry Room, RoomConfigRoom RoomConfig, int Seed )","text":"<p>Places a room into the game. Returns <code>true</code> if successful.</p> <p>Note that this function does not really check if a room placement would be considered valid, nor does it create the doors necessary to connect the new room to its neighbors.</p> <p>See TryPlaceRoom and related functions if you want to properly add new rooms to the floor after level generation, similarly to what Red Key does.</p>","tags":["Class"]},{"location":"Level.html#setforcespecialquest","title":"SetForceSpecialQuest ()","text":"","tags":["Class"]},{"location":"Level.html#void-setforcespecialquest-specialquest-quest","title":"void SetForceSpecialQuest ( SpecialQuest Quest )","text":"<p>Sets whether the level should attempt to place the Knife Piece puzzle door for this LevelStage.</p> Info <p>This is set to <code>SpecialQuest.DEFAULT</code> immediately before calling <code>MC_PRE_LEVEL_INIT</code>.</p>","tags":["Class"]},{"location":"Level.html#setgreedwavesclearedwithoutredheartdamage","title":"SetGreedWavesClearedWithoutRedHeartDamage ()","text":"","tags":["Class"]},{"location":"Level.html#void-setgreedwavesclearedwithoutredheartdamage-int-wavescleared","title":"void SetGreedWavesClearedWithoutRedHeartDamage ( int WavesCleared )","text":"","tags":["Class"]},{"location":"Level.html#setname","title":"SetName ()","text":"","tags":["Class"]},{"location":"Level.html#void-setname-string-name","title":"void SetName ( string Name )","text":"","tags":["Class"]},{"location":"Level.html#tryplaceroom","title":"TryPlaceRoom ()","text":"","tags":["Class"]},{"location":"Level.html#roomdescriptor-tryplaceroom-roomconfigroom-roomconfigtoplace-int-gridindex-dimension-dimension-1-int-seed-0-bool-allowmultipledoors-true-bool-allowspecialneighbors-false-bool-allownoneighbors-false","title":"RoomDescriptor TryPlaceRoom ( RoomConfigRoom RoomConfigToPlace, int GridIndex, Dimension Dimension = -1, int Seed = 0, bool AllowMultipleDoors = true, bool AllowSpecialNeighbors = false, bool AllowNoNeighbors = false )","text":"<p>Attempts to place the provided room at the specified location.</p> <p>If successful, returns the newly initialized RoomDescriptor. Otherwise, returns nil.</p> <p>This function will ONLY place the room if it fits (does not overlap any other existing rooms, and can mutually connect to all neighboring room with doors).</p> <p>If a seed of 0 or nil is provided, a deterministic seed with be auto-generated based on the location, room shape, and level seed.</p> <p>The boolean parameters enable or disable additional restrictions/safeties for room placement:</p> <ul> <li>AllowMultipleDoors: Set to <code>false</code> to only allow placement if the room would only have one door (useful for placing special rooms). Secret rooms don't count as a door.</li> <li>AllowSpecialNeighbors: Set to <code>true</code> to allow connections to existing special rooms (note that secret rooms are always permitted, but boss rooms never are).</li> <li>AllowNoNeighbors: Set to <code>true</code> to permit room placements out in the void with no neighbors at all.</li> </ul> Example Code <pre><code>-- Adds another treasure room to the floor at a random valid location.\nlocal function AddAnotherTreasureRoomToTheFloorAtARandomValidLocation()\n    local level = game:GetLevel()\n\n    local dimension = -1  -- current dimension\n    local seed = level:GetDungeonPlacementSeed()\n\n    -- Fetch a random RoomConfig for a new treasure room.\n    local roomConfig = RoomConfigHolder.GetRandomRoom(seed, true, StbType.SPECIAL_ROOMS, RoomType.ROOM_TREASURE, RoomShape.ROOMSHAPE_1x1)\n\n    -- Disallow placements with multiple doors, or placements that connect to other special rooms.\n    local allowMultipleDoors = false\n    local allowSpecialNeighbors = false\n\n    -- Fetch all valid locations.\n    local options = level:FindValidRoomPlacementLocations(roomConfig, dimension, allowMultipleDoors, allowSpecialNeighbors)\n\n    for _, gridIndex in pairs(options) do\n        -- You may have additional conditions or priorities when it comes to where you would prefer to place your room.\n        -- For the purposes of this example we arbitarily forbid the new room from being connected to the starting room,\n        -- and otherwise just place the room at the first place we check.\n\n        -- Get the RoomDescriptors of all rooms that would be neighboring the room if placed here.\n        local neighbors = level:GetNeighboringRooms(gridIndex, roomConfig.Shape)\n\n        local connectsToStartingRoom = false\n\n        for doorSlot, neighborDesc in pairs(neighbors) do\n            if neighborDesc.GridIndex == level:GetStartingRoomIndex() then\n                connectsToStartingRoom = true\n            end\n        end\n\n        if not connectsToStartingRoom then\n            -- Try to place the room.\n            local room = level:TryPlaceRoom(roomConfig, gridIndex, dimension, seed, allowMultipleDoors, allowSpecialNeighbors)\n            if room then\n                -- The room was placed successfully!\n                return\n            end\n        end\n    end\nend\n</code></pre>","tags":["Class"]},{"location":"Level.html#tryplaceroomatdoor","title":"TryPlaceRoomAtDoor ()","text":"","tags":["Class"]},{"location":"Level.html#roomdescriptor-tryplaceroomatdoor-roomconfigroom-roomconfigtoplace-roomdescriptor-neighborroomdescriptor-doorslot-doorslot-int-seed-0-bool-allowmultipledoors-true-bool-allowspecialneighbors-false","title":"RoomDescriptor TryPlaceRoomAtDoor ( RoomConfigRoom RoomConfigToPlace, RoomDescriptor NeighborRoomDescriptor, DoorSlot DoorSlot, int Seed = 0, bool AllowMultipleDoors = true, bool AllowSpecialNeighbors = false )","text":"<p>Similar to TryPlaceRoom, but attempts to place the provided room (the RoomConfigRoom) as a neighbor of an existing room (the RoomDescriptor) at the specified DoorSlot.</p> <p>Otherwise, the details are the same as for TryPlaceRoom.</p> Example Code <pre><code>-- Example code for an active item that creates a new 1x1 room at every doorslot available in the current room.\nmod:AddCallback(ModCallbacks.MC_USE_ITEM, function(_, id, rng, player, flags, slot)\n    local level = game:GetLevel()\n    local room = game:GetRoom()\n    local roomDesc = level:GetCurrentRoomDesc()\n\n    local success = false\n\n    for doorSlot=0, 7 do\n        -- Bitmask check to identify if the current room would even allow a door to be placed here.\n        local doorSlotAllowed = roomDesc.Data.Doors &amp; (1 &lt;&lt; doorSlot) ~= 0\n        if doorSlotAllowed and not room:GetDoor(doorSlot) then\n            local seed = rng:Next()\n            local requiredDoors = 15  -- Bitmask value that requires the new 1x1 room to have all 4 doorslots available, just so we're sure it fits.\n            local roomConfig = RoomConfigHolder.GetRandomRoom(seed, true, Isaac.GetCurrentStageConfigId(), RoomType.ROOM_DEFAULT, RoomShape.ROOMSHAPE_1x1, nil, nil, nil, nil, requiredDoors)\n            if roomConfig then\n                local newRoom = level:TryPlaceRoomAtDoor(roomConfig, roomDesc, doorSlot, seed, true, false)\n                if newRoom then\n                    success = true\n                end\n            end\n        end\n    end\n\n    if success then\n        return {ShowAnim=true}\n    else\n        return {Discharge=false}\n    end\nend, MY_ACTIVE_ITEM_ID)\n</code></pre>","tags":["Class"]},{"location":"LevelGenerator.html","title":"Class \"LevelGenerator\"","text":"Info <p>This class gives access to the level generator, the tool that generates a floor.</p> <p>This class cannot be instanciated. The only way to access it is through callback parameters.</p> <ul> <li>MC_POST_LEVEL_LAYOUT_GENERATED</li> </ul>","tags":["Class"]},{"location":"LevelGenerator.html#functions","title":"Functions","text":"","tags":["Class"]},{"location":"LevelGenerator.html#getallrooms","title":"GetAllRooms ()","text":"","tags":["Class"]},{"location":"LevelGenerator.html#levelgeneratorroom-getallrooms","title":"LevelGeneratorRoom[] GetAllRooms ( )","text":"<p>Returns a table of LevelGeneratorRoom representing all the rooms that have been generated so far.</p>","tags":["Class"]},{"location":"LevelGenerator.html#getdeadends","title":"GetDeadEnds ()","text":"","tags":["Class"]},{"location":"LevelGenerator.html#levelgeneratorroom-getdeadends","title":"LevelGeneratorRoom[] GetDeadEnds ( )","text":"<p>Returns a table of LevelGeneratorRoom representing all the dead end rooms that have been generated so far.</p>","tags":["Class"]},{"location":"LevelGenerator.html#getnondeadends","title":"GetNonDeadEnds ()","text":"","tags":["Class"]},{"location":"LevelGenerator.html#levelgeneratorroom-getnondeadends","title":"LevelGeneratorRoom[] GetNonDeadEnds ( )","text":"<p>Returns a table of LevelGeneratorRoom representing all the non dead end rooms that have been generator so far.</p>","tags":["Class"]},{"location":"LevelGenerator.html#placeroom","title":"PlaceRoom ()","text":"","tags":["Class"]},{"location":"LevelGenerator.html#int-placeroom-int-column-int-row-roomshape-shape-levelgeneratorroom-origin","title":"int PlaceRoom ( int Column, int Row, RoomShape Shape, LevelGeneratorRoom Origin )","text":"<p>Place a LevelGeneratorRoom object onto the level-grid.  The <code>Origin</code> parameter is used as the index of the connecting room. For instance, if you want to place a room on top of the starting room, then <code>Origin</code> can be the starting room of the floor.</p> <p>The column and row values need to be between <code>0</code> and <code>12</code> (inclusive).</p> <p>Returns the GenerationIndex of the placed room. If placement was not possible, returns nil.</p> Multiple origins <p>The <code>Origin</code> parameter is used to ensure consistency with the existing rooms. During the generation phase, the game always picks a room  and starts placing rooms around it. This parameter reflects this behavior.</p> <p>When placing a room, you may be wondering which of its neighbors must act as the origin. This has consequences on the placement of special  rooms, as the game places special rooms in a specific order based on the distance between each dead end room and the start of the floor.  The distance from the start of the floor of the new room is equal to the distance from the start of the floor of <code>Origin</code> plus one.  In practice you are free to chose any neighboring room as a point of origin. </p>","tags":["Class"]},{"location":"LevelGeneratorEntry.html","title":"Class \"LevelGeneratorEntry\"","text":"Info <p>You can get this class by using the following functions:</p> <ul> <li>Isaac.LevelGeneratorEntry()</li> </ul> Example Code <pre><code>local newLevelGeneratorEntry = Isaac.LevelGeneratorEntry()\n</code></pre>","tags":["Class"]},{"location":"LevelGeneratorEntry.html#functions","title":"Functions","text":"","tags":["Class"]},{"location":"LevelGeneratorEntry.html#setalloweddoors","title":"SetAllowedDoors ()","text":"","tags":["Class"]},{"location":"LevelGeneratorEntry.html#void-setalloweddoors-levelgeneratorentry-room-int-doors","title":"void SetAllowedDoors ( LevelGeneratorEntry Room, int Doors )","text":"<p>I believe Doors here is a bitmask (1 &lt;&lt; DoorSlot)</p>","tags":["Class"]},{"location":"LevelGeneratorEntry.html#setcolidx","title":"SetColIdx ()","text":"","tags":["Class"]},{"location":"LevelGeneratorEntry.html#void-setcolidx-levelgeneratorentry-room-int-colidx","title":"void SetColIdx ( LevelGeneratorEntry Room, int ColIdx )","text":"","tags":["Class"]},{"location":"LevelGeneratorEntry.html#setlineidx","title":"SetLineIdx ()","text":"","tags":["Class"]},{"location":"LevelGeneratorEntry.html#void-setlineidx-levelgeneratorentry-room-int-lineidx","title":"void SetLineIdx ( LevelGeneratorEntry Room, int LineIdx )","text":"","tags":["Class"]},{"location":"LevelGeneratorRoom.html","title":"Class \"LevelGeneratorRoom\"","text":"Info <p>This class is used during level generation. Its purpose is to represent a slot in the graph of rooms that is generated during the generation phase.</p> <p>This class is immutable and cannot be instanciated manually: you cannot change the value of the fields of an instance and you cannot instance it by yourself.</p> <p>Access to instances is always performed through methods of the LevelGenerator itself, or instances are given as parameters of the callbacks:  </p> <ul> <li>MC_PRE_LEVEL_PLACE_ROOM</li> </ul>","tags":["Class"]},{"location":"LevelGeneratorRoom.html#functions","title":"Functions","text":"","tags":["Class"]},{"location":"LevelGeneratorRoom.html#column","title":"Column ()","text":"","tags":["Class"]},{"location":"LevelGeneratorRoom.html#int-column","title":"int Column ( )","text":"<p>Return the column of the room slot on the level grid (index is <code>0</code> based).</p>","tags":["Class"]},{"location":"LevelGeneratorRoom.html#doormask","title":"DoorMask ()","text":"","tags":["Class"]},{"location":"LevelGeneratorRoom.html#int-doormask","title":"int DoorMask ( )","text":"<p>Return a mask of the available doors of the room slot. In order to check if a door at a given slot is available, use the DoorSlot enumeration.</p> Example <p>This tests if the DoorSlot <code>LEFT0</code> is available. <pre><code>if room:DoorMask() &amp; (1 &lt;&lt; DoorSlot.LEFT0) ~= 0 then\n    print(\"Room has a door in slot LEFT0\")\nend\n</code></pre></p>","tags":["Class"]},{"location":"LevelGeneratorRoom.html#generationindex","title":"GenerationIndex ()","text":"","tags":["Class"]},{"location":"LevelGeneratorRoom.html#int-generationindex","title":"int GenerationIndex ( )","text":"<p>Index of the room during generation: <code>0</code> if the room was the first to be generated, <code>1</code> if it was the second etc.</p>","tags":["Class"]},{"location":"LevelGeneratorRoom.html#isdeadend","title":"IsDeadEnd ()","text":"","tags":["Class"]},{"location":"LevelGeneratorRoom.html#boolean-isdeadend","title":"boolean IsDeadEnd ( )","text":"","tags":["Class"]},{"location":"LevelGeneratorRoom.html#neighbors","title":"Neighbors ()","text":"","tags":["Class"]},{"location":"LevelGeneratorRoom.html#int-neighbors","title":"int[] Neighbors ( )","text":"<p>Returns a table of the generation indices of the neighboring rooms.</p>","tags":["Class"]},{"location":"LevelGeneratorRoom.html#row","title":"Row ()","text":"","tags":["Class"]},{"location":"LevelGeneratorRoom.html#int-row","title":"int Row ( )","text":"<p>Return the row of the room slot on the level grid (index is <code>0</code> based).</p>","tags":["Class"]},{"location":"LevelGeneratorRoom.html#shape","title":"Shape ()","text":"","tags":["Class"]},{"location":"LevelGeneratorRoom.html#int-shape","title":"int Shape ( )","text":"<p>Return the shape of the room, as per the RoomShape enumeration.</p>","tags":["Class"]},{"location":"LootList.html","title":"Class \"LootList\"","text":"","tags":["Class"]},{"location":"LootList.html#constructors","title":"Constructors","text":"","tags":["Class"]},{"location":"LootList.html#lootlist","title":"LootList ()","text":"","tags":["Class"]},{"location":"LootList.html#lootlist-lootlist","title":"LootList LootList ( )","text":"","tags":["Class"]},{"location":"LootList.html#functions","title":"Functions","text":"","tags":["Class"]},{"location":"LootList.html#getentries","title":"GetEntries ()","text":"","tags":["Class"]},{"location":"LootList.html#lootlistentry-getentries","title":"LootListEntry[] GetEntries ( )","text":"<p>Returns a table of LootListEntries contained in the <code>LootList</code>.</p>","tags":["Class"]},{"location":"LootList.html#pushentry","title":"PushEntry ()","text":"","tags":["Class"]},{"location":"LootList.html#void-pushentry-entitytype-type-int-variant-int-subtype-int-seed-random-rng-rng-nil","title":"void PushEntry ( EntityType Type, int Variant, int SubType, int Seed = Random(), RNG RNG = nil )","text":"<p>Creates and pushes a LootListEntry into the <code>LootList</code>.</p> <p>While usually reserved for chests and sacks that give pickups like hearts, bombs, etc, every <code>EntityPickup</code> has a <code>LootList</code> and you can push any type, variant, and subtype as a LootListEntry.</p> Example Code <p>This code makes all regular chests contain the best boss in the entire game. As a bonus, use Guppy's Eye for a horrifying image.</p> <pre><code>    local mod = RegisterMod(\"Delirium Unboxing\", 1)\n\n    function mod:onPrePickupGetLootList(pickup, shouldAdvance)\n        if pickup.Variant ~= PickupVariant.PICKUP_CHEST then return end\n        local lootList = LootList()\n        lootList:PushEntry(EntityType.ENTITY_DELIRIUM, 0, 0)\n        return lootList\n    end\n    mod:AddCallback(ModCallbacks.MC_PRE_PICKUP_GET_LOOT_LIST, mod.onPrePickupGetLootList)\n</code></pre>","tags":["Class"]},{"location":"LootListEntry.html","title":"Class \"LootListEntry\"","text":"Info <p>You can get this class by using the following function:</p> <ul> <li>LootList:GetEntries()</li> </ul> Example Code <pre><code>local mod = RegisterMod(\"Print Pickups\", 1)\n\nfunction mod:OnPickupUpdate(pickup)\n    if pickup.FrameCount ~= 1 then return end\n    local lootList = pickup:GetLootList()\n    local lootListEntries = lootListEntries:GetEntries()\n\n    for _, lootListEntry in ipairs(lootListEntries) do\n        print(\"PickupVariant:\", lootListEntry:GetVariant(), \"Pickup SubType:\", lootListEntry:GetSubType())\n    end\nend\nmod:AddCallback(ModCallbacks.MC_POST_PICKUP_UPDATE, mod.OnPickupUpdate)\n</code></pre>","tags":["Class"]},{"location":"LootListEntry.html#functions","title":"Functions","text":"","tags":["Class"]},{"location":"LootListEntry.html#getrng","title":"GetRNG ()","text":"","tags":["Class"]},{"location":"LootListEntry.html#rng-getrng","title":"RNG GetRNG ( )","text":"Warning <p>May return <code>nil</code>.</p>","tags":["Class"]},{"location":"LootListEntry.html#getseed","title":"GetSeed ()","text":"","tags":["Class"]},{"location":"LootListEntry.html#int-getseed","title":"int GetSeed ( )","text":"","tags":["Class"]},{"location":"LootListEntry.html#getsubtype","title":"GetSubType ()","text":"","tags":["Class"]},{"location":"LootListEntry.html#int-getsubtype","title":"int GetSubType ( )","text":"","tags":["Class"]},{"location":"LootListEntry.html#gettype","title":"GetType ()","text":"","tags":["Class"]},{"location":"LootListEntry.html#entitytype-gettype","title":"EntityType GetType ( )","text":"","tags":["Class"]},{"location":"LootListEntry.html#getvariant","title":"GetVariant ()","text":"","tags":["Class"]},{"location":"LootListEntry.html#int-getvariant","title":"int GetVariant ( )","text":"","tags":["Class"]},{"location":"Minimap.html","title":"Global Class \"Minimap\"","text":"Info <p>You can get this class by using the <code>Minimap</code> global table.</p> <p>Note that to call these functions, you must use a <code>.</code> (period) instead of a <code>:</code> (colon)!</p> Example Code <pre><code>local size = Minimap.GetDisplayedSize()\n</code></pre>","tags":["Global","Class"]},{"location":"Minimap.html#functions","title":"Functions","text":"","tags":["Global","Class"]},{"location":"Minimap.html#getdisplayedsize","title":"GetDisplayedSize ()","text":"","tags":["Global","Class"]},{"location":"Minimap.html#vector-getdisplayedsize","title":"Vector GetDisplayedSize ( )","text":"<p>Returns the current display size of the minimap. When not expanded this is always <code>Vector(47,47)</code>.</p>","tags":["Global","Class"]},{"location":"Minimap.html#getholdtime","title":"GetHoldTime ()","text":"","tags":["Global","Class"]},{"location":"Minimap.html#int-getholdtime","title":"int GetHoldTime ( )","text":"","tags":["Global","Class"]},{"location":"Minimap.html#geticonssprite","title":"GetIconsSprite ()","text":"","tags":["Global","Class"]},{"location":"Minimap.html#sprite-geticonssprite","title":"Sprite GetIconsSprite ( )","text":"","tags":["Global","Class"]},{"location":"Minimap.html#getitemiconssprite","title":"GetItemIconsSprite ()","text":"","tags":["Global","Class"]},{"location":"Minimap.html#sprite-getitemiconssprite","title":"Sprite GetItemIconsSprite ( )","text":"","tags":["Global","Class"]},{"location":"Minimap.html#getshakeduration","title":"GetShakeDuration ()","text":"","tags":["Global","Class"]},{"location":"Minimap.html#int-getshakeduration","title":"int GetShakeDuration ( )","text":"","tags":["Global","Class"]},{"location":"Minimap.html#getshakeoffset","title":"GetShakeOffset ()","text":"","tags":["Global","Class"]},{"location":"Minimap.html#vector-getshakeoffset","title":"Vector GetShakeOffset ( )","text":"","tags":["Global","Class"]},{"location":"Minimap.html#getstate","title":"GetState ()","text":"","tags":["Global","Class"]},{"location":"Minimap.html#minimapstate-getstate","title":"MinimapState GetState ( )","text":"","tags":["Global","Class"]},{"location":"Minimap.html#setholdtime","title":"SetHoldTime ()","text":"","tags":["Global","Class"]},{"location":"Minimap.html#void-setholdtime-int-time","title":"void SetHoldTime ( int Time )","text":"","tags":["Global","Class"]},{"location":"Minimap.html#setshakeduration","title":"SetShakeDuration ()","text":"","tags":["Global","Class"]},{"location":"Minimap.html#void-setshakeduration-int-duration","title":"void SetShakeDuration ( int Duration )","text":"","tags":["Global","Class"]},{"location":"Minimap.html#setshakeoffset","title":"SetShakeOffset ()","text":"","tags":["Global","Class"]},{"location":"Minimap.html#void-setshakeoffset-vector-offset","title":"void SetShakeOffset ( Vector Offset )","text":"","tags":["Global","Class"]},{"location":"Minimap.html#setstate","title":"SetState ()","text":"","tags":["Global","Class"]},{"location":"Minimap.html#void-setstate-minimapstate-state","title":"void SetState ( MinimapState State )","text":"","tags":["Global","Class"]},{"location":"MultiShotParams.html","title":"Class \"MultiShotParams\"","text":"Info <p>MultiShotParams contains information the game uses to properly calculate the position and velocity of every tear fired, among other things.</p> <p>You can get this class by using the following functions:</p> <ul> <li>EntityPlayer:GetMultiShotParams</li> </ul> Example Code <pre><code>local params = Game():GetPlayer(0):GetMultiShotParams(WeaponType.WEAPON_TEARS)\n</code></pre>","tags":["Class"]},{"location":"MultiShotParams.html#functions","title":"Functions","text":"","tags":["Class"]},{"location":"MultiShotParams.html#getmultieyeangle","title":"GetMultiEyeAngle ()","text":"","tags":["Class"]},{"location":"MultiShotParams.html#float-getmultieyeangle","title":"float GetMultiEyeAngle ( )","text":"<p>When more than one eye is active, defines the angle the eyes are offset to eachother. Similar to cross eye effect. </p> <p>Example: for The Wiz, this is <code>45</code>.</p>","tags":["Class"]},{"location":"MultiShotParams.html#getnumeyesactive","title":"GetNumEyesActive ()","text":"","tags":["Class"]},{"location":"MultiShotParams.html#int-getnumeyesactive","title":"int GetNumEyesActive ( )","text":"<p>Returns the number of eyes simultaniously shooting. Examples: For The Wiz, its <code>2</code>, for mutant Spider its <code>1</code>.</p>","tags":["Class"]},{"location":"MultiShotParams.html#getnumlanespereye","title":"GetNumLanesPerEye ()","text":"","tags":["Class"]},{"location":"MultiShotParams.html#int-getnumlanespereye","title":"int GetNumLanesPerEye ( )","text":"<p>Returns the amount of lanes used to spread the shot tears onto. Lane positions are calculated by dividing the area, defined by the shooting direction +- the spreadAngle, by the number of lanes. This will create a pattern similar to a symetrical hand fan. Normally the number of lanes should be the same number as the amount of tears divided by the number of eyes. </p> <p>A smaller number of lanes than the amount of tears will cause tears to overlap each other. A higher lane count than tears will make the fan pattern asymetrical.</p>","tags":["Class"]},{"location":"MultiShotParams.html#getnumrandomdirtears","title":"GetNumRandomDirTears ()","text":"","tags":["Class"]},{"location":"MultiShotParams.html#int-getnumrandomdirtears","title":"int GetNumRandomDirTears ( )","text":"<p>Returns the amount of tears additionally shot in random directions. Same effect as \"Eye Sore\" collectible.</p>","tags":["Class"]},{"location":"MultiShotParams.html#getnumtears","title":"GetNumTears ()","text":"","tags":["Class"]},{"location":"MultiShotParams.html#int-getnumtears","title":"int GetNumTears ( )","text":"<p>Returns the amount of tears the player can currently simultaneously fire.</p>","tags":["Class"]},{"location":"MultiShotParams.html#getspreadangle","title":"GetSpreadAngle ()","text":"","tags":["Class"]},{"location":"MultiShotParams.html#float-getspreadangle-weapontype-weapontype","title":"float GetSpreadAngle ( WeaponType WeaponType )","text":"<p>Get the spread angle for the given WeaponType.</p>","tags":["Class"]},{"location":"MultiShotParams.html#iscrosseyed","title":"IsCrossEyed ()","text":"","tags":["Class"]},{"location":"MultiShotParams.html#boolean-iscrosseyed","title":"boolean IsCrossEyed ( )","text":"<p>Returns if a cross eye effect is active, aka. player shoots in two directions with 45\u00b0 offset to eachother.</p>","tags":["Class"]},{"location":"MultiShotParams.html#isshootingbackwards","title":"IsShootingBackwards ()","text":"","tags":["Class"]},{"location":"MultiShotParams.html#boolean-isshootingbackwards","title":"boolean IsShootingBackwards ( )","text":"<p>Returns if an additional shot backwards will be triggered. Similar effect to Mom's Eye.</p>","tags":["Class"]},{"location":"MultiShotParams.html#isshootingsideways","title":"IsShootingSideways ()","text":"","tags":["Class"]},{"location":"MultiShotParams.html#boolean-isshootingsideways","title":"boolean IsShootingSideways ( )","text":"<p>Returns if two additional shots sideways will be triggered. Similar effect to Loki's horns.</p>","tags":["Class"]},{"location":"MultiShotParams.html#setiscrosseyed","title":"SetIsCrossEyed ()","text":"","tags":["Class"]},{"location":"MultiShotParams.html#void-setiscrosseyed-boolean-value","title":"void SetIsCrossEyed ( boolean Value )","text":"<p>Set if a cross eye effect is active, aka. player shoots in two directions with 45\u00b0 offset to eachother.</p>","tags":["Class"]},{"location":"MultiShotParams.html#setisshootingbackwards","title":"SetIsShootingBackwards ()","text":"","tags":["Class"]},{"location":"MultiShotParams.html#void-setisshootingbackwards-boolean-value","title":"void SetIsShootingBackwards ( boolean Value )","text":"<p>Set if an additional shot backwards will be triggered. Similar effect to Mom's Eye.</p>","tags":["Class"]},{"location":"MultiShotParams.html#setisshootingsideways","title":"SetIsShootingSideways ()","text":"","tags":["Class"]},{"location":"MultiShotParams.html#void-setisshootingsideways-boolean-value","title":"void SetIsShootingSideways ( boolean Value )","text":"<p>Set if two additional shots sideways will be triggered. Similar effect to Loki's horns.</p>","tags":["Class"]},{"location":"MultiShotParams.html#setmultieyeangle","title":"SetMultiEyeAngle ()","text":"","tags":["Class"]},{"location":"MultiShotParams.html#void-setmultieyeangle-float-angle","title":"void SetMultiEyeAngle ( float Angle )","text":"<p>When more than one eye is active, defines the angle the eyes are offset to eachother. Similar to cross eye effect. </p> <p>Example: for The Wiz, this is <code>45</code>.</p>","tags":["Class"]},{"location":"MultiShotParams.html#setnumeyesactive","title":"SetNumEyesActive ()","text":"","tags":["Class"]},{"location":"MultiShotParams.html#void-setnumeyesactive-int-value","title":"void SetNumEyesActive ( int Value )","text":"<p>Set the number of eyes simultaniously shooting. Examples: For The Wiz, its <code>2</code>, for mutant Spider its <code>1</code>.</p>","tags":["Class"]},{"location":"MultiShotParams.html#setnumlanespereye","title":"SetNumLanesPerEye ()","text":"","tags":["Class"]},{"location":"MultiShotParams.html#void-setnumlanespereye-int-value","title":"void SetNumLanesPerEye ( int Value )","text":"","tags":["Class"]},{"location":"MultiShotParams.html#setnumrandomdirtears","title":"SetNumRandomDirTears ()","text":"","tags":["Class"]},{"location":"MultiShotParams.html#void-setnumrandomdirtears-int-value","title":"void SetNumRandomDirTears ( int Value )","text":"<p>Set the amount of tears additionally shot in random directions. Same effect as \"Eye Sore\" collectible.</p>","tags":["Class"]},{"location":"MultiShotParams.html#setnumtears","title":"SetNumTears ()","text":"","tags":["Class"]},{"location":"MultiShotParams.html#void-setnumtears-int-value","title":"void SetNumTears ( int Value )","text":"<p>Set the amount of tears the player can currently simultaneously fire.</p>","tags":["Class"]},{"location":"MultiShotParams.html#setspreadangle","title":"SetSpreadAngle ()","text":"","tags":["Class"]},{"location":"MultiShotParams.html#void-setspreadangle-weapontype-weapontype-float-angle","title":"void SetSpreadAngle ( WeaponType WeaponType, float Angle )","text":"<p>Set the spread angle for the given WeaponType.</p>","tags":["Class"]},{"location":"MusicManager.html","title":"Class \"MusicManager\"","text":"","tags":["Class"]},{"location":"MusicManager.html#modified-functions","title":"Modified Functions","text":"","tags":["Class"]},{"location":"MusicManager.html#crossfade","title":"Crossfade ()","text":"","tags":["Class"]},{"location":"MusicManager.html#void-crossfade-music-musicid-float-faderate-008","title":"void Crossfade ( Music MusicId, float FadeRate = 0.08 )","text":"<p>Now validates the Music ID to prevent crashes.</p>","tags":["Class"]},{"location":"MusicManager.html#fadein","title":"Fadein ()","text":"","tags":["Class"]},{"location":"MusicManager.html#void-fadein-music-musicid-float-volume-1-float-volume-008","title":"void Fadein ( Music MusicId, float Volume = 1, float Volume = 0.08 )","text":"<p>Now validates the Music ID to prevent crashes.</p>","tags":["Class"]},{"location":"MusicManager.html#play","title":"Play ()","text":"","tags":["Class"]},{"location":"MusicManager.html#void-play-music-musicid-int-volume-1","title":"void Play ( Music MusicId, int Volume = -1 )","text":"<p>Now validates the Music ID to prevent crashes.</p>","tags":["Class"]},{"location":"MusicManager.html#functions","title":"Functions","text":"","tags":["Class"]},{"location":"MusicManager.html#getcurrentpitch","title":"GetCurrentPitch ()","text":"","tags":["Class"]},{"location":"MusicManager.html#float-getcurrentpitch","title":"float GetCurrentPitch ( )","text":"","tags":["Class"]},{"location":"MusicManager.html#playjingle","title":"PlayJingle ()","text":"","tags":["Class"]},{"location":"MusicManager.html#void-playjingle-music-musicid","title":"void PlayJingle ( Music MusicId )","text":"","tags":["Class"]},{"location":"MusicManager.html#setcurrentpitch","title":"SetCurrentPitch ()","text":"","tags":["Class"]},{"location":"MusicManager.html#void-setcurrentpitch-float-pitch","title":"void SetCurrentPitch ( float Pitch )","text":"","tags":["Class"]},{"location":"MusicManager.html#stopjingle","title":"StopJingle ()","text":"","tags":["Class"]},{"location":"MusicManager.html#void-stopjingle","title":"void StopJingle ( )","text":"","tags":["Class"]},{"location":"NightmareScene.html","title":"Global Class \"NightmareScene\"","text":"Info <p>You can get this class by using the <code>NightmareScene</code> global table.</p> <p>Note that to call these functions, you must use a <code>.</code> (period) instead of a <code>:</code> (colon)!</p> Example Code <pre><code>local sprite = NightmareScene.GetBubbleSprite()\n</code></pre> Warning <p>This class' functions should not be called until the game fully initializes! Make sure not to try using them outside of callbacks.</p>","tags":["Global","Class"]},{"location":"NightmareScene.html#functions","title":"Functions","text":"","tags":["Global","Class"]},{"location":"NightmareScene.html#getbackgroundsprite","title":"GetBackgroundSprite ()","text":"","tags":["Global","Class"]},{"location":"NightmareScene.html#sprite-getbackgroundsprite","title":"Sprite GetBackgroundSprite ( )","text":"","tags":["Global","Class"]},{"location":"NightmareScene.html#getbubblesprite","title":"GetBubbleSprite ()","text":"","tags":["Global","Class"]},{"location":"NightmareScene.html#sprite-getbubblesprite","title":"Sprite GetBubbleSprite ( )","text":"","tags":["Global","Class"]},{"location":"NightmareScene.html#getplayerextraportraitsprite","title":"GetPlayerExtraPortraitSprite ()","text":"","tags":["Global","Class"]},{"location":"NightmareScene.html#sprite-getplayerextraportraitsprite","title":"Sprite GetPlayerExtraPortraitSprite ( )","text":"","tags":["Global","Class"]},{"location":"NightmareScene.html#getprogressbarmap","title":"GetProgressBarMap ()","text":"","tags":["Global","Class"]},{"location":"NightmareScene.html#int-getprogressbarmap","title":"int[] GetProgressBarMap ( )","text":"","tags":["Global","Class"]},{"location":"NightmareScene.html#getprogressbarsprite","title":"GetProgressBarSprite ()","text":"","tags":["Global","Class"]},{"location":"NightmareScene.html#sprite-getprogressbarsprite","title":"Sprite GetProgressBarSprite ( )","text":"","tags":["Global","Class"]},{"location":"NightmareScene.html#isdogmanightmare","title":"IsDogmaNightmare ()","text":"","tags":["Global","Class"]},{"location":"NightmareScene.html#boolean-isdogmanightmare","title":"boolean IsDogmaNightmare ( )","text":"","tags":["Global","Class"]},{"location":"NullFrame.html","title":"Class \"NullFrame\"","text":"","tags":["Class"]},{"location":"NullFrame.html#functions","title":"Functions","text":"","tags":["Class"]},{"location":"NullFrame.html#getcolor","title":"GetColor ()","text":"","tags":["Class"]},{"location":"NullFrame.html#color-getcolor","title":"Color GetColor ( )","text":"","tags":["Class"]},{"location":"NullFrame.html#getpos","title":"GetPos ()","text":"","tags":["Class"]},{"location":"NullFrame.html#vector-getpos","title":"Vector GetPos ( )","text":"","tags":["Class"]},{"location":"NullFrame.html#getrotation","title":"GetRotation ()","text":"","tags":["Class"]},{"location":"NullFrame.html#float-getrotation","title":"float GetRotation ( )","text":"","tags":["Class"]},{"location":"NullFrame.html#getscale","title":"GetScale ()","text":"","tags":["Class"]},{"location":"NullFrame.html#vector-getscale","title":"Vector GetScale ( )","text":"","tags":["Class"]},{"location":"NullFrame.html#isvisible","title":"IsVisible ()","text":"","tags":["Class"]},{"location":"NullFrame.html#boolean-isvisible","title":"boolean IsVisible ( )","text":"","tags":["Class"]},{"location":"Options.html","title":"Class \"Options\"","text":"","tags":["Class"]},{"location":"Options.html#modified-variables","title":"Modified Variables","text":"","tags":["Class"]},{"location":"Options.html#sfxvolume","title":"SFXVolume","text":"","tags":["Class"]},{"location":"Options.html#float-sfxvolume","title":"float SFXVolume","text":"<p>Can now be properly set. Will clamp new values to the first decimal so that changing volume with the options menu doesn't cause invalid values.</p>","tags":["Class"]},{"location":"Options.html#variables","title":"Variables","text":"","tags":["Class"]},{"location":"Options.html#bettervoidgeneration","title":"BetterVoidGeneration","text":"","tags":["Class"]},{"location":"Options.html#boolean-bettervoidgeneration","title":"boolean BetterVoidGeneration","text":"<p>If set, The Void will draw from all unlocked floors, including alt path ones.</p>","tags":["Class"]},{"location":"Options.html#hushpanicstatefix","title":"HushPanicStateFix","text":"","tags":["Class"]},{"location":"Options.html#boolean-hushpanicstatefix","title":"boolean HushPanicStateFix","text":"<p>Fixes the vanilla bug that causes Hush to have no attack cooldown below 50% health.</p>","tags":["Class"]},{"location":"Options.html#keymasterdealchance","title":"KeyMasterDealChance","text":"","tags":["Class"]},{"location":"Options.html#boolean-keymasterdealchance","title":"boolean KeyMasterDealChance","text":"<p>If set, Key Master bums will also raise the chance for a deal when killed.</p>","tags":["Class"]},{"location":"Options.html#preventmodupdates","title":"PreventModUpdates","text":"","tags":["Class"]},{"location":"Options.html#boolean-preventmodupdates","title":"boolean PreventModUpdates","text":"","tags":["Class"]},{"location":"Options.html#quickroomclear","title":"QuickRoomClear","text":"","tags":["Class"]},{"location":"Options.html#boolean-quickroomclear","title":"boolean QuickRoomClear","text":"","tags":["Class"]},{"location":"Options.html#stathudplanetarium","title":"StatHUDPlanetarium","text":"","tags":["Class"]},{"location":"Options.html#boolean-stathudplanetarium","title":"boolean StatHUDPlanetarium","text":"<p>If set, natively shows Planetarium chance on the HUD. </p> <p>Note that this option has no effect if Planetariums are not unlocked, so just checking this value isn't good enough if the intent is to see if the Planetarium HUD is rendering.</p>","tags":["Class"]},{"location":"PersistentGameData.html","title":"Class \"PersistentGameData\"","text":"Info <p>You can get this class by using the following functions:</p> <ul> <li>Isaac.GetPersistentGameData()</li> </ul> Example Code <pre><code>local persistentGameData = Isaac.GetPersistentGameData()\n</code></pre> Warning <p>This class' functions should not be called until the game fully initializes! Make sure not to try using them outside of callbacks</p>","tags":["Class"]},{"location":"PersistentGameData.html#functions","title":"Functions","text":"","tags":["Class"]},{"location":"PersistentGameData.html#addbestiarykill","title":"AddBestiaryKill ()","text":"","tags":["Class"]},{"location":"PersistentGameData.html#void-addbestiarykill-int-type-int-variant-0","title":"void AddBestiaryKill ( int Type, int Variant = 0 )","text":"","tags":["Class"]},{"location":"PersistentGameData.html#addbosskilled","title":"AddBossKilled ()","text":"","tags":["Class"]},{"location":"PersistentGameData.html#void-addbosskilled-bosstype-boss","title":"void AddBossKilled ( BossType Boss)","text":"<p>Marks this boss as killed and unlocks its relevant alternate floor if conditions are met.</p>","tags":["Class"]},{"location":"PersistentGameData.html#getbestiarydeathcount","title":"GetBestiaryDeathCount ()","text":"","tags":["Class"]},{"location":"PersistentGameData.html#int-getbestiarydeathcount-int-type-int-variant","title":"int GetBestiaryDeathCount ( int Type, int Variant )","text":"","tags":["Class"]},{"location":"PersistentGameData.html#getbestiaryencountercount","title":"GetBestiaryEncounterCount ()","text":"","tags":["Class"]},{"location":"PersistentGameData.html#int-getbestiaryencountercount-int-type-int-variant","title":"int GetBestiaryEncounterCount ( int Type, int Variant )","text":"","tags":["Class"]},{"location":"PersistentGameData.html#getbestiarykillcount","title":"GetBestiaryKillCount ()","text":"","tags":["Class"]},{"location":"PersistentGameData.html#int-getbestiarykillcount-int-type-int-variant","title":"int GetBestiaryKillCount ( int Type, int Variant )","text":"","tags":["Class"]},{"location":"PersistentGameData.html#geteventcounter","title":"GetEventCounter ()","text":"","tags":["Class"]},{"location":"PersistentGameData.html#int-geteventcounter-eventcounter-eventcounter","title":"int GetEventCounter ( EventCounter EventCounter )","text":"","tags":["Class"]},{"location":"PersistentGameData.html#increaseeventcounter","title":"IncreaseEventCounter ()","text":"","tags":["Class"]},{"location":"PersistentGameData.html#void-increaseeventcounter-eventcounter-eventcounter-int-count","title":"void IncreaseEventCounter ( EventCounter EventCounter, int Count )","text":"","tags":["Class"]},{"location":"PersistentGameData.html#isbosskilled","title":"IsBossKilled ()","text":"","tags":["Class"]},{"location":"PersistentGameData.html#boolean-isbosskilled-bosstype-boss","title":"boolean IsBossKilled ( BossType Boss)","text":"<p>Returns whether this boss was marked as killed (for purposes of unlock tracking).</p>","tags":["Class"]},{"location":"PersistentGameData.html#ischallengecompleted","title":"IsChallengeCompleted ()","text":"","tags":["Class"]},{"location":"PersistentGameData.html#boolean-ischallengecompleted-challenge-challengeid","title":"boolean IsChallengeCompleted ( Challenge ChallengeId )","text":"<p>Checks if a challenge is completed.</p>","tags":["Class"]},{"location":"PersistentGameData.html#isitemincollection","title":"IsItemInCollection ()","text":"","tags":["Class"]},{"location":"PersistentGameData.html#boolean-isitemincollection-collectibletype-collectibleid","title":"boolean IsItemInCollection ( CollectibleType CollectibleId )","text":"<p>Checks if an item is in the collection. Aka. its at least picked up once in any run.</p>","tags":["Class"]},{"location":"PersistentGameData.html#tryunlock","title":"TryUnlock ()","text":"","tags":["Class"]},{"location":"PersistentGameData.html#boolean-tryunlock-achievement-unlock-boolean-blockpaperpopup-false","title":"boolean TryUnlock ( Achievement Unlock, boolean BlockPaperPopup = false )","text":"<p>Returns <code>true</code> if successful, <code>false</code> if unlocking failed or the secret was already unlocked.</p> <p>Setting <code>BlockPaperPopup</code> to <code>true</code> prevents popping up the achievement paper for modded achievements.</p>","tags":["Class"]},{"location":"PersistentGameData.html#unlocked","title":"Unlocked ()","text":"","tags":["Class"]},{"location":"PersistentGameData.html#boolean-unlocked-achievement-unlock","title":"boolean Unlocked ( Achievement Unlock )","text":"<p>Checks if achievement is unlocked.</p>","tags":["Class"]},{"location":"PlayerHUD.html","title":"Class \"PlayerHUD\"","text":"Info <p>You can get this class by using the following functions:</p> <ul> <li>HUD.GetPlayerHUD()</li> </ul> Example Code <pre><code>local playerHud = HUD.GetPlayerHUD(0)\n</code></pre>","tags":["Class"]},{"location":"PlayerHUD.html#functions","title":"Functions","text":"","tags":["Class"]},{"location":"PlayerHUD.html#getheartbyindex","title":"GetHeartByIndex ()","text":"","tags":["Class"]},{"location":"PlayerHUD.html#playerhudheart-getheartbyindex-int-index","title":"PlayerHUDHeart GetHeartByIndex ( int Index )","text":"","tags":["Class"]},{"location":"PlayerHUD.html#gethearts","title":"GetHearts ()","text":"","tags":["Class"]},{"location":"PlayerHUD.html#playerhudheart-gethearts","title":"PlayerHUDHeart[] GetHearts ( )","text":"<p>Returns table of PlayerHUDHeart objects.</p>","tags":["Class"]},{"location":"PlayerHUD.html#gethud","title":"GetHUD ()","text":"","tags":["Class"]},{"location":"PlayerHUD.html#hud-gethud","title":"HUD GetHUD ( )","text":"","tags":["Class"]},{"location":"PlayerHUD.html#getplayer","title":"GetPlayer ()","text":"","tags":["Class"]},{"location":"PlayerHUD.html#entityplayer-getplayer","title":"EntityPlayer GetPlayer ( )","text":"","tags":["Class"]},{"location":"PlayerHUD.html#renderactiveitem","title":"RenderActiveItem ()","text":"","tags":["Class"]},{"location":"PlayerHUD.html#void-renderactiveitem-activeslot-slot-vector-position-float-alpha-10-float-scale-10","title":"void RenderActiveItem ( ActiveSlot Slot, Vector Position, float Alpha = 1.0, float Scale = 1.0 )","text":"","tags":["Class"]},{"location":"PlayerHUDHeart.html","title":"Class \"PlayerHUDHeart\"","text":"Info <p>You can get this class by using the following functions:</p> <ul> <li>PlayerHUD.GetHeartByIndex()</li> </ul> Example Code <pre><code>local playerHud = HUD.GetPlayerHUD(0):GetHeartByIndex(0)\n</code></pre>","tags":["Class"]},{"location":"PlayerHUDHeart.html#functions","title":"Functions","text":"","tags":["Class"]},{"location":"PlayerHUDHeart.html#getflashtype","title":"GetFlashType ()","text":"","tags":["Class"]},{"location":"PlayerHUDHeart.html#int-getflashtype","title":"int GetFlashType ( )","text":"","tags":["Class"]},{"location":"PlayerHUDHeart.html#getheartanim","title":"GetHeartAnim ()","text":"","tags":["Class"]},{"location":"PlayerHUDHeart.html#string-getheartanim","title":"string GetHeartAnim ( )","text":"","tags":["Class"]},{"location":"PlayerHUDHeart.html#getheartoverlayanim","title":"GetHeartOverlayAnim ()","text":"","tags":["Class"]},{"location":"PlayerHUDHeart.html#string-getheartoverlayanim","title":"string GetHeartOverlayAnim ( )","text":"","tags":["Class"]},{"location":"PlayerHUDHeart.html#iseternalheartoverlayvisible","title":"IsEternalHeartOverlayVisible ()","text":"","tags":["Class"]},{"location":"PlayerHUDHeart.html#boolean-iseternalheartoverlayvisible","title":"boolean IsEternalHeartOverlayVisible ( )","text":"","tags":["Class"]},{"location":"PlayerHUDHeart.html#isfadingheart","title":"IsFadingHeart ()","text":"","tags":["Class"]},{"location":"PlayerHUDHeart.html#boolean-isfadingheart","title":"boolean IsFadingHeart ( )","text":"","tags":["Class"]},{"location":"PlayerHUDHeart.html#isgoldenheartoverlayvisible","title":"IsGoldenHeartOverlayVisible ()","text":"","tags":["Class"]},{"location":"PlayerHUDHeart.html#boolean-isgoldenheartoverlayvisible","title":"boolean IsGoldenHeartOverlayVisible ( )","text":"","tags":["Class"]},{"location":"PlayerHUDHeart.html#isvisible","title":"IsVisible ()","text":"","tags":["Class"]},{"location":"PlayerHUDHeart.html#boolean-isvisible","title":"boolean IsVisible ( )","text":"","tags":["Class"]},{"location":"PlayerManager.html","title":"Global Class \"PlayerManager\"","text":"Info <p>You can get this class by using the <code>PlayerManager</code> global table.</p> <p>Note that to call these functions, you must use a <code>.</code> (period) instead of a <code>:</code> (colon)!</p> Example Code <pre><code>local hasTrinket = PlayerManager.AnyoneHasTrinket(TrinketType.TRINKET_SWALLOWED_PENNY)\n</code></pre>","tags":["Global","Class"]},{"location":"PlayerManager.html#functions","title":"Functions","text":"","tags":["Global","Class"]},{"location":"PlayerManager.html#anyonehascollectible","title":"AnyoneHasCollectible ()","text":"","tags":["Global","Class"]},{"location":"PlayerManager.html#boolean-anyonehascollectible-collectibletype-collectible","title":"boolean AnyoneHasCollectible ( CollectibleType Collectible )","text":"<p>Returns true when any player has the item and false when no one does.</p>","tags":["Global","Class"]},{"location":"PlayerManager.html#anyonehastrinket","title":"AnyoneHasTrinket ()","text":"","tags":["Global","Class"]},{"location":"PlayerManager.html#boolean-anyonehastrinket-trinkettype-trinket","title":"boolean AnyoneHasTrinket ( TrinketType Trinket )","text":"<p>Returns true when any player has the trinket and false when no one does.</p>","tags":["Global","Class"]},{"location":"PlayerManager.html#anyoneisplayertype","title":"AnyoneIsPlayerType ()","text":"","tags":["Global","Class"]},{"location":"PlayerManager.html#boolean-anyoneisplayertype-playertype-playertype","title":"boolean AnyoneIsPlayerType ( PlayerType PlayerType )","text":"","tags":["Global","Class"]},{"location":"PlayerManager.html#anyplayertypehasbirthright","title":"AnyPlayerTypeHasBirthright ()","text":"","tags":["Global","Class"]},{"location":"PlayerManager.html#boolean-anyplayertypehasbirthright-playertype-playertype","title":"boolean AnyPlayerTypeHasBirthright ( PlayerType PlayerType, )","text":"","tags":["Global","Class"]},{"location":"PlayerManager.html#anyplayertypehascollectible","title":"AnyPlayerTypeHasCollectible ()","text":"","tags":["Global","Class"]},{"location":"PlayerManager.html#boolean-anyplayertypehascollectible-playertype-playertype-collectibletype-collectible-boolean-ignoremodifiers-false","title":"boolean AnyPlayerTypeHasCollectible ( PlayerType PlayerType, CollectibleType Collectible, boolean IgnoreModifiers = false )","text":"","tags":["Global","Class"]},{"location":"PlayerManager.html#anyplayertypehastrinket","title":"AnyPlayerTypeHasTrinket ()","text":"","tags":["Global","Class"]},{"location":"PlayerManager.html#boolean-anyplayertypehastrinket-playertype-playertype-trinkettype-trinket-boolean-ignoremodifiers-false","title":"boolean AnyPlayerTypeHasTrinket ( PlayerType PlayerType, TrinketType Trinket, boolean IgnoreModifiers = false )","text":"","tags":["Global","Class"]},{"location":"PlayerManager.html#firstbirthrightowner","title":"FirstBirthrightOwner ()","text":"","tags":["Global","Class"]},{"location":"PlayerManager.html#entityplayer-firstbirthrightowner-playertype-playertype","title":"EntityPlayer FirstBirthrightOwner ( PlayerType PlayerType )","text":"","tags":["Global","Class"]},{"location":"PlayerManager.html#firstcollectibleowner","title":"FirstCollectibleOwner ()","text":"","tags":["Global","Class"]},{"location":"PlayerManager.html#entityplayer-firstcollectibleowner-collectibletype-collectible-boolean-lazsharedglobaltag-true","title":"EntityPlayer FirstCollectibleOwner ( CollectibleType Collectible, boolean LazSharedGlobalTag = true )","text":"<p>Returns <code>nil</code> if the specified collectible has never been picked up.</p>","tags":["Global","Class"]},{"location":"PlayerManager.html#firstplayerbytype","title":"FirstPlayerByType ()","text":"","tags":["Global","Class"]},{"location":"PlayerManager.html#entityplayer-firstplayerbytype-playertype-playertype","title":"EntityPlayer FirstPlayerByType ( PlayerType PlayerType )","text":"","tags":["Global","Class"]},{"location":"PlayerManager.html#firsttrinketowner","title":"FirstTrinketOwner ()","text":"","tags":["Global","Class"]},{"location":"PlayerManager.html#entityplayer-firsttrinketowner-trinkettype-trinket-rng-rng-nil-boolean-lazsharedglobaltag-true","title":"EntityPlayer FirstTrinketOwner ( TrinketType Trinket, RNG RNG = nil, boolean LazSharedGlobalTag = true )","text":"<p>Returns <code>nil</code> if the specified trinket has never been picked up.</p>","tags":["Global","Class"]},{"location":"PlayerManager.html#getesaujrstate","title":"GetEsauJrState ()","text":"","tags":["Global","Class"]},{"location":"PlayerManager.html#entityplayer-getesaujrstate-int-index-0","title":"EntityPlayer GetEsauJrState ( int Index = 0 )","text":"","tags":["Global","Class"]},{"location":"PlayerManager.html#getnumcollectibles","title":"GetNumCollectibles ()","text":"","tags":["Global","Class"]},{"location":"PlayerManager.html#int-getnumcollectibles-collectibletype-collectible","title":"int GetNumCollectibles ( CollectibleType Collectible )","text":"<p>Returns the number of collectibles held by all players.</p>","tags":["Global","Class"]},{"location":"PlayerManager.html#getplayers","title":"GetPlayers ()","text":"","tags":["Global","Class"]},{"location":"PlayerManager.html#entityplayer-getplayers","title":"EntityPlayer[] GetPlayers ( )","text":"<p>Returns a table containing all players.</p>","tags":["Global","Class"]},{"location":"PlayerManager.html#gettotaltrinketmultiplier","title":"GetTotalTrinketMultiplier ()","text":"","tags":["Global","Class"]},{"location":"PlayerManager.html#int-gettotaltrinketmultiplier-trinkettype-trinket","title":"int GetTotalTrinketMultiplier ( TrinketType Trinket )","text":"","tags":["Global","Class"]},{"location":"PlayerManager.html#iscoopplay","title":"IsCoopPlay ()","text":"","tags":["Global","Class"]},{"location":"PlayerManager.html#boolean-iscoopplay","title":"boolean IsCoopPlay ( )","text":"<p>Returns <code>true</code> if the game is in co-op mode.</p>","tags":["Global","Class"]},{"location":"PlayerManager.html#removecoplayer","title":"RemoveCoPlayer ()","text":"","tags":["Global","Class"]},{"location":"PlayerManager.html#void-removecoplayer-entityplayer-player","title":"void RemoveCoPlayer ( EntityPlayer Player )","text":"<p>Can be used to safely remove extra player entities, such as Strawman.</p> Tip <p>Don't pass the main player to this!</p>","tags":["Global","Class"]},{"location":"PlayerManager.html#spawncoplayer2","title":"SpawnCoPlayer2 ()","text":"","tags":["Global","Class"]},{"location":"PlayerManager.html#entityplayer-spawncoplayer2-playertype-playertype","title":"EntityPlayer SpawnCoPlayer2 ( PlayerType PlayerType )","text":"","tags":["Global","Class"]},{"location":"PlayerManager.html#spawnselectedbaby","title":"SpawnSelectedBaby ()","text":"","tags":["Global","Class"]},{"location":"PlayerManager.html#void-spawnselectedbaby-babysubtype-babytype-int-controllerindex","title":"void SpawnSelectedBaby ( BabySubType BabyType, int ControllerIndex )","text":"","tags":["Global","Class"]},{"location":"PlayerManager.html#triggerroomclear","title":"TriggerRoomClear ()","text":"","tags":["Global","Class"]},{"location":"PlayerManager.html#void-triggerroomclear","title":"void TriggerRoomClear ( )","text":"","tags":["Global","Class"]},{"location":"PocketItem.html","title":"Class \"PocketItem\"","text":"Info <p>You can get this class by using the following functions:</p> <ul> <li>EntityPlayer:GetPocketItem()</li> </ul> Example Code <pre><code>local pocket = Isaac.GetPlayer(0):GetPocketItem(0)\n</code></pre>","tags":["Class"]},{"location":"PocketItem.html#functions","title":"Functions","text":"","tags":["Class"]},{"location":"PocketItem.html#getslot","title":"GetSlot ()","text":"","tags":["Class"]},{"location":"PocketItem.html#int-getslot","title":"int GetSlot ( )","text":"<p>Returns an identifying value for this pocket item. Varies depending on the PocketItemType.</p> <p>Returns <code>0</code> if the pocket slot is empty.</p> <p>For cards, returns Card.</p> <p>For pills, returns PillColor.</p> <p>For pocket active items, returns the corresponding ActiveSlot+1 (so <code>ActiveSlot.SLOT_POCKET + 1</code> or <code>ActiveSlot.SLOT_POCKET2 + 1</code>).</p> Example code to obtain the CollectibleType of the pocket active item in a given pocket slot: <pre><code>local pocketItem = player:GetPocketItem(PillCardSlot.PRIMARY)\nif pocketItem:GetType() == PocketItemType.ACTIVE_ITEM then\n  local activeSlot = pocketItem:GetSlot() - 1\n  local activeItemID = player:GetActiveItem(activeSlot)\nend\n</code></pre>","tags":["Class"]},{"location":"PocketItem.html#gettype","title":"GetType ()","text":"","tags":["Class"]},{"location":"PocketItem.html#pocketitemtype-gettype","title":"PocketItemType GetType ( )","text":"<p>Returns the PocketItemType.</p> <p>This value is unreliable if the slot is currently empty, as the game sometimes does not clear it.</p>","tags":["Class"]},{"location":"ProceduralEffect.html","title":"Class \"ProceduralEffect\"","text":"Info <p>You can get this class by using the following functions:</p> <ul> <li>ProceduralItem.GetEffect()</li> </ul> Example Code <pre><code>local pItemEffect = ProceduralItemManager.GetProceduralItem(0):GetEffect(0)\n</code></pre>","tags":["Class"]},{"location":"ProceduralEffect.html#functions","title":"Functions","text":"","tags":["Class"]},{"location":"ProceduralEffect.html#getactionproperty","title":"GetActionProperty ()","text":"","tags":["Class"]},{"location":"ProceduralEffect.html#table-getactionproperty","title":"table GetActionProperty ( )","text":"<p>Returns a table that describes the action argument.</p> <p>When <code>GetActionType</code> returns <code>USE_ACTIVE_ITEM</code>, the returned table has the following fields.</p> Field Type Comment id int <p>When <code>GetActionType</code> returns <code>ADD_TEMPRORY_EFFECT</code>, the returned table has the following fields.</p> Field Type Comment id int <p>When <code>GetActionType</code> returns <code>SPAWN_ENTITY</code>, the returned table has the following fields.</p> Field Type Comment type int variant int <p>When <code>GetActionType</code> returns <code>CONVERT_ENTITY</code>, the returned table has the following fields.</p> Field Type Comment fromType int fromVariant int toType int target type toVariant int target variant <p>When <code>GetActionType</code> returns <code>AREA_DAMAGE</code>, the returned table has the following fields.</p> Field Type Comment radius float damage float <p>When <code>GetActionType</code> returns <code>FART</code>, the returned table has the following fields.</p> Field Type Comment scale float radius float","tags":["Class"]},{"location":"ProceduralEffect.html#getactiontype","title":"GetActionType ()","text":"","tags":["Class"]},{"location":"ProceduralEffect.html#proceduraleffectactiontype-getactiontype","title":"ProceduralEffectActionType GetActionType ( )","text":"<p>Returns what to do after the effect is triggered.</p>","tags":["Class"]},{"location":"ProceduralEffect.html#getconditionproperty","title":"GetConditionProperty ()","text":"","tags":["Class"]},{"location":"ProceduralEffect.html#table-getconditionproperty","title":"table GetConditionProperty ( )","text":"<p>Returns a table that describes the condition argument.</p> <p>When <code>GetConditionType</code> returns <code>ENTITY_SPAWN</code>, the returned table has the following fields.</p> Field Type type int variant int","tags":["Class"]},{"location":"ProceduralEffect.html#getconditiontype","title":"GetConditionType ()","text":"","tags":["Class"]},{"location":"ProceduralEffect.html#proceduraleffectconditiontype-getconditiontype","title":"ProceduralEffectConditionType GetConditionType ( )","text":"<p>Returns the timing when the effect was triggered.</p>","tags":["Class"]},{"location":"ProceduralEffect.html#gettriggerchance","title":"GetTriggerChance ()","text":"","tags":["Class"]},{"location":"ProceduralEffect.html#float-gettriggerchance","title":"float GetTriggerChance ( )","text":"<p>This is the chance that the game actually uses. In most cases, this value ranges from <code>0</code> to <code>1</code>.</p>","tags":["Class"]},{"location":"ProceduralItem.html","title":"Class \"ProceduralItem\"","text":"Info <p>You can get this class by using the following functions:</p> <ul> <li>ProceduralItemManager.GetProceduralItem()</li> </ul> Example Code <pre><code>local pItem = ProceduralItemManager.GetProceduralItem(0)\n</code></pre>","tags":["Class"]},{"location":"ProceduralItem.html#functions","title":"Functions","text":"","tags":["Class"]},{"location":"ProceduralItem.html#getdamage","title":"GetDamage ()","text":"","tags":["Class"]},{"location":"ProceduralItem.html#float-getdamage","title":"float GetDamage ( )","text":"","tags":["Class"]},{"location":"ProceduralItem.html#geteffect","title":"GetEffect ()","text":"","tags":["Class"]},{"location":"ProceduralItem.html#proceduraleffect-geteffect-int-index","title":"ProceduralEffect GetEffect ( int Index )","text":"","tags":["Class"]},{"location":"ProceduralItem.html#geteffectcount","title":"GetEffectCount ()","text":"","tags":["Class"]},{"location":"ProceduralItem.html#int-geteffectcount","title":"int GetEffectCount ( )","text":"","tags":["Class"]},{"location":"ProceduralItem.html#getfiredelay","title":"GetFireDelay ()","text":"","tags":["Class"]},{"location":"ProceduralItem.html#float-getfiredelay","title":"float GetFireDelay ( )","text":"","tags":["Class"]},{"location":"ProceduralItem.html#getid","title":"GetID ()","text":"","tags":["Class"]},{"location":"ProceduralItem.html#int-getid","title":"int GetID ( )","text":"","tags":["Class"]},{"location":"ProceduralItem.html#getitem","title":"GetItem ()","text":"","tags":["Class"]},{"location":"ProceduralItem.html#itemconfigitem-getitem","title":"ItemConfigItem GetItem ( )","text":"<p>Get the item config of the current glitched item.</p>","tags":["Class"]},{"location":"ProceduralItem.html#getluck","title":"GetLuck ()","text":"","tags":["Class"]},{"location":"ProceduralItem.html#float-getluck","title":"float GetLuck ( )","text":"","tags":["Class"]},{"location":"ProceduralItem.html#getrange","title":"GetRange ()","text":"","tags":["Class"]},{"location":"ProceduralItem.html#float-getrange","title":"float GetRange ( )","text":"","tags":["Class"]},{"location":"ProceduralItem.html#getshotspeed","title":"GetShotSpeed ()","text":"","tags":["Class"]},{"location":"ProceduralItem.html#float-getshotspeed","title":"float GetShotSpeed ( )","text":"","tags":["Class"]},{"location":"ProceduralItem.html#getspeed","title":"GetSpeed ()","text":"","tags":["Class"]},{"location":"ProceduralItem.html#float-getspeed","title":"float GetSpeed ( )","text":"","tags":["Class"]},{"location":"ProceduralItem.html#gettargetitem","title":"GetTargetItem ()","text":"","tags":["Class"]},{"location":"ProceduralItem.html#itemconfigitem-gettargetitem","title":"ItemConfigItem GetTargetItem ( )","text":"<p>Returns the item config that was randomly selected by the current glitched item, or <code>nil</code> if it doesn't exist.</p>","tags":["Class"]},{"location":"ProceduralItemManager.html","title":"Global Class \"ProceduralItemManager\"","text":"Info <p>You can get this class by using the <code>ProceduralItemManager</code> global table.</p> <p>Note that to call these functions, you must use a <code>.</code> (period) instead of a <code>:</code> (colon)!</p> Example Code <pre><code>local pItem = ProceduralItemManager.GetProceduralItem(0)\n</code></pre>","tags":["Global","Class"]},{"location":"ProceduralItemManager.html#functions","title":"Functions","text":"","tags":["Global","Class"]},{"location":"ProceduralItemManager.html#createproceduralitem","title":"CreateProceduralItem ()","text":"","tags":["Global","Class"]},{"location":"ProceduralItemManager.html#int-createproceduralitem-int-seed-int-unknown","title":"int CreateProceduralItem ( int Seed, int Unknown )","text":"<p>Creates a glitch item based on a given seed.  Returns the negative ID of the created item.</p>","tags":["Global","Class"]},{"location":"ProceduralItemManager.html#getproceduralitem","title":"GetProceduralItem ()","text":"","tags":["Global","Class"]},{"location":"ProceduralItemManager.html#proceduralitem-getproceduralitem-int-index","title":"ProceduralItem GetProceduralItem ( int Index )","text":"<p>Get the glitch item at the given index.</p>","tags":["Global","Class"]},{"location":"ProceduralItemManager.html#getproceduralitemcount","title":"GetProceduralItemCount ()","text":"","tags":["Global","Class"]},{"location":"ProceduralItemManager.html#int-getproceduralitemcount","title":"int GetProceduralItemCount ( )","text":"","tags":["Global","Class"]},{"location":"ProjectileParams.html","title":"Class \"ProjectileParams\"","text":"","tags":["Global","Class"],"boost":0.25},{"location":"ProjectileParams.html#variables","title":"Variables","text":"","tags":["Global","Class"],"boost":0.25},{"location":"ProjectileParams.html#damage","title":"Damage","text":"","tags":["Global","Class"],"boost":0.25},{"location":"ProjectileParams.html#float-damage","title":"float Damage","text":"<p>Number of half hearts of damage dealt by the projectile. Cannot be set to a negative value.</p> Info <p>This value ignores the full heart damage modifier applied to projectiles with a Scale above <code>1.15</code>, but non-boss champions will still double it (with a caveat, read warning below!).</p> Warning <p>Enemies with a ChampionColorIdx above <code>-1</code> will cap the damage at <code>2.0</code>!</p>","tags":["Global","Class"],"boost":0.25},{"location":"RNG.html","title":"Class \"RNG\"","text":"","tags":["Class"]},{"location":"RNG.html#modified-constructors","title":"Modified Constructors","text":"","tags":["Class"]},{"location":"RNG.html#rng","title":"RNG ()","text":"","tags":["Class"]},{"location":"RNG.html#rng-rng-int-seed-2853650767-int-shiftidx-35","title":"RNG RNG ( int seed = 2853650767, int shiftIdx = 35 )","text":"<p>Now takes an optional seed and an optional shiftIdx. This can be used to avoid separating construction of the RNG object and a call to SetSeed.</p> <p>The function validates both the seed and the shift index.</p>","tags":["Class"]},{"location":"RNG.html#modified-functions","title":"Modified Functions","text":"","tags":["Class"]},{"location":"RNG.html#randomint","title":"RandomInt ()","text":"","tags":["Class"]},{"location":"RNG.html#int-randomint-int-min-int-max","title":"int RandomInt ( int Min, int Max )","text":"<p>Can now emulate <code>math.random</code> by accepting a second argument to generate a number between the first argument and it, inclusive. Negative values are usable in this mode and will properly generate a number between <code>min</code> and <code>max</code> regardless of sign.</p>","tags":["Class"]},{"location":"RNG.html#setseed","title":"SetSeed ()","text":"","tags":["Class"]},{"location":"RNG.html#void-setseed-int-seed-int-shiftidx-35","title":"void SetSeed ( int Seed, int ShiftIdx = 35 )","text":"<p>An error is now thrown if Seed is below 0.</p> <p>An error is now thrown if ShiftIdx is not between 0 and 80, inclusive.</p> <p>ShiftIdx is now optional, with the default value set to 35.</p>","tags":["Class"]},{"location":"RNG.html#functions","title":"Functions","text":"","tags":["Class"]},{"location":"RNG.html#getshiftidx","title":"GetShiftIdx ()","text":"","tags":["Class"]},{"location":"RNG.html#int-getshiftidx","title":"int GetShiftIdx ( )","text":"","tags":["Class"]},{"location":"RNG.html#phantomfloat","title":"PhantomFloat ()","text":"","tags":["Class"]},{"location":"RNG.html#float-phantomfloat","title":"float PhantomFloat ( )","text":"<p>Generates a random float between <code>0</code> (inclusive) and <code>1</code> (exclusive).</p> <p>This does not advance the internal state of the RNG object.</p>","tags":["Class"]},{"location":"RNG.html#phantomint","title":"PhantomInt ()","text":"","tags":["Class"]},{"location":"RNG.html#int-phantomint-int-max","title":"int PhantomInt ( int Max )","text":"<p>Behaves identically to RandomInt without advancing the internal state of the RNG object.</p>","tags":["Class"]},{"location":"RNG.html#phantomnext","title":"PhantomNext ()","text":"","tags":["Class"]},{"location":"RNG.html#int-phantomnext","title":"int PhantomNext ( )","text":"","tags":["Class"]},{"location":"RNG.html#phantomprevious","title":"PhantomPrevious ()","text":"","tags":["Class"]},{"location":"RNG.html#int-phantomprevious","title":"int PhantomPrevious ( )","text":"","tags":["Class"]},{"location":"RNG.html#phantomvector","title":"PhantomVector ()","text":"","tags":["Class"]},{"location":"RNG.html#vector-phantomvector","title":"Vector PhantomVector ( )","text":"<p>Returns a random vector with length <code>1</code>. Multiply this vector by a number for larger random vectors.</p> <p>This does not advance the internal state of the RNG object.</p>","tags":["Class"]},{"location":"RNG.html#previous","title":"Previous ()","text":"","tags":["Class"]},{"location":"RNG.html#int-previous","title":"int Previous ( )","text":"","tags":["Class"]},{"location":"RNG.html#randomvector","title":"RandomVector ()","text":"","tags":["Class"]},{"location":"RNG.html#vector-randomvector","title":"Vector RandomVector ( )","text":"<p>Returns a random vector with length <code>1</code>. Multiply this vector by a number for larger random vectors.</p>","tags":["Class"]},{"location":"RailManager.html","title":"Class \"RailManager\"","text":"Info <p>You can get this class by using the following functions:</p> <ul> <li>Room:GetRailManager()</li> </ul> Example Code <pre><code>local railManager = Game():GetRoom():GetRailManager()\n</code></pre>","tags":["Class"]},{"location":"RailManager.html#functions","title":"Functions","text":"","tags":["Class"]},{"location":"RailManager.html#getrailssprite","title":"GetRailsSprite ()","text":"","tags":["Class"]},{"location":"RailManager.html#sprite-getrailssprite","title":"Sprite GetRailsSprite ( )","text":"","tags":["Class"]},{"location":"Repentogon.html","title":"Global Variable \"REPENTOGON\"","text":"<p>This global variable exposes functions and variables about Repentogon, such as the current version, the changelog etc. It is a table.</p> <p>This variable can be accessed anywhere.</p>","tags":["Global"]},{"location":"Repentogon.html#functions","title":"Functions","text":"<p>All functions in the table are static: they are accessed using the dot (<code>.</code>)  operator, rather than the colon (<code>:</code>) operator.</p>","tags":["Global"]},{"location":"Repentogon.html#meetsversion","title":"MeetsVersion ()","text":"","tags":["Global"]},{"location":"Repentogon.html#boolean-meetsversion-string-version","title":"boolean MeetsVersion ( string version )","text":"<p>Checks whether the specified <code>version</code> is greater or equal to the currently  installed Repentogon version.</p> <p>The function splits the <code>version</code> parameter alongside numbers boudaries. Each  token produced by the split is compared against the corresponding token in  the Repentogon version string. The function returns as soon as: * The token in <code>version</code> is strictly lower than the corresponding token in  <code>REPENTOGON.Version</code>. The function returns <code>false</code>. * The token in <code>version</code> is strictly greater than the corresponding token in  <code>REPENTOGON.Version</code>. The function returns <code>true</code>. * All tokens are consumed. The function returns <code>true</code> as the requested <code>version</code> exactly matches the current Repentogon version.</p> <p>If <code>REPENTOGON.Version</code> equals \"dev build\", the function always returns <code>true</code>.</p> Example <pre><code>-- Assume REPENTOGON.Version = \"1.0.9a\"\nREPENTOGON.MeetsVersion(\"1.0.8b\") -- False\n--[[ 1 is compared against 1: they are equal so continue.\n0 is compared against 0: they are equal so continue.\n8 is compared against 9: it's lower so return false. --]]\n\nREPENTOGON.MeetsVersion(\"1.0.9\") -- True\n--[[ 1 is compared against 1, 0 is compared against 0, 9 is compared against \n9: all are equals, all tokens are consumed: return true.\nNote that the letter is silently discarded. --]]\n\nREPENTOGON.MeetsVersion(\"2\") -- True\n--[[ 2 is compared against 1: it's higher, so return true. --]]\n\nREPENTOGON.MeetsVersion(\"1.12\") -- True\n--[[ 1 is compared against 1: they are equal so continue.\n12 is compared against 0: it's greater so return true. --]]\n\nREPENTOGON.MeetsVersion(\"1c1\") -- True\n--[[ 1 is compared against 1: they are equal so continue.\n1 is compared against 0: it's greater so return true. --]]\n</code></pre> Bug <p>Up until Repentogon version 1.0.10b, this function is bugged and will always return <code>true</code>.</p>","tags":["Global"]},{"location":"Room.html","title":"Class \"Room\"","text":"","tags":["Class"]},{"location":"Room.html#modified-functions","title":"Modified Functions","text":"","tags":["Class"]},{"location":"Room.html#getbackdroptype","title":"GetBackdropType ()","text":"","tags":["Class"]},{"location":"Room.html#backdroptype-getbackdroptype","title":"BackdropType GetBackdropType ( )","text":"","tags":["Class"]},{"location":"Room.html#getlroomareadesc","title":"GetLRoomAreaDesc ()","text":"","tags":["Class"]},{"location":"Room.html#lroomareadesc-getlroomareadesc","title":"LRoomAreaDesc GetLRoomAreaDesc ( )","text":"<p>Now returns a usable class. Describes the corners of an L-room shape (as divided horizontally into two rectangles), in worldspace.</p>","tags":["Class"]},{"location":"Room.html#getlroomtiledesc","title":"GetLRoomTileDesc ()","text":"","tags":["Class"]},{"location":"Room.html#lroomtiledesc-getlroomtiledesc","title":"LRoomTileDesc GetLRoomTileDesc ( )","text":"<p>Now returns a usable class. Describes the corners of an L-room shape (as divided horizontally into two rectangles), in grid coordinates.</p>","tags":["Class"]},{"location":"Room.html#spawngridentity","title":"SpawnGridEntity ()","text":"","tags":["Class"]},{"location":"Room.html#boolean-spawngridentity-int-gridindex-gridentitytype-type-int-variant-0-int-seed-nil-int-vardata-0","title":"boolean SpawnGridEntity ( int GridIndex, GridEntityType Type, int Variant = 0, int Seed = nil, int VarData = 0 )","text":"","tags":["Class"]},{"location":"Room.html#boolean-spawngridentity-int-gridindex-gridentitydesc-descriptor","title":"boolean SpawnGridEntity ( int GridIndex, GridEntityDesc Descriptor)","text":"<p>No longer crashes if an invalid <code>GridIndex</code> is used. All arguments beyond <code>Type</code> are optional. An overload has been added to allow spawning a new grid entity using an existing <code>GridEntityDesc</code>.</p>","tags":["Class"]},{"location":"Room.html#tryspawnspecialquestdoor","title":"TrySpawnSpecialQuestDoor ()","text":"","tags":["Class"]},{"location":"Room.html#boolean-tryspawnspecialquestdoor-boolean-ignorestagetype-false","title":"boolean TrySpawnSpecialQuestDoor ( boolean IgnoreStageType = false )","text":"<p>An <code>IgnoreStageType</code> parameter has been added to allow spawning the Mirror &amp; Mineshaft door outside of <code>STAGETYPE_REPENTANCE</code> and <code>STAGETYPE_REPENTANCE_B</code> stages. Note that the <code>KNIFE_PUZZLE</code> dimension must be set up properly for these doors not to crash on entry!</p>","tags":["Class"]},{"location":"Room.html#functions","title":"Functions","text":"","tags":["Class"]},{"location":"Room.html#canpickupgridentity","title":"CanPickupGridEntity ()","text":"","tags":["Class"]},{"location":"Room.html#boolean-canpickupgridentity-int-gridindex","title":"boolean CanPickupGridEntity ( int GridIndex )","text":"<p>Returns true if the gridentity at the given position can be picked up.</p>","tags":["Class"]},{"location":"Room.html#canspawnobstacleatposition","title":"CanSpawnObstacleAtPosition ()","text":"","tags":["Class"]},{"location":"Room.html#boolean-canspawnobstacleatposition-int-gridindex-boolean-force","title":"boolean CanSpawnObstacleAtPosition ( int GridIndex, boolean Force )","text":"","tags":["Class"]},{"location":"Room.html#dolightningstrike","title":"DoLightningStrike ()","text":"","tags":["Class"]},{"location":"Room.html#void-dolightningstrike-int-seed-randomseed","title":"void DoLightningStrike ( int Seed = RandomSeed )","text":"<p>Creates a lightning effect as seen in Downpour. <code>Seed</code> determines intensity (<code>1.3 + RandomFloat()*.6</code>) and sound pitch (<code>0.9 + RandomFloat()*0.2</code>).</p>","tags":["Class"]},{"location":"Room.html#getbackdrop","title":"GetBackdrop ()","text":"","tags":["Class"]},{"location":"Room.html#backdrop-getbackdrop","title":"Backdrop GetBackdrop ( )","text":"<p>Returns a Backdrop object.</p>","tags":["Class"]},{"location":"Room.html#getbossvictoryjingle","title":"GetBossVictoryJingle ()","text":"","tags":["Class"]},{"location":"Room.html#music-getbossvictoryjingle","title":"Music GetBossVictoryJingle ( )","text":"","tags":["Class"]},{"location":"Room.html#getcamera","title":"GetCamera ()","text":"","tags":["Class"]},{"location":"Room.html#camera-getcamera","title":"Camera GetCamera ( )","text":"<p>Returns a Camera object.</p>","tags":["Class"]},{"location":"Room.html#getchampionbosschance","title":"GetChampionBossChance ()","text":"","tags":["Class"]},{"location":"Room.html#float-getchampionbosschance","title":"float GetChampionBossChance ( )","text":"<p>Return the probability that boss spawns in this room will be champions.</p>","tags":["Class"]},{"location":"Room.html#geteffects","title":"GetEffects ()","text":"","tags":["Class"]},{"location":"Room.html#temporaryeffects-geteffects","title":"TemporaryEffects GetEffects ( )","text":"","tags":["Class"]},{"location":"Room.html#getfloorcolor","title":"GetFloorColor ()","text":"","tags":["Class"]},{"location":"Room.html#color-getfloorcolor","title":"Color GetFloorColor ( )","text":"","tags":["Class"]},{"location":"Room.html#getfxparams","title":"GetFXParams ()","text":"","tags":["Class"]},{"location":"Room.html#fxparams-getfxparams","title":"FXParams GetFXParams ( )","text":"","tags":["Class"]},{"location":"Room.html#getgreedwavetimer","title":"GetGreedWaveTimer ()","text":"","tags":["Class"]},{"location":"Room.html#int-getgreedwavetimer","title":"int GetGreedWaveTimer ( )","text":"","tags":["Class"]},{"location":"Room.html#getgridindexbytile","title":"GetGridIndexByTile ()","text":"","tags":["Class"]},{"location":"Room.html#int-getgridindexbytile-int-gridrow-int-gridcolumn","title":"int GetGridIndexByTile ( int GridRow, int GridColumn )","text":"","tags":["Class"]},{"location":"Room.html#int-getgridindexbytile-int2-tile","title":"int GetGridIndexByTile ( int[2] Tile )","text":"","tags":["Class"]},{"location":"Room.html#getitempool","title":"GetItemPool ()","text":"","tags":["Class"]},{"location":"Room.html#itempooltype-pooltype-getitempool-int-seed-boolean-raw","title":"ItemPoolType PoolType GetItemPool ( int Seed, boolean Raw )","text":"<p>Retrieves the ItemPoolType the game would use to generate random collectibles in the current room. Unlike ItemPool.GetPoolForRoom(), this takes into account the pool set using SetItemPool(), and runs the game's pool selection code, which handles unique cases (ex. Boss Room + Used Satanic Bible = Devil Pool).</p> <p>If <code>Raw</code> is set to <code>true</code> and the pool is set to <code>POOL_NULL</code> then <code>POOL_NULL</code> will be returned, instead of running the game's pool selection code.</p>","tags":["Class"]},{"location":"Room.html#getlightningintensity","title":"GetLightningIntensity ()","text":"","tags":["Class"]},{"location":"Room.html#float-getlightningintensity","title":"float GetLightningIntensity ( )","text":"<p>Gets the intensity of the lightning effect used in Downpour. This variable will affect the visibility of Wraiths.</p> <p>This is set by the game in a random range between <code>1.3</code> and <code>2.1</code>, and decays by <code>value * .75</code> per render.</p>","tags":["Class"]},{"location":"Room.html#getnumrainspawners","title":"GetNumRainSpawners ()","text":"","tags":["Class"]},{"location":"Room.html#int-getnumrainspawners","title":"int GetNumRainSpawners ( )","text":"<p>The number of areas in a room that spawn rain effects in a tight radius.</p> Info <p>There's more to this than just the number of them, but I'm having trouble identifying how this works.</p>","tags":["Class"]},{"location":"Room.html#getrail","title":"GetRail ()","text":"","tags":["Class"]},{"location":"Room.html#stbrailvariant-getrail-int-gridindex","title":"StbRailVariant GetRail ( int GridIndex )","text":"","tags":["Class"]},{"location":"Room.html#getrailmanager","title":"GetRailManager ()","text":"","tags":["Class"]},{"location":"Room.html#railmanager-getrailmanager","title":"RailManager GetRailManager ( )","text":"","tags":["Class"]},{"location":"Room.html#getrainintensity","title":"GetRainIntensity ()","text":"","tags":["Class"]},{"location":"Room.html#float-getrainintensity","title":"float GetRainIntensity ( )","text":"<p>Used by the positional rain effect spawners in Downpour. No noticable effect beyond <code>1.0</code>.</p>","tags":["Class"]},{"location":"Room.html#getroomcleardelay","title":"GetRoomClearDelay ()","text":"","tags":["Class"]},{"location":"Room.html#int-getroomcleardelay","title":"int GetRoomClearDelay ( )","text":"","tags":["Class"]},{"location":"Room.html#getshopitemprice","title":"GetShopItemPrice ()","text":"","tags":["Class"]},{"location":"Room.html#int-getshopitemprice-int-entityvariant-int-entitysubtype-int-shopitemid","title":"int GetShopItemPrice ( int EntityVariant, int EntitySubType, int ShopItemID )","text":"<p>Returns the price of the item.</p>","tags":["Class"]},{"location":"Room.html#getwateramount","title":"GetWaterAmount ()","text":"","tags":["Class"]},{"location":"Room.html#float-getwateramount","title":"float GetWaterAmount ( )","text":"<p>Returns the \"amount\" of water currently in the room. Generally this will be <code>0</code> for no water and <code>1</code> for water, but values in between <code>0</code> and <code>1</code> (and technically above <code>1</code> in modded scenarios) are possible.</p>","tags":["Class"]},{"location":"Room.html#getwatercolor","title":"GetWaterColor ()","text":"","tags":["Class"]},{"location":"Room.html#kcolor-getwatercolor","title":"KColor GetWaterColor ( )","text":"","tags":["Class"]},{"location":"Room.html#getwatercolormultiplier","title":"GetWaterColorMultiplier ()","text":"","tags":["Class"]},{"location":"Room.html#kcolor-getwatercolormultiplier","title":"KColor GetWaterColorMultiplier ( )","text":"","tags":["Class"]},{"location":"Room.html#ischampionbossseed","title":"IsChampionBossSeed ()","text":"","tags":["Class"]},{"location":"Room.html#boolean-ischampionbossseed","title":"boolean IsChampionBossSeed ( )","text":"<p>Return whether boss spawns in this room will be champions.</p>","tags":["Class"]},{"location":"Room.html#ispersistentroomentity","title":"IsPersistentRoomEntity ()","text":"","tags":["Class"]},{"location":"Room.html#boolean-ispersistentroomentity-entitytype-type-int-variant-0","title":"boolean IsPersistentRoomEntity ( EntityType Type, int Variant = 0 )","text":"","tags":["Class"]},{"location":"Room.html#pickupgridentity","title":"PickupGridEntity ()","text":"","tags":["Class"]},{"location":"Room.html#entityeffect-pickupgridentity-int-gridindex","title":"EntityEffect PickupGridEntity ( int GridIndex )","text":"<p>Tries to pick up the grid entity at the provided index and returns an EntityEffect of the picked up grid entity.</p>","tags":["Class"]},{"location":"Room.html#removegridentityimmediate","title":"RemoveGridEntityImmediate ()","text":"","tags":["Class"]},{"location":"Room.html#void-removegridentityimmediate-int-gridindex-int-pathtrail-boolean-keepdecoration","title":"void RemoveGridEntityImmediate ( int GridIndex, int PathTrail, boolean KeepDecoration )","text":"<p>Immediately removes the GridEntity at the given index. This means grids can be properly removed and immediately replaced, without the need to call Room:Update.</p>","tags":["Class"]},{"location":"Room.html#savestate","title":"SaveState ()","text":"","tags":["Class"]},{"location":"Room.html#void-savestate","title":"void SaveState ( )","text":"<p>Saves the current state of the room</p>","tags":["Class"]},{"location":"Room.html#setbackdroptype","title":"SetBackdropType ()","text":"","tags":["Class"]},{"location":"Room.html#void-setbackdroptype-backdroptype-int-unknown","title":"void SetBackdropType ( BackdropType, int Unknown )","text":"<p>This function will not work if the Unknown integer is passed as <code>0</code>.</p> <p>The backdrop variant chosen is seeded based on the room, and does not persist when leaving and re-entering. Calling this function again on re-entry will result in the same backdrop variant as before.</p>","tags":["Class"]},{"location":"Room.html#setgreedwavetimer","title":"SetGreedWaveTimer ()","text":"","tags":["Class"]},{"location":"Room.html#void-setgreedwavetimer-int-time","title":"void SetGreedWaveTimer ( int Time )","text":"","tags":["Class"]},{"location":"Room.html#setitempool","title":"SetItemPool ()","text":"","tags":["Class"]},{"location":"Room.html#void-setitempool-itempooltype-pooltype","title":"void SetItemPool ( ItemPoolType PoolType )","text":"<p>Sets the pool to use when the game needs to generate random collectibles in the current room. This takes priority over the game's regular pool selection code. Can be set to <code>ItemPoolType.POOL_NULL</code> to let the game handle pool selection. This is reset every room transition.</p>","tags":["Class"]},{"location":"Room.html#setlavaintensity","title":"SetLavaIntensity ()","text":"","tags":["Class"]},{"location":"Room.html#void-setlavaintensity-float-intensity","title":"void SetLavaIntensity ( float Intensity )","text":"<p>This primarily affects UpdateColorModifier (if <code>Process</code> is true, an orange glow is added based on the number of pits and lava intensity).</p>","tags":["Class"]},{"location":"Room.html#setlightningintensity","title":"SetLightningIntensity ()","text":"","tags":["Class"]},{"location":"Room.html#void-setlightningintensity-float-intensity","title":"void SetLightningIntensity ( float Intensity )","text":"<p>Sets the intensity of the lightning effect used in Downpour. This variable will affect the visibility of Wraiths.</p> <p>This is set by the game in a random range between <code>1.3</code> and <code>2.1</code>, and decays by <code>value * .75</code> per render.</p>","tags":["Class"]},{"location":"Room.html#setpausetimer","title":"SetPauseTimer ()","text":"","tags":["Class"]},{"location":"Room.html#void-setpausetimer-int-duration","title":"void SetPauseTimer ( int Duration )","text":"","tags":["Class"]},{"location":"Room.html#setrail","title":"SetRail ()","text":"","tags":["Class"]},{"location":"Room.html#void-setrail-int-gridindex-stbrailvariant-railvariant","title":"void SetRail ( int GridIndex, StbRailVariant RailVariant )","text":"","tags":["Class"]},{"location":"Room.html#setrainintensity","title":"SetRainIntensity ()","text":"","tags":["Class"]},{"location":"Room.html#void-setrainintensity-float-intensity","title":"void SetRainIntensity ( float Intensity )","text":"<p>Used by the positional rain effect spawners in Downpour. No noticable effect beyond <code>1.0</code>.</p>","tags":["Class"]},{"location":"Room.html#setroomcleardelay","title":"SetRoomClearDelay ()","text":"","tags":["Class"]},{"location":"Room.html#void-setroomcleardelay-int-delay","title":"void SetRoomClearDelay ( int Delay )","text":"","tags":["Class"]},{"location":"Room.html#setwateramount","title":"SetWaterAmount ()","text":"","tags":["Class"]},{"location":"Room.html#void-setwateramount-float-amount","title":"void SetWaterAmount ( float Amount )","text":"<p>Sets the amount of water that should be in the current room. Vanilla typically uses <code>0</code> for no water and <code>1</code> for water. You can technically go higher than this for some interesting results.</p>","tags":["Class"]},{"location":"Room.html#setwatercolor","title":"SetWaterColor ()","text":"","tags":["Class"]},{"location":"Room.html#void-setwatercolor-kcolor-watercolor","title":"void SetWaterColor ( KColor WaterColor )","text":"","tags":["Class"]},{"location":"Room.html#setwatercolormultiplier","title":"SetWaterColorMultiplier ()","text":"","tags":["Class"]},{"location":"Room.html#void-setwatercolormultiplier-kcolor-watercolor","title":"void SetWaterColorMultiplier ( KColor WaterColor )","text":"","tags":["Class"]},{"location":"Room.html#setwatercurrent","title":"SetWaterCurrent ()","text":"","tags":["Class"]},{"location":"Room.html#void-setwatercurrent-vector-watercurrent","title":"void SetWaterCurrent ( Vector WaterCurrent )","text":"<p>Sets the strength of the water current in the room. Current sounds and particles are automatically handled.</p> <p>The game typically uses <code>1</code> or <code>-1</code> for its values depending on current strength and direction. You can technically go higher than this for some interesting results. Arbitrary directions are fully supported as well.</p> <p><code>Vector(0, 0)</code> will remove the current.</p>","tags":["Class"]},{"location":"Room.html#trygetshopdiscount","title":"TryGetShopDiscount ()","text":"","tags":["Class"]},{"location":"Room.html#int-trygetshopdiscount-int-shopitemidx-int-price","title":"int TryGetShopDiscount ( int ShopItemIdx, int Price )","text":"","tags":["Class"]},{"location":"Room.html#updatecolormodifier","title":"UpdateColorModifier ()","text":"","tags":["Class"]},{"location":"Room.html#void-updatecolormodifier-boolean-process-true-boolean-lerp-true-float-rate-0015","title":"void UpdateColorModifier ( boolean Process = true, boolean Lerp = true, float Rate = 0.015 )","text":"<p>Updates the room's color correction with the copy of ColorModifier stored in FXParams. <code>Process</code> runs the color correction through some additional modifications for lava and the abandoned mineshaft sequence.</p>","tags":["Class"]},{"location":"RoomConfig.html","title":"Global Class \"RoomConfig\"","text":"Info <p>You can get this class by using the RoomConfig global table.</p> <p>Note that to call these functions, you must use a <code>.</code> (period) instead of a <code>:</code> (colon)!</p> Example Code <pre><code>local roomConfigStage = RoomConfig.GetStage(StbType.BASEMENT)\n</code></pre>","tags":["Global","Class"]},{"location":"RoomConfig.html#functions","title":"Functions","text":"","tags":["Global","Class"]},{"location":"RoomConfig.html#getstage","title":"GetStage ()","text":"","tags":["Global","Class"]},{"location":"RoomConfig.html#roomconfigstage-getstage-stbtype-stage","title":"RoomConfigStage GetStage ( StbType Stage )","text":"","tags":["Global","Class"]},{"location":"RoomConfigHolder.html","title":"Class \"RoomConfigHolder\"","text":"Info <p>You can get this class by using the RoomConfigHolder global table.</p> Example Code <pre><code>local roomconf = RoomConfigHolder.GetRoomByStageTypeAndVariant (StbType.BASEMENT,RoomType.ROOM_DEFAULT,1,0)\n</code></pre>","tags":["Class"]},{"location":"RoomConfigHolder.html#functions","title":"Functions","text":"","tags":["Class"]},{"location":"RoomConfigHolder.html#getrandomroom","title":"GetRandomRoom ()","text":"","tags":["Class"]},{"location":"RoomConfigHolder.html#roomconfigroom-getrandomroom-int-seed-boolean-reduceweight-stbtype-stage-roomtype-type-roomshape-shape-roomshapenum_roomshapes-int-minvariant-0-int-maxvariant-1-int-mindifficulty-0-int-maxdifficulty-10-int-requireddoors-0-int-subtype-1-int-mode-1","title":"RoomConfigRoom GetRandomRoom ( int Seed, boolean ReduceWeight, StbType Stage, RoomType Type, RoomShape Shape = RoomShape.NUM_ROOMSHAPES, int MinVariant = 0, int MaxVariant = -1, int MinDifficulty = 0, int MaxDifficulty = 10, int RequiredDoors = 0, int Subtype = -1, int Mode = -1 )","text":"<p>Returns a RoomConfigRoom corresponding to the given params.</p>","tags":["Class"]},{"location":"RoomConfigHolder.html#getroombystagetypeandvariant","title":"GetRoomByStageTypeAndVariant ()","text":"","tags":["Class"]},{"location":"RoomConfigHolder.html#roomconfigroom-getroombystagetypeandvariant-stbtype-stage-roomtype-type-int-variant-int-mode-1","title":"RoomConfigRoom GetRoomByStageTypeAndVariant ( StbType Stage, RoomType Type, int Variant, int Mode = -1 )","text":"<p>Returns a RoomConfigRoom corresponding to the given params.</p>","tags":["Class"]},{"location":"RoomConfigRoom.html","title":"Class \"RoomConfigRoom\"","text":"","tags":["Class"]},{"location":"RoomConfigRoom.html#modified-variables","title":"Modified Variables","text":"","tags":["Class"]},{"location":"RoomConfigRoom.html#mode","title":"Mode","text":"","tags":["Class"]},{"location":"RoomConfigRoom.html#const-int-mode","title":"const int Mode","text":"<p>Same as default, but now returns a proper integer value instead of userdata.</p>","tags":["Class"]},{"location":"RoomConfigStage.html","title":"Class \"RoomConfigStage\"","text":"Info <p>You can get this class by using the following function:</p> <ul> <li>RoomConfig.GetStage()</li> </ul> Example Code <pre><code>local roomConfigStage = RoomConfig.GetStage(StbType.BASEMENT)\n</code></pre>","tags":["Class"]},{"location":"RoomConfigStage.html#functions","title":"Functions","text":"","tags":["Class"]},{"location":"RoomConfigStage.html#getbackdrop","title":"GetBackdrop ()","text":"","tags":["Class"]},{"location":"RoomConfigStage.html#backdroptype-getbackdrop","title":"BackdropType GetBackdrop ( )","text":"<p>Returns the <code>BackdropType</code> used in default rooms on the stage.</p>","tags":["Class"]},{"location":"RoomConfigStage.html#getbossspot","title":"GetBossSpot ()","text":"","tags":["Class"]},{"location":"RoomConfigStage.html#string-getbossspot","title":"string GetBossSpot ( )","text":"<p>Returns the sprite path for the boss spot used in the boss intro.</p>","tags":["Class"]},{"location":"RoomConfigStage.html#getdisplayname","title":"GetDisplayName ()","text":"","tags":["Class"]},{"location":"RoomConfigStage.html#string-getdisplayname","title":"string GetDisplayName ( )","text":"<p>Returns the name of the stage.</p>","tags":["Class"]},{"location":"RoomConfigStage.html#getmusic","title":"GetMusic ()","text":"","tags":["Class"]},{"location":"RoomConfigStage.html#music-getmusic","title":"Music GetMusic ( )","text":"<p>Returns the <code>Music</code> used in default rooms on the stage.</p>","tags":["Class"]},{"location":"RoomConfigStage.html#getplayerspot","title":"GetPlayerSpot ()","text":"","tags":["Class"]},{"location":"RoomConfigStage.html#string-getplayerspot","title":"string GetPlayerSpot ( )","text":"<p>Returns the sprite path for the player spot used in the boss intro and nightmare transition.</p>","tags":["Class"]},{"location":"RoomConfigStage.html#getroomset","title":"GetRoomSet ()","text":"","tags":["Class"]},{"location":"RoomConfigStage.html#roomconfigset-getroomset-int-mode","title":"RoomConfigSet GetRoomSet ( int Mode )","text":"<p>Returns a RoomConfigSet, which contains every RoomConfigRoom in the stage.</p> <p><code>Mode</code> is <code>0</code> for Normal Mode, <code>1</code> for Greed Mode</p>","tags":["Class"]},{"location":"RoomConfigStage.html#getsuffix","title":"GetSuffix ()","text":"","tags":["Class"]},{"location":"RoomConfigStage.html#string-getsuffix","title":"string GetSuffix ( )","text":"<p>Returns the suffix used by the stage for stage-unique sprites, such as the boss/player spot and unique variants for enemies.</p>","tags":["Class"]},{"location":"RoomConfigStage.html#setbackdrop","title":"SetBackdrop ()","text":"","tags":["Class"]},{"location":"RoomConfigStage.html#void-setbackdrop-backdroptype-backdrop","title":"void SetBackdrop ( BackdropType Backdrop )","text":"<p>Sets the <code>BackdropType</code> used in default rooms on the stage.</p>","tags":["Class"]},{"location":"RoomConfigStage.html#setbossspot","title":"SetBossSpot ()","text":"","tags":["Class"]},{"location":"RoomConfigStage.html#void-setbossspot-string-pngfilename","title":"void SetBossSpot ( string PngFilename )","text":"<p>Sets the sprite path for the boss spot used in the boss intro.</p>","tags":["Class"]},{"location":"RoomConfigStage.html#setdisplayname","title":"SetDisplayName ()","text":"","tags":["Class"]},{"location":"RoomConfigStage.html#void-setdisplayname-string-name","title":"void SetDisplayName ( string Name )","text":"<p>Sets the name of the stage.</p>","tags":["Class"]},{"location":"RoomConfigStage.html#setmusic","title":"SetMusic ()","text":"","tags":["Class"]},{"location":"RoomConfigStage.html#void-setmusic-music-music","title":"void SetMusic ( Music Music )","text":"<p>Sets the <code>Music</code> used in default rooms on the stage.</p>","tags":["Class"]},{"location":"RoomConfigStage.html#setplayerspot","title":"SetPlayerSpot ()","text":"","tags":["Class"]},{"location":"RoomConfigStage.html#void-setplayerspot-string-pngfilename","title":"void SetPlayerSpot ( string PngFilename )","text":"<p>Sets the sprite path for the player spot used in the boss intro and nightmare transition.</p>","tags":["Class"]},{"location":"RoomConfigStage.html#setsuffix","title":"SetSuffix ()","text":"","tags":["Class"]},{"location":"RoomConfigStage.html#void-setsuffix-string-suffix","title":"void SetSuffix ( string Suffix )","text":"<p>Sets the suffix used by the stage for stage-unique sprites, such as the boss/player spot and unique variants for enemies.</p>","tags":["Class"]},{"location":"RoomDescriptor.html","title":"Class \"RoomDescriptor\"","text":"","tags":["Class"]},{"location":"RoomDescriptor.html#modified-variables","title":"Modified Variables","text":"","tags":["Class"]},{"location":"RoomDescriptor.html#alloweddoors","title":"AllowedDoors","text":"","tags":["Class"]},{"location":"RoomDescriptor.html#doorset-alloweddoors","title":"DoorSet AllowedDoors","text":"<p>Now properly returns a value.</p> <p>Returns a bitmask corresponding to which door slots are currently enabled.</p> <p>Doors are typically only included in this bitmask when there is a door currently present, even if the room would allow a door in that slot.</p> Example <p>This tests if the DoorSlot <code>LEFT0</code> is enabled. <pre><code>if roomDesc.AllowedDoors &amp; (1 &lt;&lt; DoorSlot.LEFT0) ~= 0 then\n    print(\"Room has a door in slot LEFT0\")\nend\n</code></pre></p>","tags":["Class"]},{"location":"RoomDescriptor.html#functions","title":"Functions","text":"","tags":["Class"]},{"location":"RoomDescriptor.html#addrestrictedgridindex","title":"AddRestrictedGridIndex ()","text":"","tags":["Class"]},{"location":"RoomDescriptor.html#void-addrestrictedgridindex-int-gridindex","title":"void AddRestrictedGridIndex ( int GridIndex )","text":"","tags":["Class"]},{"location":"RoomDescriptor.html#getdimension","title":"GetDimension ()","text":"","tags":["Class"]},{"location":"RoomDescriptor.html#dimension-getdimension","title":"Dimension GetDimension ( )","text":"<p>Returns the Dimension that this room exists in.</p>","tags":["Class"]},{"location":"RoomDescriptor.html#getentitiessavestate","title":"GetEntitiesSaveState ()","text":"","tags":["Class"]},{"location":"RoomDescriptor.html#entitiessavestatevector-getentitiessavestate","title":"EntitiesSaveStateVector GetEntitiesSaveState ( )","text":"","tags":["Class"]},{"location":"RoomDescriptor.html#getgridentitiessavestate","title":"GetGridEntitiesSaveState ()","text":"","tags":["Class"]},{"location":"RoomDescriptor.html#gridentitiessavestatevector-getgridentitiessavestate","title":"GridEntitiesSaveStateVector GetGridEntitiesSaveState ( )","text":"","tags":["Class"]},{"location":"RoomDescriptor.html#getneighboringrooms","title":"GetNeighboringRooms ()","text":"","tags":["Class"]},{"location":"RoomDescriptor.html#table-getneighboringrooms","title":"table GetNeighboringRooms ( )","text":"<p>Returns a table that maps DoorSlot to RoomDescriptor for all of the current neighbors of this room.</p> <p>Don't use <code>ipairs</code> to iterate over this, use <code>pairs</code>!</p> Example Code <pre><code>-- Returns true if the room has a neighboring secret room.\nlocal function HasSecretRoomNeighbor(roomDesc)\n    for doorSlot, neighborDesc in pairs(roomDesc:GetNeighboringRooms()) do\n        local roomType = neighborDesc.Data.Type\n        if roomType == RoomType.ROOM_SECRET or roomType == RoomType.ROOM_SUPERSECRET or roomType == RoomType.ROOM_ULTRASECRET then\n            return true\n        end\n    end\n    return false\nend\n</code></pre>","tags":["Class"]},{"location":"RoomDescriptor.html#getrestrictedgridindexes","title":"GetRestrictedGridIndexes ()","text":"","tags":["Class"]},{"location":"RoomDescriptor.html#int-getrestrictedgridindexes","title":"int[] GetRestrictedGridIndexes ( )","text":"","tags":["Class"]},{"location":"RoomDescriptor.html#initseeds","title":"InitSeeds ()","text":"","tags":["Class"]},{"location":"RoomDescriptor.html#void-initseeds-rng-rng","title":"void InitSeeds ( RNG RNG )","text":"","tags":["Class"]},{"location":"RoomDescriptor.html#variables","title":"Variables","text":"","tags":["Class"]},{"location":"RoomDescriptor.html#bossdeathseed","title":"BossDeathSeed","text":"","tags":["Class"]},{"location":"RoomDescriptor.html#const-int-bossdeathseed","title":"const int BossDeathSeed","text":"","tags":["Class"]},{"location":"RoomDescriptor.html#doors","title":"Doors","text":"","tags":["Class"]},{"location":"RoomDescriptor.html#const-int-doors","title":"const int[] Doors","text":"<p>Allows you to check which level grid index each DoorSlot in the room connects to.</p> <p>For example, <code>roomdesc.Doors[DoorSlot.UP0]</code> provides the level grid index that the upwards door would connect to.</p> <p>The value will be <code>-1</code> if the RoomShape does not allow a door in that slot.</p> <p>Note that this typically provides a valid index even if there is no door present, and even if the room itself does not allow a door in that slot.</p>","tags":["Class"]},{"location":"RoomTransition.html","title":"Global Class \"RoomTransition\"","text":"Info <p>You can get this class by using the <code>RoomTransition</code> global table.</p> <p>Note that to call these functions, you must use a <code>.</code> (period) instead of a <code>:</code> (colon)!</p> Example Code <pre><code>local tmode = RoomTransition.GetTransitionMode()\n</code></pre>","tags":["Global","Class"]},{"location":"RoomTransition.html#functions","title":"Functions","text":"","tags":["Global","Class"]},{"location":"RoomTransition.html#getplayerextraportraitsprite","title":"GetPlayerExtraPortraitSprite ()","text":"","tags":["Global","Class"]},{"location":"RoomTransition.html#sprite-getplayerextraportraitsprite","title":"Sprite GetPlayerExtraPortraitSprite ( )","text":"","tags":["Global","Class"]},{"location":"RoomTransition.html#gettransitionmode","title":"GetTransitionMode ()","text":"","tags":["Global","Class"]},{"location":"RoomTransition.html#int-gettransitionmode","title":"int GetTransitionMode ( )","text":"","tags":["Global","Class"]},{"location":"RoomTransition.html#getversusscreensprite","title":"GetVersusScreenSprite ()","text":"","tags":["Global","Class"]},{"location":"RoomTransition.html#sprite-getversusscreensprite","title":"Sprite GetVersusScreenSprite ( )","text":"","tags":["Global","Class"]},{"location":"RoomTransition.html#isrenderingbossintro","title":"IsRenderingBossIntro ()","text":"","tags":["Global","Class"]},{"location":"RoomTransition.html#boolean-isrenderingbossintro","title":"boolean IsRenderingBossIntro ( )","text":"","tags":["Global","Class"]},{"location":"RoomTransition.html#startbossintro","title":"StartBossIntro ()","text":"","tags":["Global","Class"]},{"location":"RoomTransition.html#void-startbossintro-bosstype-bossid1-bosstype-bossid2-0","title":"void StartBossIntro ( BossType BossID1, BossType BossID2 = 0 )","text":"","tags":["Global","Class"]},{"location":"ScoreSheet.html","title":"Global Class \"ScoreSheet\"","text":"Info <p>You can get this class by using the <code>ScoreSheet</code> global table.</p> <p>Note that to call these functions, you must use a <code>.</code> (period) instead of a <code>:</code> (colon)!</p> Example Code <pre><code>local bonus = ScoreSheet.GetBlueBabyBonus()\n</code></pre>","tags":["Global","Class"]},{"location":"ScoreSheet.html#functions","title":"Functions","text":"","tags":["Global","Class"]},{"location":"ScoreSheet.html#addfinishedstage","title":"AddFinishedStage ()","text":"","tags":["Global","Class"]},{"location":"ScoreSheet.html#void-addfinishedstage-int-stage-int-stagetype-int-time","title":"void AddFinishedStage ( int Stage, int StageType, int Time )","text":"","tags":["Global","Class"]},{"location":"ScoreSheet.html#calculate","title":"Calculate ()","text":"","tags":["Global","Class"]},{"location":"ScoreSheet.html#void-calculate","title":"void Calculate ( )","text":"","tags":["Global","Class"]},{"location":"ScoreSheet.html#getbluebabybonus","title":"GetBlueBabyBonus ()","text":"","tags":["Global","Class"]},{"location":"ScoreSheet.html#int-getbluebabybonus","title":"int GetBlueBabyBonus ( )","text":"","tags":["Global","Class"]},{"location":"ScoreSheet.html#getdamagepenalty","title":"GetDamagePenalty ()","text":"","tags":["Global","Class"]},{"location":"ScoreSheet.html#int-getdamagepenalty","title":"int GetDamagePenalty ( )","text":"","tags":["Global","Class"]},{"location":"ScoreSheet.html#getexplorationbonus","title":"GetExplorationBonus ()","text":"","tags":["Global","Class"]},{"location":"ScoreSheet.html#int-getexplorationbonus","title":"int GetExplorationBonus ( )","text":"","tags":["Global","Class"]},{"location":"ScoreSheet.html#getitempenalty","title":"GetItemPenalty ()","text":"","tags":["Global","Class"]},{"location":"ScoreSheet.html#int-getitempenalty","title":"int GetItemPenalty ( )","text":"","tags":["Global","Class"]},{"location":"ScoreSheet.html#getlambbonus","title":"GetLambBonus ()","text":"","tags":["Global","Class"]},{"location":"ScoreSheet.html#int-getlambbonus","title":"int GetLambBonus ( )","text":"","tags":["Global","Class"]},{"location":"ScoreSheet.html#getmegasatanbonus","title":"GetMegaSatanBonus ()","text":"","tags":["Global","Class"]},{"location":"ScoreSheet.html#int-getmegasatanbonus","title":"int GetMegaSatanBonus ( )","text":"","tags":["Global","Class"]},{"location":"ScoreSheet.html#getrunending","title":"GetRunEnding ()","text":"","tags":["Global","Class"]},{"location":"ScoreSheet.html#ending-getrunending","title":"Ending GetRunEnding ( )","text":"","tags":["Global","Class"]},{"location":"ScoreSheet.html#getruntime","title":"GetRunTime ()","text":"","tags":["Global","Class"]},{"location":"ScoreSheet.html#int-getruntime","title":"int GetRunTime ( )","text":"","tags":["Global","Class"]},{"location":"ScoreSheet.html#getruntimelevel","title":"GetRunTimeLevel ()","text":"","tags":["Global","Class"]},{"location":"ScoreSheet.html#levelstage-getruntimelevel","title":"LevelStage GetRunTimeLevel ( )","text":"","tags":["Global","Class"]},{"location":"ScoreSheet.html#getruntimeleveltype","title":"GetRunTimeLevelType ()","text":"","tags":["Global","Class"]},{"location":"ScoreSheet.html#stagetype-getruntimeleveltype","title":"StageType GetRunTimeLevelType ( )","text":"","tags":["Global","Class"]},{"location":"ScoreSheet.html#getrushbonus","title":"GetRushBonus ()","text":"","tags":["Global","Class"]},{"location":"ScoreSheet.html#int-getrushbonus","title":"int GetRushBonus ( )","text":"","tags":["Global","Class"]},{"location":"ScoreSheet.html#getschwagbonus","title":"GetSchwagBonus ()","text":"","tags":["Global","Class"]},{"location":"ScoreSheet.html#int-getschwagbonus","title":"int GetSchwagBonus ( )","text":"","tags":["Global","Class"]},{"location":"ScoreSheet.html#getstagebonus","title":"GetStageBonus ()","text":"","tags":["Global","Class"]},{"location":"ScoreSheet.html#int-getstagebonus","title":"int GetStageBonus ( )","text":"","tags":["Global","Class"]},{"location":"ScoreSheet.html#gettimepenalty","title":"GetTimePenalty ()","text":"","tags":["Global","Class"]},{"location":"ScoreSheet.html#int-gettimepenalty","title":"int GetTimePenalty ( )","text":"","tags":["Global","Class"]},{"location":"ScoreSheet.html#gettotalscore","title":"GetTotalScore ()","text":"","tags":["Global","Class"]},{"location":"ScoreSheet.html#int-gettotalscore","title":"int GetTotalScore ( )","text":"","tags":["Global","Class"]},{"location":"ScoreSheet.html#setrunending","title":"SetRunEnding ()","text":"","tags":["Global","Class"]},{"location":"ScoreSheet.html#void-setrunending-ending-endingid","title":"void SetRunEnding ( Ending EndingID )","text":"","tags":["Global","Class"]},{"location":"Sprite.html","title":"Class \"Sprite\"","text":"","tags":["Class"]},{"location":"Sprite.html#modified-constructors","title":"Modified Constructors","text":"","tags":["Class"]},{"location":"Sprite.html#sprite","title":"Sprite ()","text":"","tags":["Class"]},{"location":"Sprite.html#spritebool-sprite-string-anm2path-bool-loadgraphics-true","title":"Sprite,bool Sprite ( string ANM2Path, bool LoadGraphics = true )","text":"<p>Added two optional arguments, the function now returns two values: Sprite object and the bool signifying whether the sprite was loaded successfully or not.</p>","tags":["Class"]},{"location":"Sprite.html#modified-functions","title":"Modified Functions","text":"","tags":["Class"]},{"location":"Sprite.html#replacespritesheet","title":"ReplaceSpritesheet ()","text":"","tags":["Class"]},{"location":"Sprite.html#void-replacespritesheet-int-layerid-string-pngfilename-boolean-loadgraphics-false","title":"void ReplaceSpritesheet ( int LayerId, string PngFilename, boolean LoadGraphics = false )","text":"<p>Now accepts an optional <code>bool</code> to determine if Sprite:LoadGraphics should be called after replacing the spritesheet. In most cases, you'll want to do this.</p>","tags":["Class"]},{"location":"Sprite.html#setoverlayframe","title":"SetOverlayFrame ()","text":"","tags":["Class"]},{"location":"Sprite.html#void-setoverlayframe-int-framenum","title":"void SetOverlayFrame ( int FrameNum )","text":"<p>New overload for <code>SetOverlayFrame()</code> that sets the frame for the current animation without stopping it, akin to the one for <code>SetFrame()</code>.</p>","tags":["Class"]},{"location":"Sprite.html#stop","title":"Stop ()","text":"","tags":["Class"]},{"location":"Sprite.html#void-stop-boolean-stopoverlay-true","title":"void Stop ( boolean StopOverlay = true )","text":"<p>Now accepts an optional <code>bool</code> for whether to also stop the overlay animation. Defaults to true.</p>","tags":["Class"]},{"location":"Sprite.html#functions","title":"Functions","text":"","tags":["Class"]},{"location":"Sprite.html#clearcustomchampionshader","title":"ClearCustomChampionShader ()","text":"","tags":["Class"]},{"location":"Sprite.html#void-clearcustomchampionshader","title":"void ClearCustomChampionShader ( )","text":"<p>Removes any custom <code>coloroffset_champion</code> shader applied by <code>sprite:SetCustomChampionShader(path)</code>.</p>","tags":["Class"]},{"location":"Sprite.html#clearcustomshader","title":"ClearCustomShader ()","text":"","tags":["Class"]},{"location":"Sprite.html#void-clearcustomshader","title":"void ClearCustomShader ( )","text":"<p>Removes any custom <code>coloroffset</code> shader applied by <code>sprite:SetCustomShader(path)</code>.</p>","tags":["Class"]},{"location":"Sprite.html#continue","title":"Continue ()","text":"","tags":["Class"]},{"location":"Sprite.html#void-continue-boolean-continueoverlay-true","title":"void Continue ( boolean ContinueOverlay = true )","text":"<p>If the animation is currently stopped, makes it start playing again from the current frame. Will not restart a finished, non-looping animation.</p>","tags":["Class"]},{"location":"Sprite.html#continueoverlay","title":"ContinueOverlay ()","text":"","tags":["Class"]},{"location":"Sprite.html#void-continueoverlay","title":"void ContinueOverlay ( )","text":"<p>Same as above, but only for the overlay animation.</p>","tags":["Class"]},{"location":"Sprite.html#getallanimationdata","title":"GetAllAnimationData ()","text":"","tags":["Class"]},{"location":"Sprite.html#animationdata-getallanimationdata","title":"AnimationData[] GetAllAnimationData ( )","text":"<p>Returns a table of AnimationData representing all animations in this anm2 file.</p>","tags":["Class"]},{"location":"Sprite.html#getalllayers","title":"GetAllLayers ()","text":"","tags":["Class"]},{"location":"Sprite.html#layerstates-getalllayers","title":"LayerStates[] GetAllLayers ( )","text":"<p>Returns a table of all LayerStates in this Sprite.</p>","tags":["Class"]},{"location":"Sprite.html#getanimationdata","title":"GetAnimationData ()","text":"","tags":["Class"]},{"location":"Sprite.html#animationdata-getanimationdata-string-animationname","title":"AnimationData GetAnimationData ( string AnimationName )","text":"","tags":["Class"]},{"location":"Sprite.html#getcurrentanimationdata","title":"GetCurrentAnimationData ()","text":"","tags":["Class"]},{"location":"Sprite.html#animationdata-getcurrentanimationdata","title":"AnimationData GetCurrentAnimationData ( )","text":"","tags":["Class"]},{"location":"Sprite.html#getlayer","title":"GetLayer ()","text":"","tags":["Class"]},{"location":"Sprite.html#layerstate-getlayer-int-layerid","title":"LayerState GetLayer ( int LayerId )","text":"","tags":["Class"]},{"location":"Sprite.html#layerstate-getlayer-string-layername","title":"LayerState GetLayer ( string LayerName )","text":"<p>Returns the layer data from the provided layer id.</p>","tags":["Class"]},{"location":"Sprite.html#getlayerframedata","title":"GetLayerFrameData ()","text":"","tags":["Class"]},{"location":"Sprite.html#animationframe-getlayerframedata-int-layer","title":"AnimationFrame GetLayerFrameData ( int Layer )","text":"<p>Returns the AnimationFrame currently being displayed on the specified layer.</p>","tags":["Class"]},{"location":"Sprite.html#getnullframe","title":"GetNullFrame ()","text":"","tags":["Class"]},{"location":"Sprite.html#nullframe-getnullframe-string-layername","title":"NullFrame GetNullFrame ( string LayerName )","text":"<p>Returns the NullFrame from the provided layer name.</p>","tags":["Class"]},{"location":"Sprite.html#getoverlayanimationdata","title":"GetOverlayAnimationData ()","text":"","tags":["Class"]},{"location":"Sprite.html#animationdata-getoverlayanimationdata","title":"AnimationData GetOverlayAnimationData ( )","text":"<p>Returns the AnimationData of the currently playing overlay.</p>","tags":["Class"]},{"location":"Sprite.html#getoverlaylayerframedata","title":"GetOverlayLayerFrameData ()","text":"","tags":["Class"]},{"location":"Sprite.html#animationframe-getoverlaylayerframedata-int-layer","title":"AnimationFrame GetOverlayLayerFrameData ( int Layer )","text":"<p>Returns the AnimationFrame currently being displayed on the specified layer of the overlay animation.</p>","tags":["Class"]},{"location":"Sprite.html#getoverlaynullframe","title":"GetOverlayNullFrame ()","text":"","tags":["Class"]},{"location":"Sprite.html#nullframe-getoverlaynullframe-string-layername","title":"NullFrame GetOverlayNullFrame ( string LayerName )","text":"<p>Returns the NullFrame from the provided layer name of the overlay animation.</p>","tags":["Class"]},{"location":"Sprite.html#getrenderflags","title":"GetRenderFlags ()","text":"","tags":["Class"]},{"location":"Sprite.html#animrenderflags-getrenderflags","title":"AnimRenderFlags GetRenderFlags ( )","text":"","tags":["Class"]},{"location":"Sprite.html#hascustomchampionshader","title":"HasCustomChampionShader ()","text":"","tags":["Class"]},{"location":"Sprite.html#boolean-hascustomchampionshader-string-shaderpath","title":"boolean HasCustomChampionShader ( string ShaderPath )","text":"<p>Returns true if the specified custom champion shader is currently loaded (see <code>SetCustomChampionShader</code> below). If no string is provided, returns true if ANY custom champion shader is applied.</p>","tags":["Class"]},{"location":"Sprite.html#hascustomshader","title":"HasCustomShader ()","text":"","tags":["Class"]},{"location":"Sprite.html#boolean-hascustomshader-string-shaderpath","title":"boolean HasCustomShader ( string ShaderPath )","text":"<p>Returns true if the specified custom shader is currently loaded (see <code>SetCustomShader</code> below). If no string is provided, returns true if ANY custom shader is applied.</p>","tags":["Class"]},{"location":"Sprite.html#isoverlayeventtriggered","title":"IsOverlayEventTriggered ()","text":"","tags":["Class"]},{"location":"Sprite.html#boolean-isoverlayeventtriggered-string-eventname","title":"boolean IsOverlayEventTriggered ( string EventName )","text":"<p>Returns <code>true</code> if the currently playing overlay animation just reached the event with the provided name.</p>","tags":["Class"]},{"location":"Sprite.html#setcustomchampionshader","title":"SetCustomChampionShader ()","text":"","tags":["Class"]},{"location":"Sprite.html#void-setcustomchampionshader-string-shaderpath","title":"void SetCustomChampionShader ( string ShaderPath )","text":"<p>Specify a custom champion shader file for this Sprite to use instead of the usual <code>coloroffset_champion</code> shader. Provided path is expected to start at <code>.../resources/</code> and to find both a .vs and .fs file at that location. For example: <code>sprite:SetCustomChampionShader(\"shaders/my_shader\")</code> will load <code>.../resources/shaders/my_shader.vs</code> and <code>.../resources/shaders/my_shader.fs</code>.</p> <p>The custom champion shader will only be used by the game if the entity is actually a champion.</p> <p>Note that the custom shader must take the exact same inputs as the default <code>coloroffset_champion</code> shader the game uses (it has one additional input compared to <code>coloroffset</code>).</p> <p>You can also set a per-layer shader via LayerState.</p>","tags":["Class"]},{"location":"Sprite.html#setcustomshader","title":"SetCustomShader ()","text":"","tags":["Class"]},{"location":"Sprite.html#void-setcustomshader-string-shaderpath","title":"void SetCustomShader ( string ShaderPath )","text":"<p>Specify a custom shader file for this Sprite to use instead of the default <code>coloroffset</code> shader. Provided path is expected to start at <code>.../resources/</code> and to find both a .vs and .fs file at that location. For example: <code>sprite:SetCustomShader(\"shaders/my_shader\")</code> will load <code>.../resources/shaders/my_shader.vs</code> and <code>.../resources/shaders/my_shader.fs</code>.</p> <p>This custom shader will not be used by the game if the entity is a champion, or if it has the gold/dogma shader applied.</p> <p>Note that the custom shader must take the exact same inputs as the default <code>coloroffset</code> shader the game uses. The gold and dogma shaders also use the same inputs, and can be a good reference.</p> <p>You can also set a per-layer shader via LayerState.</p>","tags":["Class"]},{"location":"Sprite.html#setoverlaylayerframe","title":"SetOverlayLayerFrame ()","text":"","tags":["Class"]},{"location":"Sprite.html#void-setoverlaylayerframe-int-layer-int-frame","title":"void SetOverlayLayerFrame ( int Layer, int Frame )","text":"","tags":["Class"]},{"location":"Sprite.html#setrenderflags","title":"SetRenderFlags ()","text":"","tags":["Class"]},{"location":"Sprite.html#void-setrenderflags-animrenderflags-flags","title":"void SetRenderFlags ( AnimRenderFlags Flags )","text":"","tags":["Class"]},{"location":"Sprite.html#stopoverlay","title":"StopOverlay ()","text":"","tags":["Class"]},{"location":"Sprite.html#void-stopoverlay","title":"void StopOverlay ( )","text":"","tags":["Class"]},{"location":"Sprite.html#wasoverlayeventtriggered","title":"WasOverlayEventTriggered ()","text":"","tags":["Class"]},{"location":"Sprite.html#boolean-wasoverlayeventtriggered-string-eventname","title":"boolean WasOverlayEventTriggered ( string EventName )","text":"","tags":["Class"]},{"location":"StageTransition.html","title":"Global Class \"StageTransition\"","text":"Info <p>This class gives access to data exclusive to the stage transition screen.</p> <p>Please note that the <code>StageTransition</code> is only used to configure how the stage transition plays. If you want to manipulate the content of the screen during a stage transition, you need to use the NightmareScene class.</p> <p>You can get this class by using the <code>StageTransition</code> global table.</p> <p>Note that to call these functions, you must use a <code>.</code> (period) instead of a <code>:</code> (colon)!</p> Example Code <pre><code>local samestage = StageTransition.GetSameStage()\n</code></pre>","tags":["Global","Class"]},{"location":"StageTransition.html#functions","title":"Functions","text":"","tags":["Global","Class"]},{"location":"StageTransition.html#getsamestage","title":"GetSameStage ()","text":"","tags":["Global","Class"]},{"location":"StageTransition.html#boolean-getsamestage","title":"boolean GetSameStage ( )","text":"<p>Indicate if the stage transition screen will display Isaac's head moving from one stage to the other (<code>false</code>) or not (<code>true</code>).</p>","tags":["Global","Class"]},{"location":"StageTransition.html#setsamestage","title":"SetSameStage ()","text":"","tags":["Global","Class"]},{"location":"StageTransition.html#void-setsamestage-boolean-value","title":"void SetSameStage ( boolean Value )","text":"<p>Configure whether the stage transition will display Isaac's head moving from one stage to the other (<code>false</code>) or not (<code>true</code>).</p> <p>This function is useful if you want to move the player to the first stage, or want to repeat the last stage on the progress bar of the transition screen, and have it be less jarring. </p> <ul> <li>If transitioning back to the first floor, and <code>SameStage</code> is not set to <code>true</code>, Isaac's head will appear outside of the progress bar. Otherwise, Isaac's head will appear on the first floor.</li> <li>If repeating the last floor, and <code>SameStage</code> is not set to <code>true</code>, Isaac's head will move from the previous stage to the last one. Otherwise, Isaac's head will appear on the last floor.</li> </ul> Warning <p>Calling this method before the current stage transition has called <code>SetNextStage</code> will override the transition itself. This means that instead of merely displaying Isaac's head not moving, it will actually change whether the next stage will be a repeat of the current one, or the actual next stage. Ideally, you should use this function in the context of the <code>ModCallbacks.MC_PRE_LEVEL_SELECT</code> callback.</p>","tags":["Global","Class"]},{"location":"Vector.html","title":"Class \"Vector\"","text":"","tags":["Class"]},{"location":"Vector.html#operators","title":"Operators","text":"","tags":["Class"]},{"location":"Vector.html#__add","title":"__add ()","text":"","tags":["Class"]},{"location":"Vector.html#vector-__add-vector-right","title":"Vector __add ( Vector Right )","text":"<p>Fixed version of original function that prevents a crash when the left operant of the vector calculation is nil.</p> <p>Defines the Addition of two Vector objects using the <code>+</code> operator.</p>","tags":["Class"]},{"location":"Vector.html#__div","title":"__div ()","text":"","tags":["Class"]},{"location":"Vector.html#vector-__div-float-modifier","title":"Vector __div ( float Modifier )","text":"<p>Fixed version of original function that prevents a crash when the left operant of the vector calculation is nil.</p> <p>Defines the Division of two Vector objects using the <code>/</code> operator.</p>","tags":["Class"]},{"location":"Vector.html#__mul","title":"__mul ()","text":"","tags":["Class"]},{"location":"Vector.html#vector-__mul-float-modifier","title":"Vector __mul ( float Modifier )","text":"<p>Fixed version of original function that prevents a crash when the left operant of the vector calculation is nil.</p> <p>Defines the Multiplication of two Vector objects using the <code>*</code> operator.</p>","tags":["Class"]},{"location":"Vector.html#__sub","title":"__sub ()","text":"","tags":["Class"]},{"location":"Vector.html#vector-__sub-vector-right","title":"Vector __sub ( Vector Right )","text":"<p>Fixed version of original function that prevents a crash when the left operant of the vector calculation is nil.</p> <p>Defines the Subtraction of two Vector objects using the <code>-</code> operator.</p>","tags":["Class"]},{"location":"Vector.html#functions","title":"Functions","text":"","tags":["Class"]},{"location":"Vector.html#fromangle","title":"FromAngle ()","text":"","tags":["Class"]},{"location":"Vector.html#void-fromangle-float-angle","title":"void FromAngle ( float Angle )","text":"","tags":["Class"]},{"location":"Weapon.html","title":"Class \"Weapon\"","text":"Info <p>You can get this class by using the following functions:</p> <ul> <li>EntityPlayer:GetWeapon()</li> </ul> Example Code <pre><code>local weapon = Isaac.GetPlayer(0):GetWeapon(1)\n</code></pre>","tags":["Class"]},{"location":"Weapon.html#functions","title":"Functions","text":"","tags":["Class"]},{"location":"Weapon.html#clearitemanim","title":"ClearItemAnim ()","text":"","tags":["Class"]},{"location":"Weapon.html#void-clearitemanim-int-itemid","title":"void ClearItemAnim ( int ItemID )","text":"","tags":["Class"]},{"location":"Weapon.html#getcharge","title":"GetCharge ()","text":"","tags":["Class"]},{"location":"Weapon.html#int-getcharge","title":"int GetCharge ( )","text":"","tags":["Class"]},{"location":"Weapon.html#getdirection","title":"GetDirection ()","text":"","tags":["Class"]},{"location":"Weapon.html#vector-getdirection","title":"Vector GetDirection ( )","text":"","tags":["Class"]},{"location":"Weapon.html#getfiredelay","title":"GetFireDelay ()","text":"","tags":["Class"]},{"location":"Weapon.html#int-getfiredelay","title":"int GetFireDelay ( )","text":"","tags":["Class"]},{"location":"Weapon.html#getmaxfiredelay","title":"GetMaxFireDelay ()","text":"","tags":["Class"]},{"location":"Weapon.html#int-getmaxfiredelay","title":"int GetMaxFireDelay ( )","text":"","tags":["Class"]},{"location":"Weapon.html#getmodifiers","title":"GetModifiers ()","text":"","tags":["Class"]},{"location":"Weapon.html#weaponmodifier-getmodifiers","title":"WeaponModifier GetModifiers ( )","text":"","tags":["Class"]},{"location":"Weapon.html#getnumfired","title":"GetNumFired ()","text":"","tags":["Class"]},{"location":"Weapon.html#int-getnumfired","title":"int GetNumFired ( )","text":"","tags":["Class"]},{"location":"Weapon.html#getowner","title":"GetOwner ()","text":"","tags":["Class"]},{"location":"Weapon.html#entity-getowner","title":"Entity GetOwner ( )","text":"","tags":["Class"]},{"location":"Weapon.html#getweapontype","title":"GetWeaponType ()","text":"","tags":["Class"]},{"location":"Weapon.html#weapontype-getweapontype","title":"WeaponType GetWeaponType ( )","text":"","tags":["Class"]},{"location":"Weapon.html#isaxisaligned","title":"IsAxisAligned ()","text":"","tags":["Class"]},{"location":"Weapon.html#boolean-isaxisaligned","title":"boolean IsAxisAligned ( )","text":"","tags":["Class"]},{"location":"Weapon.html#isitemanimfinished","title":"IsItemAnimFinished ()","text":"","tags":["Class"]},{"location":"Weapon.html#boolean-isitemanimfinished-int-itemid","title":"boolean IsItemAnimFinished ( int ItemID )","text":"","tags":["Class"]},{"location":"Weapon.html#playitemanim","title":"PlayItemAnim ()","text":"","tags":["Class"]},{"location":"Weapon.html#void-playitemanim-int-itemid-direction-animdirection-vector-position-float-charge","title":"void PlayItemAnim ( int ItemID, Direction AnimDirection, Vector Position, float Charge )","text":"","tags":["Class"]},{"location":"Weapon.html#setcharge","title":"SetCharge ()","text":"","tags":["Class"]},{"location":"Weapon.html#void-setcharge-int-charge","title":"void SetCharge ( int Charge )","text":"","tags":["Class"]},{"location":"Weapon.html#setfiredelay","title":"SetFireDelay ()","text":"","tags":["Class"]},{"location":"Weapon.html#void-setfiredelay-float-delay","title":"void SetFireDelay ( float Delay )","text":"","tags":["Class"]},{"location":"Weapon.html#setheadlocktime","title":"SetHeadLockTime ()","text":"","tags":["Class"]},{"location":"Weapon.html#void-setheadlocktime-int-time","title":"void SetHeadLockTime ( int Time )","text":"","tags":["Class"]},{"location":"Weapon.html#setmodifiers","title":"SetModifiers ()","text":"","tags":["Class"]},{"location":"Weapon.html#void-setmodifiers-weaponmodifier-modifiers","title":"void SetModifiers ( WeaponModifier modifiers )","text":"","tags":["Class"]},{"location":"WeightedOutcomePicker.html","title":"Class \"WeightedOutcomePicker\"","text":"<p>An example mod using the WeightedOutcomePicker class can be found here.</p> Info <p>This class can be obtained using its constructor:</p> Example Code <pre><code>local wop = WeightedOutcomePicker()\n</code></pre>","tags":["Class"]},{"location":"WeightedOutcomePicker.html#constructors","title":"Constructors","text":"","tags":["Class"]},{"location":"WeightedOutcomePicker.html#weightedoutcomepicker","title":"WeightedOutcomePicker ()","text":"","tags":["Class"]},{"location":"WeightedOutcomePicker.html#weightedoutcomepicker-weightedoutcomepicker","title":"WeightedOutcomePicker WeightedOutcomePicker ( )","text":"","tags":["Class"]},{"location":"WeightedOutcomePicker.html#functions","title":"Functions","text":"","tags":["Class"]},{"location":"WeightedOutcomePicker.html#addoutcomefloat","title":"AddOutcomeFloat ()","text":"","tags":["Class"]},{"location":"WeightedOutcomePicker.html#void-addoutcomefloat-int-value-float-weight-int-scalefactor-100","title":"void AddOutcomeFloat ( int Value, float Weight, int ScaleFactor = 100 )","text":"<p>Adds an outcome to the outcome selector with the specified <code>Weight</code>. The internal weight is still an integer calculated like this: <code>fWeight * scaleFactor</code>, where <code>ScaleFactor</code> is the maximum weight (equivalent to 1.0).</p> Example Code <pre><code>local picker = WeightedOutcomePicker()\n\npicker:AddOutcomeFloat(1, 1.0) -- ~45%\npicker:AddOutcomeFloat(2, 1.0) -- ~45%\npicker:AddOutcomeFloat(3, 0.2) -- ~9%\n</code></pre>","tags":["Class"]},{"location":"WeightedOutcomePicker.html#addoutcomeweight","title":"AddOutcomeWeight ()","text":"","tags":["Class"]},{"location":"WeightedOutcomePicker.html#void-addoutcomeweight-int-value-int-weight","title":"void AddOutcomeWeight ( int Value, int Weight )","text":"<p>Adds an outcome to the outcome selector with the specified <code>Weight</code>.</p> Example Code <pre><code>local picker = WeightedOutcomePicker()\n\npicker:AddOutcomeWeight(1, 65) -- 65%\npicker:AddOutcomeWeight(2, 30) -- 30%\npicker:AddOutcomeWeight(3, 5) -- 5%\n</code></pre>","tags":["Class"]},{"location":"WeightedOutcomePicker.html#clearoutcomes","title":"ClearOutcomes ()","text":"","tags":["Class"]},{"location":"WeightedOutcomePicker.html#void-clearoutcomes","title":"void ClearOutcomes ( )","text":"<p>Clears all outcomes from the outcome picker.</p>","tags":["Class"]},{"location":"WeightedOutcomePicker.html#getnumoutcomes","title":"GetNumOutcomes ()","text":"","tags":["Class"]},{"location":"WeightedOutcomePicker.html#int-getnumoutcomes","title":"int GetNumOutcomes ( )","text":"<p>Returns the number of outcomes in the outcome picker.</p>","tags":["Class"]},{"location":"WeightedOutcomePicker.html#getoutcomes","title":"GetOutcomes ()","text":"","tags":["Class"]},{"location":"WeightedOutcomePicker.html#table-getoutcomes","title":"table[] GetOutcomes ( )","text":"<p>Returns a table containing a list of all outcomes in the outcome picker.</p> Table structure &amp; usage <ul> <li>The returned table contains a list of outcomes, where each outcome is a table containing the following fields: <ul> <li>Value: value of the outcome</li> <li>Weight: weight of the outcome     <pre><code>for i, outcome in ipairs(p:GetOutcomes()) do\n    print(outcome.Value, outcome.Weight)\nend\n</code></pre></li> </ul> </li> </ul>","tags":["Class"]},{"location":"WeightedOutcomePicker.html#pickoutcome","title":"PickOutcome ()","text":"","tags":["Class"]},{"location":"WeightedOutcomePicker.html#int-pickoutcome-rng-rng","title":"int PickOutcome ( RNG RNG )","text":"<p>Returns a random outcome from the list in WeightedOutcomePicker. Accepts RNG.</p>","tags":["Class"]},{"location":"WeightedOutcomePicker.html#removeoutcome","title":"RemoveOutcome ()","text":"","tags":["Class"]},{"location":"WeightedOutcomePicker.html#void-removeoutcome-int-value","title":"void RemoveOutcome ( int Value )","text":"<p>Removes an outcome from the outcome picker with the given <code>Value</code>.</p>","tags":["Class"]},{"location":"XMLData.html","title":"Global Class \"XMLData\"","text":"Info <p>A public table containing all the functions related to gathering XML attributes accross the different XMLs with updated values to match the real values.</p> <p>You can get this class by using the <code>XMLData</code> global table.</p> <p>Note that to call these functions, you must use a <code>.</code> (period) instead of a <code>:</code> (colon)!</p> Example Code <pre><code>local numEntries = XMLData.GetNumEntries(XMLNode.ENTITY)\n</code></pre> Warning <p>XML attributes are converted to lowercase when being parsed by REPENTOGON! This eliminates capitializtion inconsistency in vanilla tags, but might result in not being able to find attributes if they're looked up by their name as definined in the XML (e.g <code>bossID</code> will return <code>nil</code>, so use <code>bossid</code> instead.)</p>","tags":["Global","Class"]},{"location":"XMLData.html#functions","title":"Functions","text":"","tags":["Global","Class"]},{"location":"XMLData.html#getbosscolorbytypevarsub","title":"GetBossColorByTypeVarSub ()","text":"","tags":["Global","Class"]},{"location":"XMLData.html#table-getbosscolorbytypevarsub-entitytype-type-int-variant-int-subtype","title":"table GetBossColorByTypeVarSub ( EntityType Type, int Variant , int SubType)","text":"<p>Returns a table containing the attributes of the bosscolor on bosscolors.xml that match the given type variant and subtype. </p> Table usage <pre><code>print(\"Red Monstro's suffix:\", XMLData.GetBossColorByTypeVarSub(20,0,1).suffix)\n</code></pre>","tags":["Global","Class"]},{"location":"XMLData.html#getentitybytypevarsub","title":"GetEntityByTypeVarSub ()","text":"","tags":["Global","Class"]},{"location":"XMLData.html#table-getentitybytypevarsub-entitytype-type-int-variant-0-int-subtype-0-boolean-strict-false","title":"table GetEntityByTypeVarSub ( EntityType Type, int Variant = 0 , int SubType = 0, boolean Strict = false)","text":"<p>Returns a table containing the attributes of the entity on entities2.xml that match the given type and/or variant and/or subtype. The strict parameter determines if it should only return a value when all 3 attributes(type, var and sub) match or return whatever matches the type and take the rest as maybes.</p> Table usage <pre><code>print(\"Monstro's BossID:\", XMLData.GetEntityByTypeVarSub(20).bossid)\n</code></pre> child nodes <p>Child nodes are returned as tables alongside the rest of the attributes. For example, if you want to access the samples of a sound entry, you can use <code>soundentry.sample[1]</code>.</p>","tags":["Global","Class"]},{"location":"XMLData.html#getentrybyid","title":"GetEntryById ()","text":"","tags":["Global","Class"]},{"location":"XMLData.html#table-getentrybyid-xmlnode-nodetype-int-idx","title":"table GetEntryById ( XMLNode NodeType, int Idx )","text":"<p>Returns a table containing the attributes of the corresponding xml, the matching NodeType(Ex: XMLNode.TRINKET returns trinket nodes from pocketitems.xml) and match the given unique id.</p> Table usage <pre><code>print(\"Sad Onion's description:\", XMLData.GetEntryById(XMLNode.ITEM, 1).description)\n</code></pre> child nodes <p>Child nodes are returned as tables alongside the rest of the attributes. For example, if you want to access the samples of a sound entry, you can use <code>soundentry.sample[1]</code>.</p> id? <p>The Id usually matches the actual id of the node in question, with the exception of cases like the entities.xml where ids are not unique, on those cases, the id is the order of the node and wont correspond with the actual id. On the cases of XMLs without ids, its just the order again.</p>","tags":["Global","Class"]},{"location":"XMLData.html#getentrybyname","title":"GetEntryByName ()","text":"","tags":["Global","Class"]},{"location":"XMLData.html#table-getentrybyname-xmlnode-nodetype-string-name","title":"table GetEntryByName ( XMLNode NodeType, string Name )","text":"<p>Returns a table containing the attributes of the corresponding xml, the matching NodeType (Ex: XMLNode.TRINKET returns trinket nodes from pocketitems.xml) and match the given name parameter.</p> Table usage <pre><code>print(\"Sad Onion's description:\", XMLData.GetEntryByName(XMLNode.ITEM, \"The Sad Onion\").description)\n</code></pre> child nodes <p>Child nodes are returned as tables alongside the rest of the attributes. For example, if you want to access the samples of a sound entry, you can use <code>soundentry.sample[1]</code>.</p>","tags":["Global","Class"]},{"location":"XMLData.html#getentrybyorder","title":"GetEntryByOrder ()","text":"","tags":["Global","Class"]},{"location":"XMLData.html#table-getentrybyorder-xmlnode-nodetype-int-order","title":"table GetEntryByOrder ( XMLNode NodeType, int Order )","text":"<p>Similar to GetByName or GetById, but it returns the node based on the order in which it appears on the xmls (1 will return the first node, 2 the second one and so on). Useful to iterate through xmls in combination with GetNumEntries, specially for redundant xmls like entities.xml.</p> Table usage <pre><code>print(\"Sad Onion's description:\", XMLData.GetEntryByOrder(XMLNode.ITEM, 1).description)\n</code></pre> child nodes <p>Child nodes are returned as tables alongside the rest of the attributes. For example, if you want to access the samples of a sound entry, you can use <code>soundentry.sample[1]</code>.</p> id? <p>The Id usually matches the actual id of the node in question, with the exception of cases like the entities.xml where ids are not unique, on those cases, the id is the order of the node and wont correspond with the actual id. On the cases of XMLs without ids, its just the order again.</p>","tags":["Global","Class"]},{"location":"XMLData.html#getentryfromentity","title":"GetEntryFromEntity ()","text":"","tags":["Global","Class"]},{"location":"XMLData.html#table-getentryfromentity-entity-entity-boolean-autoxmlpick-true-boolean-strict","title":"table GetEntryFromEntity ( Entity Entity, boolean AutoXMLPick = true, boolean Strict)","text":"<p>Returns a table containing the attributes of the provided entity. The <code>AutoXMLPick</code> parameter determines if only entities2.xml should be used or if it should pick the xml that matches the EntityType (Ex: items.xml for pedestal collectibles) . The strict parameter determines if it should only return a value when the type,variant and subtype attributes match or return whatever matches the type and take the rest as maybes.</p> Table usage <pre><code>print(\"Player's birthright:\", XMLData.GetEntryFromEntity(Isaac.GetPlayer()).birthright)\n</code></pre> child nodes <p>Child nodes are returned as tables alongside the rest of the attributes. For example, if you want to access the samples of a sound entry, you can use <code>soundentry.sample[1]</code>.</p>","tags":["Global","Class"]},{"location":"XMLData.html#getmodbyid","title":"GetModById ()","text":"","tags":["Global","Class"]},{"location":"XMLData.html#table-getmodbyid-string-modid","title":"table GetModById ( string modId )","text":"<p>Returns a table containing the attributes of the metdata xml of the matching mod id. Can be used in conjunction with the \"sourceid\" attribute of other xmlnodes to determine which mod they come from, in the cases where they come from a mod (most nodes have this attribute).</p> Table usage <pre><code>print(\"Car's mod name:\", XMLData.GetModById(\"2788006730\").name)\n</code></pre> id? <p>The Id usually matches the actual id of the mod in the workshop, with the exception of cases where the mod was downloaded illegally and tampered with or if its an indev mod. If the mod doesnt have an id, then the directory is used as an id.</p>","tags":["Global","Class"]},{"location":"XMLData.html#getnumentries","title":"GetNumEntries ()","text":"","tags":["Global","Class"]},{"location":"XMLData.html#int-getnumentries-xmlnode-nodetype","title":"int GetNumEntries ( XMLNode NodeType)","text":"<p>Returns the number of entries a given XMLNode structure has.</p>","tags":["Global","Class"]},{"location":"docs.html","title":"Lua API Documentation for The Binding of Isaac - REPENTOGON","text":"<p>This documentation covers the additions and modifications made to the Lua API by REPENTOGON.</p> <p>Happily serving:</p> <ul> <li>over 800 new or improved functions</li> <li>over 200 new callbacks</li> <li>over 30 new rideable dragons</li> <li>over 60 new enums</li> </ul> <p>A list of non API related changes can be found in the \"changes\" tab!</p>","boost":-999},{"location":"install.html","title":"Installation","text":"<p>We have two methods of installation: Automatic and Manual. We also have a Steam Workshop page that has a similar method to Manual.</p> <p>If the installation is successful you should be able to notice multiple changes to the game, most notably you should see REPENTOGON version in the titlebar. Here is an example of a complete installation:</p> <p></p>"},{"location":"install.html#automatic","title":"Automatic","text":"Info <p>Automatic instructions only work on Windows for now. A Linux version of the installer is being worked on, and for now it should work in Wine, but there's still extra setup on there for now.</p> Info <p>We'll make this more automatic in the future, bear with us.</p>"},{"location":"install.html#what-youll-need","title":"What you'll need","text":"<ul> <li>The REPENTOGON installer (click here to download)</li> </ul>"},{"location":"install.html#instructions","title":"Instructions","text":"<ol> <li>Within Steam, navigate to The Binding of Isaac: Rebirth</li> <li>Click on the gear to the right of the screen, and click on it</li> <li>Click on <code>Properties</code><ul> <li>This opens a new window.</li> </ul> </li> </ol> <ol> <li>Navigate to <code>Installed Files</code>, then click <code>Browse</code><ul> <li>This opens a new window.</li> </ul> </li> </ol> <ol> <li>Copy the <code>REPENTOGONUpdater.exe</code> downloaded earlier to the folder that just opened.</li> </ol> <ol> <li>Run <code>REPENTOGONUpdater.exe</code>.<ul> <li>This opens a new window.</li> </ul> </li> <li>Press <code>Install</code>.<ul> <li>Once the log at the bottom says <code>Finished!</code>, installation is done. If the log instead says anything about failing, the installation was unsuccessful. Try a different method.</li> </ul> </li> </ol> Info <p>On Linux and Steam Deck, add <code>WINEDLLOVERRIDES=\"dsound=n,b\" %command%</code> as a launch option for Isaac.</p>"},{"location":"install.html#manual","title":"Manual","text":""},{"location":"install.html#what-youll-need_1","title":"What you'll need","text":"<ul> <li>The latest release of REPENTOGON (click here to download)</li> </ul>"},{"location":"install.html#instructions_1","title":"Instructions","text":"<ol> <li>Within Steam, navigate to The Binding of Isaac: Rebirth</li> <li>Click on the gear to the right of the screen, and click on it</li> <li>Click on <code>Properties</code><ul> <li>This opens a new window.</li> </ul> </li> </ol> <ol> <li>Navigate to <code>Installed Files</code>, then click <code>Browse</code><ul> <li>This opens a new window.</li> </ul> </li> </ol> <ol> <li>Extract the contents of <code>REPENTOGON.zip</code> to the folder that just opened.</li> </ol> Info <p>On Linux and Steam Deck, add <code>WINEDLLOVERRIDES=\"dsound=n,b\" %command%</code> as a launch option for Isaac.</p>"},{"location":"install.html#steam-workshop","title":"Steam Workshop","text":""},{"location":"install.html#what-youll-need_2","title":"What you'll need","text":"<ul> <li>REPENTOGON from the Steam Workshop</li> </ul>"},{"location":"install.html#instructions_2","title":"Instructions","text":"<ol> <li>Within Steam, navigate to The Binding of Isaac: Rebirth</li> <li>Click on the gear to the right of the screen, and click on it</li> <li>Click on <code>Properties</code><ul> <li>This opens a new window.</li> </ul> </li> </ol> <ol> <li>Navigate to <code>Installed Files</code>, then click <code>Browse</code><ul> <li>This opens a new window.</li> </ul> </li> </ol> <ol> <li> <p>Navigate to the <code>mods</code> folder, then <code>REPENTOGON_3127536138</code>.</p> </li> <li> <p>Extract the contents of <code>REPENTOGON.zip</code> to the game's folder.</p> </li> </ol> <p></p> Info <p>On Linux and Steam Deck, add <code>WINEDLLOVERRIDES=\"dsound=n,b\" %command%</code> as a launch option for Isaac.</p> <p>You can now unsubscribe from the mod on Steam, if you wish.</p>"},{"location":"tags.html","title":"Tags","text":""},{"location":"tags.html#tag:class","title":"Class","text":"<ul> <li>            Ambush          </li> <li>            AnimationData          </li> <li>            AnimationFrame          </li> <li>            AnimationLayer          </li> <li>            Backdrop          </li> <li>            Beam          </li> <li>            BestiaryMenu          </li> <li>            BlendMode          </li> <li>            BossPool          </li> <li>            BossPoolManager          </li> <li>            Camera          </li> <li>            Capsule          </li> <li>            ChallengeMenu          </li> <li>            ChallengeParam          </li> <li>            CharacterMenu          </li> <li>            CollectionMenu          </li> <li>            Color          </li> <li>            ColorModifier          </li> <li>            ColorParams          </li> <li>            Console          </li> <li>            ControllerSelectMenu          </li> <li>            CostumeSpriteDesc          </li> <li>            CustomChallengeMenu          </li> <li>            CutscenesMenu          </li> <li>            DailyChallenge          </li> <li>            DailyChallengeMenu          </li> <li>            Debug          </li> <li>            DebugRenderer          </li> <li>            DestinationQuad          </li> <li>            EntitiesSaveState          </li> <li>            EntitiesSaveStateVector          </li> <li>            Entity          </li> <li>            EntityBomb          </li> <li>            EntityConfig          </li> <li>            EntityConfigBaby          </li> <li>            EntityConfigEntity          </li> <li>            EntityConfigPlayer          </li> <li>            EntityDelirium          </li> <li>            EntityEffect          </li> <li>            EntityFamiliar          </li> <li>            EntityKnife          </li> <li>            EntityLaser          </li> <li>            EntityNPC          </li> <li>            EntityPickup          </li> <li>            EntityPlayer          </li> <li>            EntityProjectile          </li> <li>            EntitySlot          </li> <li>            EntityTear          </li> <li>            FXParams          </li> <li>            Font          </li> <li>            GLSLValue          </li> <li>            Game          </li> <li>            GenericPrompt          </li> <li>            GridEntitiesSaveStateVector          </li> <li>            GridEntity          </li> <li>            GridEntityDecoration          </li> <li>            GridEntityDoor          </li> <li>            GridEntityFire          </li> <li>            GridEntityGravity          </li> <li>            GridEntityLock          </li> <li>            GridEntityPressurePlate          </li> <li>            GridEntityRock          </li> <li>            GridEntityStairs          </li> <li>            GridEntityStatue          </li> <li>            GridEntityTeleporter          </li> <li>            GridEntityTrapDoor          </li> <li>            GridEntityWall          </li> <li>            GridEntityWeb          </li> <li>            HUD          </li> <li>            History          </li> <li>            HistoryItem          </li> <li>            ImGui          </li> <li>            Image          </li> <li>            Input          </li> <li>            Isaac          </li> <li>            ItemConfig          </li> <li>            ItemConfig - Card          </li> <li>            ItemConfig - Item          </li> <li>            ItemConfig - PillEffect          </li> <li>            ItemOverlay          </li> <li>            ItemPool          </li> <li>            KeyConfigMenu          </li> <li>            LRoomAreaDesc          </li> <li>            LRoomTileDesc          </li> <li>            LayerState          </li> <li>            Level          </li> <li>            LevelGenerator          </li> <li>            LevelGeneratorEntry          </li> <li>            LevelGeneratorRoom          </li> <li>            LootList          </li> <li>            LootListEntry          </li> <li>            MainMenu          </li> <li>            MenuManager          </li> <li>            Minimap          </li> <li>            ModsMenu          </li> <li>            MultiShotParams          </li> <li>            MusicManager          </li> <li>            NightmareScene          </li> <li>            NullFrame          </li> <li>            Options          </li> <li>            OptionsMenu          </li> <li>            PauseMenu          </li> <li>            PersistentGameData          </li> <li>            Pipeline          </li> <li>            PlayerHUD          </li> <li>            PlayerHUDHeart          </li> <li>            PlayerManager          </li> <li>            PocketItem          </li> <li>            Point          </li> <li>            ProceduralEffect          </li> <li>            ProceduralItem          </li> <li>            ProceduralItemManager          </li> <li>            ProjectileParams          </li> <li>            RNG          </li> <li>            RailManager          </li> <li>            RenderSet          </li> <li>            Renderer          </li> <li>            Room          </li> <li>            RoomConfig          </li> <li>            RoomConfigHolder          </li> <li>            RoomConfigRoom          </li> <li>            RoomConfigSet          </li> <li>            RoomConfigStage          </li> <li>            RoomDescriptor          </li> <li>            RoomTransition          </li> <li>            SaveMenu          </li> <li>            ScoreSheet          </li> <li>            Shader          </li> <li>            Shape          </li> <li>            SourceQuad          </li> <li>            SpecialSeedsMenu          </li> <li>            Sprite          </li> <li>            StageTransition          </li> <li>            StatsMenu          </li> <li>            TitleMenu          </li> <li>            Transformer          </li> <li>            Vector          </li> <li>            Vertex          </li> <li>            VertexBuffer          </li> <li>            VertexDescriptor          </li> <li>            Weapon          </li> <li>            WeightedOutcomePicker          </li> <li>            XMLData          </li> </ul>"},{"location":"tags.html#tag:enum","title":"Enum","text":"<ul> <li>            Achievement          </li> <li>            AddHealthType          </li> <li>            AnimRenderFlags          </li> <li>            AnnouncerVoiceMode          </li> <li>            AutocompleteType          </li> <li>            BagOfCraftingPickup          </li> <li>            BlendFactor          </li> <li>            BlendType          </li> <li>            BombCostumeLayer          </li> <li>            BossType          </li> <li>            ButtonActionBitwise          </li> <li>            CameraStyle          </li> <li>            CompletionType          </li> <li>            ConceptionFamiliarFlag          </li> <li>            ConsoleFont          </li> <li>            DebugFlag          </li> <li>            DialogButtons          </li> <li>            DialogIcons          </li> <li>            DialogReturn          </li> <li>            Dimension          </li> <li>            DipSubType          </li> <li>            DwmWindowAttribute          </li> <li>            Ending          </li> <li>            EntityPoopVariant          </li> <li>            EntityTag          </li> <li>            EventCounter          </li> <li>            ExtraHudStyle          </li> <li>            FadeoutTarget          </li> <li>            FollowerPriority          </li> <li>            GLSLType          </li> <li>            GetCollectibleFlag          </li> <li>            Giantbook          </li> <li>            GibFlag          </li> <li>            GridPoopVariant          </li> <li>            HealthType          </li> <li>            ImGuiCallback          </li> <li>            ImGuiColor          </li> <li>            ImGuiData          </li> <li>            ImGuiElement          </li> <li>            ImGuiNotificationType          </li> <li>            ItemAnim          </li> <li>            KnifeSubType          </li> <li>            KnifeVariant          </li> <li>            Language          </li> <li>            LineCheckMode          </li> <li>            MainMenuType          </li> <li>            MinimapState          </li> <li>            MouseButton          </li> <li>            NullPickupSubType          </li> <li>            PauseMenuStates          </li> <li>            PedestalType          </li> <li>            PillCardSlot          </li> <li>            PlayerVariant          </li> <li>            PocketItemType          </li> <li>            PressurePlateVariant          </li> <li>            ProceduralEffectActionType          </li> <li>            ProceduralEffectConditionType          </li> <li>            ProjectileMode          </li> <li>            PurityState          </li> <li>            RetractingSpikesVariant          </li> <li>            RoomSubType          </li> <li>            ShaderType          </li> <li>            SlotVariant          </li> <li>            SpecialQuest          </li> <li>            StbGridType          </li> <li>            StbPoopSubType          </li> <li>            StbRailVariant          </li> <li>            StbRockSubType          </li> <li>            StbTeleporterSubType          </li> <li>            StbType          </li> <li>            TaintedMarksGroup          </li> <li>            TeleporterVariant          </li> <li>            WeaponModifier          </li> <li>            WispSubType          </li> <li>            XMLNode          </li> </ul>"},{"location":"tags.html#tag:file","title":"File","text":"<ul> <li>            achievements.xml          </li> <li>            ambush.xml          </li> <li>            backdrops.xml          </li> <li>            bosscolors.xml          </li> <li>            challenges.xml          </li> <li>            costumes.xml          </li> <li>            cutscenes.xml          </li> <li>            entities2.xml          </li> <li>            giantbook.xml          </li> <li>            itempools.xml          </li> <li>            items.xml          </li> <li>            players.xml          </li> <li>            pocketitems.xml          </li> </ul>"},{"location":"tags.html#tag:global","title":"Global","text":"<ul> <li>            Ambush          </li> <li>            BestiaryMenu          </li> <li>            BossPoolManager          </li> <li>            ChallengeMenu          </li> <li>            CharacterMenu          </li> <li>            CollectionMenu          </li> <li>            Console          </li> <li>            ControllerSelectMenu          </li> <li>            CustomChallengeMenu          </li> <li>            CutscenesMenu          </li> <li>            DailyChallenge          </li> <li>            DailyChallengeMenu          </li> <li>            Debug          </li> <li>            DebugRenderer          </li> <li>            EntityConfig          </li> <li>            Isaac          </li> <li>            ItemOverlay          </li> <li>            KeyConfigMenu          </li> <li>            MainMenu          </li> <li>            MenuManager          </li> <li>            Minimap          </li> <li>            ModsMenu          </li> <li>            NightmareScene          </li> <li>            OptionsMenu          </li> <li>            PauseMenu          </li> <li>            PlayerManager          </li> <li>            ProceduralItemManager          </li> <li>            ProjectileParams          </li> <li>            REPENTOGON          </li> <li>            RoomConfig          </li> <li>            RoomTransition          </li> <li>            SaveMenu          </li> <li>            ScoreSheet          </li> <li>            SpecialSeedsMenu          </li> <li>            StageTransition          </li> <li>            StatsMenu          </li> <li>            TitleMenu          </li> <li>            XMLData          </li> </ul>"},{"location":"blog/index.html","title":"Blog","text":"<p>Welcome to the blog! We'll post announcements and updates here as necessary.</p>"},{"location":"blog/2023/12/31/faq.html","title":"FAQ","text":"<p>REPENTOGON works very differently from a traditional mod. We suspect there will inevitably be some confusion about its inner workings and how it will interact with future game updates.</p> <p>This FAQ is broken down into different sections for both standard end-users and mod developers.</p>"},{"location":"blog/2023/12/31/faq.html#end-users","title":"End-Users","text":""},{"location":"blog/2023/12/31/faq.html#q-what-is-repentogon","title":"Q: What is REPENTOGON?","text":"<p>REPENTOGON is a script extender for The Binding of Isaac: Repentance. The project started in late January 2023 due to a \"perfect storm\" of events: at the time, we believed there to only be one update for Repentance left, several modders were frustrated with the lack of API updates, and we were pointed towards the direction of an open source version of LibZHL, the framework _Kilburn created to develop Antibirth, laying dormant in the source code of FTL: Hyperspace, a similar mod for FTL.</p> <p>That version of LibZHL turned out not to work for us because it had extensive changes made to it to no longer suit our needs as far as Isaac goes. With the express permission of _Kilburn we used the original version directly from Antibirth, and have made significant changes to it in order to further increase its flexibility, power, and ease of use. </p> <p>REPENTOGON's goal is to enhance the game's API to allow modders to drop many of the hacks they need to do in order to change basic game functionality, and to further allow for things that were previously impossible. We anticipate that REPENTOGON will become a hard dependency for many mods in the future, both big and small.</p> <p>We also have some small quality-of-life tweaks and bugfixes, but these are all completely optional. Many of these are on by default but can be disabled in our options menu. This is bound to the same key that traditionally would open the debug console.</p>"},{"location":"blog/2023/12/31/faq.html#q-my-antivirus-says-repentogon-is-malicious-is-it-safe","title":"Q: My antivirus says REPENTOGON is malicious! Is it safe?","text":"<p>Yes. Any antivirus that flags us is reporting a false-positive. Some of the techniques we use to make this work are the same a (very primitive) virus could use to inject itself into a running program as well. </p> <p>We are a fully open source project and always will be. The code can be audited at any time to show that we are not malicious.</p>"},{"location":"blog/2023/12/31/faq.html#q-will-repentogon-break-when-the-game-updates","title":"Q: Will REPENTOGON break when the game updates?","text":"<p>Yes, unavoidably, and this is not the fault of Nicalis! Instead, this is an unavoidable side effect of how REPENTOGON works. Please do not review bomb future updates or harass Nicalis developers because they break REPENTOGON. This will only serve to harm the project.</p> <p>We will do our best to adapt to future updates, but this will take time. We suspect we can get REPENTOGON running on a new update quickly, but it will take time to ensure that REPENTOGON hasn't broken in a subtle way. We will need to extensively retest our changes.</p> <p>In the future, if Nicalis were to add debug symbols into the game, this would significantly reduce the time needed to adapt to future updates. Isaac has never shipped with these on Windows despite shipping with them on most other platforms, so we feel the exclusion of these on Windows is doing more harm than good, but we nonetheless respect Nicalis's decision to not include them and ask that end-users do not harass Nicalis about getting these included.</p>"},{"location":"blog/2023/12/31/faq.html#q-how-do-i-disable-repentogon","title":"Q: How do I disable REPENTOGON?","text":"<p>You will need to add <code>-repentogonoff</code>/<code>-repentogoff</code>/<code>-repentogone</code> as a launch option in order to make the game load without REPENTOGON.</p>"},{"location":"blog/2023/12/31/faq.html#q-does-repentogon-work-on-linux-steam-deck","title":"Q: Does REPENTOGON work on Linux / Steam Deck?","text":"<p>Yes! We do not have a native Linux build as there's no point to since there's no native Linux version of Repentance, but it works properly under Proton. On Steam Deck this is the default setup.</p> <p>You will need to add <code>WINEDLLOVERRIDES=dsound=n,b %command%</code> as a launch option in order to make the game load our DLL. We aim to make an installer to automate this process.</p>"},{"location":"blog/2023/12/31/faq.html#q-does-repentogon-work-on-mac","title":"Q: Does REPENTOGON work on Mac?","text":"<p>It's complicated. If you're using the version of Repentance from the App Store, no. We have not researched this version and it likely doesn't support mods anyways. Running the Windows version in Wine should work, although you'll need to add the same launch option mentioned in the previous question.</p>"},{"location":"blog/2023/12/31/faq.html#q-does-repentogon-support-rebirth-afterbirth-or-afterbirth","title":"Q: Does REPENTOGON support Rebirth, Afterbirth, or Afterbirth+?","text":"<p>No, and we never will. It doesn't make much sense to support those DLCs as they are legacy versions of the game. Rebirth and Afterbirth don't have Lua mod support and most major mods have moved on from Afterbirth+. We will solely focus on Repentance.</p>"},{"location":"blog/2023/12/31/faq.html#mod-developers","title":"Mod Developers","text":""},{"location":"blog/2023/12/31/faq.html#q-how-do-i-detect-if-repentogon-is-in-use","title":"Q: How do I detect if REPENTOGON is in use?","text":"<p>We define a <code>REPENTOGON</code> global, much like Repentance defines a <code>REPENTANCE</code> global. You can use this to prompt the player to download REPENTOGON or to have a pathway in your mod that runs if REPENTOGON is enabled.</p>"},{"location":"blog/2023/12/31/faq.html#q-how-does-repentogon-speed-up-the-api","title":"Q: How does REPENTOGON speed up the API?","text":"<p>Multiple ways! By far the biggest impact is the move to Lua 5.4, which has a new generational garbage collector that works much better than the standard incremental garbage collector for the purposes of Isaac. The generational garbage collector does many tiny sweeps, whereas incremental performs less frequent large sweeps. This means garbage collection stutter is much, much less noticeable. In early REPENTOGON testing, generational GC's results were indistinguishable from not running GC at all on a high-end computer.</p> <p>The port to 5.4 also necessitated rewriting three of the most frequently used API functions- <code>Isaac.GetRoomEntities</code>, <code>Isaac.FindByType</code>, and <code>Isaac.FindInRadius</code>- as these all violate Lua spec and rely on undefined behavior, and as such didn't work going to 5.4. Our reimplementations of these functions are indistinguishable from the originals from an API perspective, but perform twice (!) as fast.</p> <p>Additionally, the base API is made using LuaBridge, which is a very slow Lua wrapper. Our new classses and functions are all made in traditional Lua instead. We'd like to fully eliminate LuaBridge in the future, which would create further performance improvements down the road. Don't rely on this, though! REPENTOGON allows for direct control over game functionality that previously had to be reimplemented, please use those. Ideally, mods transitioning to REPENTOGON will inherently increase game performance over time.</p> <p>We've also made smaller changes like caching many of the commonly used classes like Game, which avoids a costly hop back to C++.</p> <p>We briefly looked into adopting LuaJIT which would be the performance holy grail when combined with FFI, which allows calling C functions directly from Lua, but this would necessitate a full API rewrite. LuaJIT doesn't have bitwise operator support so we're currently stuck, but it's on the LuaJIT 3.0 roadmap. If and when this is implemented we will look into this, but we will not roll this out unless we achieve full compatibility with the existing mod ecosystem.</p>"},{"location":"blog/2023/12/31/faq.html#q-will-repentogon-get-updates-to-add-more-features-in-the-future","title":"Q: Will REPENTOGON get updates to add more features in the future?","text":"<p>Of course! REPENTOGON is not finished, far from it. The only reason we're releasing now is because if we don't set an arbitrary release date, we'll never release. REPENTOGON is a playground for us, with each core developer focusing on their personal goals first and foremost. Many of us are no longer interested in working on Isaac mods themselves, but have had a blast working on REPENTOGON, and that's not stopping any time soon.</p>"},{"location":"blog/2023/12/31/faq.html#q-repentogon-doesnt-have-a-feature-that-id-like-is-it-possible-to-add-x","title":"Q: REPENTOGON doesn't have a feature that I'd like. Is it possible to add X?","text":"<p>It's complicated. REPENTOGON is the result of nearly a year of reverse engineering. We've hit most of the low hanging fruit at this point. There's still stuff we'd like to fully investigate, like complete control over level generation, but this will take time.</p> <p>Many of the issues we have on the repository are pipe dream wishes more than anything. We'd love to tackle everything there but some of it is going to take a lot of effort, potentially entire reimplementations of existing game functionality. Feel free to show your support for some of these, though- the more people that are interested, the more we'll prioritize a specific issue.</p>"},{"location":"blog/2023/12/31/welcome-to-the-new-era-of-isaac-modding.html","title":"Welcome to the new era of Isaac modding!","text":"<p>After nearly a year of hard work, we are proud to finally release REPENTOGON into the world! As our gift to the modding community as we head into the Year of the Dragon, we have rekindled the smoldering embers of the Isaac API into a flame that has never burned brighter.</p> <p>REPENTOGON is a script extender, a concept you may be familiar with if you have ever modded some other games, especially Bethesda titles. These important mods make the game's modding API more flexible and powerful, significantly expanding the capabilities of mods. Many mods for those games simply wouldn't be possible without them! We feel that Isaac has similar untapped potential. The game's formula inherently allows for infinite expansion, and yet the base API simply cannot provide anything close to a level of power that allows for this concept to truly come to fruition.</p> <p>Our ultimate goal is to reduce the amount of asinine workarounds needed in order for modders to changee basic functionality. The base API doesn't even have a clean way to add items that do something when picked up! With over 800 new functions and over 200 new callbacks, we've eliminated many of these problems.</p> <p>REPENTOGON is free and open source, and always will be. We're far from finished- expect even more new features in the future.</p> <p>Head over to the installation guide to get started. PLEASE let us know of any bugs or crashes that arise- we've done lots of testing but can't possibly predict every single mod configuration.</p>"},{"location":"changes/Debugging.html","title":"Changes done to debugging and the Console","text":""},{"location":"changes/Debugging.html#callback-typechecking","title":"Callback Typechecking","text":"<p>All callbacks are now typechecked.</p> <ul> <li>An error is thrown when a callback return type is invalid.</li> <li>A traceback will be printed into the debug console when a callback error is thrown.</li> <li>This fixes some vanilla callbacks crashing the game when given a bad return type (MC_POST_CURSE_EVAL, MC_GET_CARD, MC_EXECUTE_CMD, etc);</li> </ul>"},{"location":"changes/Debugging.html#old-callback-error-behavior","title":"Old Callback Error Behavior","text":"<p>Callback error behavior has been reverted back to how it was before Repentance's 1.7.9b patch.</p> <ul> <li>A callback with an error will no longer stop every future callback from running.</li> <li>This deprecates Mod Error Container.</li> </ul>"},{"location":"changes/Debugging.html#error-display","title":"Error Display","text":"<p>The first mod to cause a Lua error will trigger a message at the top of the screen stating the mod is causing errors. This is in the hopes that unrelated mods stop being blamed for errors.</p> <ul> <li>This can be clicked by the user to open a read-only (unless the console has already been opened by the player) version of the debug console to help show players what exactly is wrong.</li> </ul>"},{"location":"changes/Debugging.html#console-error-flattening","title":"Console Error Flattening","text":"<p>Multiple sequential instances of the same error will be flattened in the console (not the logs). Duplicate entries will be denoted with an (x2) (x3) etc. next to the error.</p>"},{"location":"changes/Debugging.html#external-console-window","title":"External console window","text":"<p>Adding the <code>-console</code> launch parameter to the game will open a second window that displays debug messages created by calling <code>printf()</code> inside of the C++ code.</p>"},{"location":"changes/Debugging.html#dear-imgui","title":"Dear ImGui","text":"<p>We have integrated the Dear ImGui user interface library into the game. This can be brought up at any time using the key that previously brought up the vanilla debug console. Mods can add their own user interfaces into the menu with the ImGui class.</p>"},{"location":"changes/Debugging.html#in-game-log-viewer","title":"In-game Log Viewer","text":"<p>A log viewer has been built-in to the Dear ImGui menu.</p> <ul> <li>Game, Console and REPENTOGON logs can be filtered individually.</li> <li>The log can be searched.</li> </ul>"},{"location":"changes/Debugging.html#completely-overhauled-console","title":"Completely Overhauled Console","text":"<p>The debug console has been completely rebuilt from the ground up in Dear ImGui.</p> <ul> <li>The new console has an intelligent autocomplete system, featuring proper tab completion and a more compact autocomplete layout.</li> <li>The <code>macro</code> command has been remade from scratch. Mods can now register macros and these will show up in the new autocomplete system.</li> <li>Mods can register commands. These will show up in the new help menu and in autocomplete.</li> <li>Autocomplete presets can be used by Lua commands.</li> <li>Mods can define their own custom autocomplete with MC_CONSOLE_AUTOCOMPLETE and the <code>CUSTOM</code> AutocompleteType.</li> <li>The new console works on the main menu. Commands marked as \"unsafe\" on the main menu when registered are not shown in autocomplete there, and will intentionally error if attempted.</li> <li>The new console saves command history every time a command is entered. The vanilla one only saved on console or game exit. This prevents history from being lost on a game crash.</li> <li>A <code>help</code> command has been added. This lists all registered commands. Commands marked as \"unsafe\" on the main menu when registered are not shown there.</li> </ul>"},{"location":"changes/General.html","title":"General changes to the game or game engine","text":"<p>In addition to the API changes listed in the docs, REPENTOGON makes the following general behavior changes to the game:</p>"},{"location":"changes/General.html#lua-54","title":"Lua 5.4","text":"<p>The API has been ported to use Lua 5.4 instead of 5.3.</p> <ul> <li>The generational garbage collector from 5.4 has been enabled by default, allowing for a significant performance boost.</li> <li>We have (tentative) plans to migrate to LuaJIT in the future, which is not fully compatible with 5.4 (or even 5.2, for that matter). As a result, we ask that mods refrain from relying on any Lua 5.4-specific functionality.</li> </ul>"},{"location":"changes/General.html#game-window","title":"Game Window","text":"<p>The Game window now displays the current build version and commit hash of REPENTOGON in its name.</p>"},{"location":"changes/UI.html","title":"Changes made to the UI","text":""},{"location":"changes/UI.html#title-screen","title":"Title Screen","text":"<ul> <li>The current REPENTOGON commit hash is displayed above the title screen logo.</li> <li>A scrollable changelog displaying the commit history starting from the currently installed build is accessable by pressing TAB while on the title screen.</li> </ul>"},{"location":"changes/UI.html#stats-menu","title":"Stats Menu","text":"<p>The Stats menu now displays a scrollable list of more than 40 stats, including:</p> <ul> <li>end-boss kills</li> <li>angel/devil deals taken</li> <li>boss rushs cleared</li> <li>cards/pills used</li> <li>rocks/poop destroyed</li> <li>secret rooms opened</li> <li>dailys played/won</li> <li>...</li> </ul>"},{"location":"changes/UI.html#dailies-menu","title":"Dailies Menu","text":"<p>The Dailies menu now displays extended stats, including:</p> <ul> <li>Target Goal</li> <li>Total runs</li> <li>Current Streak</li> <li>Target Difficulty</li> </ul>"},{"location":"changes/UI.html#mods-menu","title":"Mods menu","text":"<p>The Mods menu now uses a slightly smaller font to render mod names, making it less common for text to render outside the backdrop boundaries.</p>"},{"location":"enums/Achievement.html","title":"Enum \"Achievement\"","text":"Value Enumerator Comment 1 MAGDALENE 2 CAIN 3 JUDAS 4 THE_WOMB 4 WOMB 5 THE_HARBINGERS 5 HARBINGERS 5 HORSEMEN 6 A_CUBE_OF_MEAT 6 CUBE_OF_MEAT 7 THE_BOOK_OF_REVELATIONS 7 BOOK_OF_REVELATIONS 8 A_NOOSE 8 TRANSENDENCE 9 THE_NAIL 9 NAIL 10 A_QUARTER 10 QUARTER 11 A_FETUS_IN_A_JAR 11 DR_FETUS 12 A_SMALL_ROCK 12 SMALL_ROCK 13 MONSTROS_LUNG 14 LIL_CHUBBY 15 LOKIS_HORNS 16 SOMETHING_FROM_THE_FUTURE 16 STEVEN 17 SOMETHING_CUTE 17 CHAD 18 SOMETHING_STICKY 18 GISH 19 A_BANDAGE 19 SUPER_BANDAGE 20 A_CROSS 20 THE_RELIC 20 RELIC 21 A_BAG_OF_PENNIES 21 BAG_OF_PENNIES 22 THE_BOOK_OF_SIN 23 BOOK_OF_SIN 23 LITTLE_GISH 24 LITTLE_STEVEN 25 LITTLE_CHAD 26 A_GAMEKID 26 GAMEKID 27 A_HALO 27 HALO 28 MR_MEGA 29 ISAAC_HOLDS_THE_D6 30 THE_SCISSORS 30 SCISSORS 31 THE_PARASITE 31 PARASITE 32 BLUE_BABY 32 QQQ 33 EVERYTHING_IS_TERRIBLE 34 IT_LIVES 35 MOMS_CONTACT 36 THE_NECRONOMICON 36 NECRONOMICON 37 BASEMENT_BOY 38 SPELUNKER_BOY 39 DARK_BOY 40 MAMAS_BOY 41 GOLDEN_GOD 42 EVE 43 MOMS_KNIFE 44 THE_RAZOR 44 RAZOR 45 GUARDIAN_ANGEL 46 A_BAG_OF_BOMBS 46 BAG_OF_BOMBS 47 A_DEMON_BABY 47 DEMON_BABY 48 A_FORGET_ME_NOW 48 FORGET_ME_NOW 49 THE_D20 49 D20 50 THE_CRUCIFIX 50 CELTIC_CROSS 51 ABEL 52 CURVED_HORN 53 SACRIFICIAL_DAGGER 54 BLOOD_LUST 54 BLOODY_LUST 55 BLOOD_PENNY 55 BLOODY_PENNY 56 BLOOD_RIGHTS 57 THE_POLAROID 57 POLAROID 58 DADS_KEY 59 THE_BLUE_CANDLE 59 BLUE_CANDLE 60 BURNT_PENNY 61 LUCKY_TOE 62 EPIC_FETUS 63 SMB_SUPER_FAN 64 COUNTERFEIT_COIN 65 COUNTERFEIT_PENNY 65 GUPPYS_HAIRBALL 66 A_FORGOTTEN_HORSEMAN 66 CONQUEST 67 SAMSON 68 SOMETHING_ICKY 68 TRIACHNID 69 PLATINUM_GOD 70 ISAACS_HEAD 71 MAGGYS_FAITH 72 JUDAS_TONGUE 73 BLUE_BABYS_SOUL 73 QQQS_SOUL 74 SAMSONS_LOCK 75 CAINS_EYE 76 EVES_BIRD_FOOT 77 THE_LEFT_HAND 77 LEFT_HAND 78 THE_NEGATIVE 78 NEGATIVE 79 DEMON_ISAAC 79 AZAZEL 80 LAZARUS 81 EDEN 82 THE_SOUL 82 THE_LOST 82 LOST 83 DEAD_BOY 84 THE_REAL_PLATINUM_GOD 84 REAL_PLATINUM_GOD 85 LUCKY_ROCK 86 THE_CELLAR 86 CELLAR 87 THE_CATACOMBS 87 CATACOMBS 88 THE_NECROPOLIS 88 NECROPOLIS 89 RUNE_OF_HAGALAZ 89 HAGALAZ 90 RUNE_OF_JERA 90 JERA 91 RUNE_OF_EHWAZ 91 EHWAZ 92 RUNE_OF_DAGAZ 92 DAGAZ 93 RUNE_OF_ANSUZ 93 ANSUZ 94 RUNE_OF_PERTHRO 94 PERTHRO 95 RUNE_OF_BERKANO 95 BERKANO 96 RUNE_OF_ALGIZ 96 ALGIZ 97 CHAOS_CARD 98 CREDIT_CARD 99 RULES_CARD 100 CARD_AGAINST_HUMANITY 101 SWALLOWED_PENNY 102 ROBO_BABY_2 103 DEATHS_TOUCH 104 TECHNOLOGY_5 105 MISSING_NO 106 ISAACS_TEARS 107 GUILLOTINE 108 JUDAS_SHADOW 109 MAGGYS_BOW 110 CAINS_OTHER_EYE 111 BLACK_LIPSTICK 112 EVES_MASCARA 113 FATE 114 BLUE_BABYS_ONLY_FRIEND 114 QQQS_ONLY_FRIEND 115 SAMSONS_CHAINS 116 LAZARUS_RAGS 117 BROKEN_ANKH 118 STORE_CREDIT 119 PANDORAS_BOX 120 SUICIDE_KING 121 BLANK_CARD 122 BOOK_OF_SECRETS 123 MYSTERIOUS_PAPER 124 MYSTERY_SACK 125 UNDEFINED 126 SATANIC_BIBLE 127 DAEMONS_TAIL 128 ABADDON 129 ISAACS_HEART 130 THE_MIND_ITEM 130 MIND 131 THE_BODY_ITEM 131 BODY 132 THE_SOUL_ITEM 132 SOUL 133 A_D100 133 D100 134 BLUE_MAP 135 THERES_OPTIONS 136 BLACK_CANDLE 137 RED_CANDLE 138 STOP_WATCH 139 WIRE_COAT_HANGER 140 IPECAC 141 EXPERIMENTAL_TREATMENT 142 KRAMPUS_UNLOCKED 142 KRAMPUS 143 HEAD_OF_KRAMPUS 144 SUPER_MEAT_BOY 145 BUTTER_BEAN 146 LITTLE_BAGGY 147 BLOOD_BAG 148 A_D4 148 D4 149 THE_LOST_POSTER 149 LOST_POSTER 149 MISSING_POSTER 150 RUBBER_CEMENT 151 STORE_UPGRADE_LV1 152 STORE_UPGRADE_LV2 153 STORE_UPGRADE_LV3 154 STORE_UPGRADE_LV4 155 UNLOCKED_ANGEL_BOSSES 155 ANGELS 156 GODHEAD 157 CHALLENGE_4_DARKNESS_FALLS 157 DARKNESS_FALLS 158 CHALLENGE_5_THE_TANK 158 THE_TANK 159 CHALLENGE_6_SOLAR_SYSTEM 159 SOLAR_SYSTEM 160 CHALLENGE_7_SUICIDE_KING 160 SUICIDE_KING_CHALLENGE 161 CHALLENGE_8_CAT_GOT_YOUR_TONGUE 161 CAT_GOT_YOUR_TONGUE 162 CHALLENGE_9_DEMO_MAN 162 DEMO_MAN 163 CHALLENGE_10_CURSED 163 CURSED 164 CHALLENGE_11_GLASS_CANNON 164 GLASS_CANNON 165 CHALLENGE_19_THE_FAMILY_MAN 165 THE_FAMILY_MAN 165 FAMILY_MAN 166 CHALLENGE_20_PURIST 166 PURIST 167 LOST_BABY 168 CUTE_BABY 169 CROW_BABY 170 SHADOW_BABY 171 GLASS_BABY 172 WRAPPED_BABY 173 BEGOTTEN_BABY 174 DEAD_BABY 175 O_BABY 175 ZERO_BABY 176 GLITCH_BABY 177 FIGHTING_BABY 178 BECAME_LORD_OF_THE_FLIES 179 FART_BABY 179 FARTING_BABY 180 PURITY 181 D12 182 BETRAYAL 183 FATES_REWARD 184 ATHAME 185 BLIND_RAGE 186 MAW_OF_THE_VOID 187 EMPTY_VESSEL 188 EDENS_BLESSING 189 SWORN_PROTECTOR 190 INCUBUS 191 KEEPER_HOLDS_A_PENNY 192 LIL_CHEST 193 CENSER 194 EVIL_EYE 195 MY_SHADOW 196 CRACKED_DICE 197 BLACK_FEATHER 198 LUSTY_BLOOD 199 LILITH 200 KEY_BUM 201 GB_BUG 202 ZODIAC 203 BOX_OF_FRIENDS 204 RIB_OF_GREED 205 CRY_BABY 206 RED_BABY 207 GREEN_BABY 208 BROWN_BABY 209 BLUE_COOP_BABY 210 LIL_BABY 211 RAGE_BABY 212 BLACK_BABY 213 LONG_BABY 214 YELLOW_BABY 215 WHITE_BABY 216 BIG_BABY 217 NOOSE_BABY 218 RUNE_BAG 219 CAMBION_CONCEPTION 220 SERPENTS_KISS 221 SUCCUBUS 222 IMMACULATE_CONCEPTION 223 GOAT_HEAD_BABY 224 GOLD_HEART 224 GOLDEN_HEARTS 225 GET_OUT_OF_JAIL_FREE_CARD 225 GET_OUT_OF_JAIL_FREE 226 GOLD_BOMB 226 GOLDEN_BOMBS 227 TWO_NEW_PILLS 228 TWO_NEW_PILLS_2 229 POKER_CHIP 230 STUD_FINDER 231 D8 232 KIDNEY_STONE 233 BLANK_RUNE 234 BLUE_WOMB 235 ONE_THOUSAND_AND_ONE_PERCENT 235 NERD_1_MILLION 236 KEEPER_HOLDS_WOODEN_NICKEL 237 KEEPER_HOLDS_STORE_KEY 238 DEEP_POCKETS 239 KARMA 240 STICKY_NICKELS 241 SUPER_GREED_BABY 242 LUCKY_PENNIES 243 SPECIAL_HANGING_SHOPKEEPERS 244 WOODEN_NICKEL 245 CAIN_HOLDS_PAPERCLIP 246 EVERYTHING_IS_TERRIBLE_2 247 SPECIAL_SHOPKEEPERS 248 EVE_HOLDS_RAZOR_BLADE 249 STORE_KEY 250 THE_LOST_HOLDS_HOLY_MANTLE 250 LOST_HOLDS_HOLY_MANTLE 251 KEEPER 252 HIVE_BABY 253 BUDDY_BABY 254 COLORFUL_BABY 255 WHORE_BABY 256 CRACKED_BABY 257 DRIPPING_BABY 258 BLINDING_BABY 259 SUCKY_BABY 260 DARK_BABY 261 PICKY_BABY 262 REVENGE_BABY 263 BELIAL_BABY 264 SALE_BABY 265 CHALLENGE_21_XXXXXXXXL 265 XXXXXXXXL 266 CHALLENGE_22_SPEED 266 SPEED 267 CHALLENGE_23_BLUE_BOMBER 267 BLUE_BOMBER 268 CHALLENGE_24_PAY_TO_PLAY 268 PAY_TO_PLAY 269 CHALLENGE_25_HAVE_A_HEART 269 HAVE_A_HEART 270 CHALLENGE_26_I_RULE 270 I_RULE 271 CHALLENGE_27_BRAINS 271 BRAINS 272 CHALLENGE_28_PRIDE_DAY 272 PRIDE_DAY 273 CHALLENGE_29_ONANS_STREAK 273 ONANS_STREAK 274 CHALLENGE_30_THE_GUARDIAN 274 THE_GUARDIAN 275 GENEROSITY 276 MEGA_BLAST 277 CHALLENGE_31_BACKASSWARDS 277 BACKASSWARDS 278 CHALLENGE_32_APRILS_FOOL 278 APRILS_FOOL 279 CHALLENGE_33_POKEY_MANS 279 POKEY_MANS 280 CHALLENGE_34_ULTRA_HARD 280 ULTRA_HARD 281 CHALLENGE_35_PONG 281 PONG 282 D_INFINITY 283 EUCHARIST 284 SILVER_DOLLAR 285 SHADE 286 KING_BABY 287 BLOODY_CROWN 288 DULL_RAZOR 289 EDENS_SOUL 290 DARK_PRINCES_CROWN 291 COMPOUND_FRACTURE 292 EUTHANASIA 293 HOLY_CARD 294 CROOKED_CARD 295 VOID 296 D1 297 GLYPH_OF_BALANCE 298 SACK_OF_SACKS 299 EYE_OF_BELIAL 300 MECONIUM 301 STEM_CELL 302 CROW_HEART 303 METRONOME 304 BAT_WING 305 PLAN_C 306 DUALITY 307 DADS_LOST_COIN 308 EYE_OF_GREED 309 BLACK_RUNE 310 LOCUST_OF_WRATH 311 LOCUST_OF_PESTILENCE 312 LOCUST_OF_FAMINE 313 LOCUST_OF_DEATH 314 LOCUST_OF_CONQUEST 315 HUSHY 316 BROWN_NUGGET 317 MORT_BABY 318 SMELTER 319 APOLLYON_BABY 320 UNLOCKED_A_NEW_AREA 320 THE_VOID 320 VOID_FLOOR 321 ONCE_MORE_WITH_FEELING 321 GULP_PILL 322 HAT_TRICK 322 ACE_OF_CLUBS 323 FIVE_NIGHTS_AT_MOMS 323 SUPER_SPECIAL_ROCKS 324 SIN_COLLECTOR 324 FEELS_LIKE_IM_WALKING_ON_SUNSHINE 324 SUNSHINE_PILL 325 DEDICATION 325 HORF 326 ZIP 326 ACE_OF_DIAMONDS 327 ITS_THE_KEY 327 ACE_OF_SPADES 328 MR_RESETTER 328 SCARED_HEART 329 LIVING_ON_THE_EDGE 329 ACE_OF_HEARTS 330 U_BROKE_IT 330 VURP 331 LAZARUS_BLEEDS_MORE 331 LAZARUS_HOLDS_ANEMIA 332 MAGGY_HOLDS_A_PILL 332 MAGDALENE_HOLDS_A_PILL 333 CHARGED_KEY 334 SAMMSON_FEELS_HEALTHY 334 SAMSON_HOLDS_CHILDS_HEART 335 GREEDS_GULLET 336 CRACKED_CROWN 337 UNLOCKED_RERUNS 337 RERUNS 338 DELIRIOUS 339 ONE_MILLION_PERCENT_JUST_STOP 339 ONE_MILLION_PERCENT 339 JUST_STOP 340 THE_DESTROYER 340 APOLLYON 341 GREEDIER 342 BURNING_BASEMENT 343 FLOODED_CAVES 344 DANK_DEPTHS 345 SCARRED_WOMB 346 SOMETHING_WICKED 347 SOMETHING_WICKED_PLUS 347 SOMETHING_WICKED_2 348 THE_GATE_IS_OPEN 349 BLACK_HOLE 350 MYSTERY_GIFT 351 SPRINKLER 352 ANGRY_FLY 353 BOZO 354 BROKEN_MODEM 355 BUDDY_IN_A_BOX 356 FAST_BOMBS 357 LIL_DELIRIUM 358 HAIRPIN 359 WOODEN_CROSS 360 BUTTER 361 HUGE_GROWTH 362 ANCIENT_RECALL 363 ERA_WALK 364 COUPON 365 TELEKINESIS 366 MOVING_BOX 367 JUMPER_CABLES 368 LEPROSY 369 TECHNOLOGY_ZERO 370 FILIGREE_FEATHER 371 MR_ME 372 SEVEN_SEALS 373 ANGELIC_PRISM 374 POP 375 DOOR_STOP 376 DEATHS_LIST 377 HAEMOLACHRIA 378 LACHRYPHAGY 379 SCHOOLBAG 380 TRISAGION 381 EXTENSION_CORD 382 FLAT_STONE 383 SACRIFICAL_ALTAR 384 LIL_SPEWER 385 BLANKET 386 MARBLES 387 MYSTERY_EGG 388 ROTTEN_PENNY 389 BABY_BENDER 390 THE_FORGOTTEN 390 FORGOTTEN 391 BONE_HEARTS 392 MARROW 393 SLIPPED_RIB 394 POINTY_RIB 395 JAW_BONE 396 BRITTLE_BONES 397 DIVORCE_PAPERS 398 HALLOWED_GROUND 399 FINGER_BONE 400 DADS_RING 401 BOOK_OF_THE_DEAD 402 BONE_BABY 403 BOUND_BABY 404 BETHANY 405 JACOB_AND_ESAU 406 THE_STARS_ARE_CALLING 406 PLANETARIUMS 407 UNLOCKED_A_SECRET_EXIT 407 SECRET_EXIT 407 ALT_PATH 407 ANTIBIRTH_PATH 408 FORGOTTEN_LULLABY 409 FRUITY_PLUM 410 PLUM_FLUTE 411 ROTTEN_HEARTS 412 DROSS 413 ASHPIT 414 GEHENNA 415 RED_KEY 416 WISP_BABY 417 BOOK_OF_VIRTUES 418 URN_OF_SOULS 419 BLESSED_PENNY 420 ALABASTER_BOX 421 BETHS_FAITH 422 SOUL_LOCKET 423 DIVINE_INTERVENTION 424 VADE_RETRO 425 STAR_OF_BETHLEHEM 426 HOPE_BABY 427 GLOWING_BABY 428 DOUBLE_BABY 429 THE_STAIRWAY 429 STAIRWAY 430 RED_STEW 431 BIRTHRIGHT 432 DAMOCLES 433 ROCK_BOTTOM 434 INNER_CHILD 435 VANISHING_TWIN 436 GENESIS 437 SUPLEX 438 SOLOMONS_BABY 439 ILLUSION_BABY 440 MEAT_CLEAVER 441 OPTIONS 441 OPTIONS_Q 442 YUCK_HEART 443 CANDY_HEART 444 GUPPYS_EYE 445 A_POUND_OF_FLESH 445 POUND_OF_FLESH 446 AKELDAMA 447 REDEMPTION 448 ETERNAL_D6 449 MONTEZUMAS_REVENGE 450 BIRD_CAGE 451 CRACKED_ORB 452 BLOODY_GUST 453 EMPTY_HEART 454 DEVILS_CROWN 455 LIL_ABADDON 456 TINYTOMA 457 ASTRAL_PROJECTION 458 M 458 APOSTROPHE_M 459 EVERYTHING_JAR 460 LOST_SOUL 461 HUNGRY_SOUL 462 BLOOD_PUPPY 463 C_SECTION 464 KEEPERS_SACK 465 KEEPERS_BOX 466 LIL_PORTAL 467 WORM_FRIEND 468 BONE_SPURS 469 SPIRIT_SHACKLES 470 REVELATION 471 JAR_OF_WISPS 472 MAGIC_SKIN 473 FRIEND_FINDER 474 TAINTED_ISAAC 475 TAINTED_MAGGY 475 TAINTED_MAGDALENE 476 TAINTED_CAIN 477 TAINTED_JUDAS 478 TAINTED_BLUE_BABY 478 TAINTED_QQQ 479 TAINTED_EVE 480 TAINTED_SAMSON 481 TAINTED_AZAZEL 482 TAINTED_LAZARUS 483 TAINTED_EDEN 484 TAINTED_THE_LOST 484 TAINTED_LOST 485 TAINTED_LILITH 486 TAINTED_KEEPER 487 TAINTED_APOLLYON 488 TAINTED_THE_FORGOTTEN 488 TAINTED_FORGOTTEN 489 TAINTED_BETHANY 490 TAINTED_JACOB 490 TAINTED_JACOB_AND_ESAU 491 GLITCHED_CROWN 492 BELLY_JELLY 493 BLUE_KEY 494 SANGUINE_BOND 495 THE_SWARM 495 SWARM 496 HEARTBREAK 497 LARYNX 498 AZAZELS_RAGE 499 SALVATION 500 TMTRAINER 501 SACRED_ORB 502 TWISTED_PAIR 503 STRAWMAN 504 ECHO_CHAMBER 505 ISAACS_TOMB 506 VENGEFUL_SPIRIT 507 ESAU_JR 508 CHALLENGE_37_BLOODY_MARY 508 BLOODY_MARY 509 CHALLENGE_38_BAPTISM_BY_FIRE 509 BAPTISM_BY_FIRE 510 CHALLENGE_39_ISAACS_AWAKENING 510 ISAACS_AWAKENING 511 CHALLENGE_40_SEEING_DOUBLE 511 SEEING_DOUBLE 512 CHALLENGE_41_PICA_RUN 512 PICA_RUN 513 CHALLENGE_42_HOT_POTATO 513 HOT_POTATO 514 CHALLENGE_43_CANTRIPPED 514 CANTRIPPED 515 CHALLENGE_44_RED_REDEMPTION 515 RED_REDEMPTION 516 CHALLENGE_45_DELETE_THIS 516 DELETE_THIS 517 DIRTY_MIND 518 SIGIL_OF_BAPHOMET 519 PURGATORY 520 SPIRIT_SWORD 521 BROKEN_GLASSES 522 ICE_CUBE 523 CHARGED_PENNY 524 REVERSED_THE_FOOL 524 REVERSED_FOOL 525 REVERSED_THE_MAGICIAN 525 REVERSED_MAGICIAN 526 REVERSED_THE_HIGH_PRIESTESS 526 REVERSED_HIGH_PRIESTESS 527 REVERSED_THE_EMPRESS 527 REVERSED_EMPRESS 528 REVERSED_THE_EMPEROR 528 REVERSED_EMPEROR 529 REVERSED_THE_HIEROPHANT 529 REVERSED_HIEROPHANT 530 REVERSED_THE_LOVERS 530 REVERSED_LOVERS 531 REVERSED_THE_CHARIOT 531 REVERSED_CHARIOT 532 REVERSED_JUSTICE 533 REVERSED_THE_HERMIT 533 REVERSED_HERMIT 534 REVERSED_WHEEL_OF_FORTUNE 535 REVERSED_STRENGTH 536 REVERSED_THE_HANGED_MAN 536 REVERSED_HANGED_MAN 537 REVERSED_DEATH 538 REVERSED_TEMPERANCE 539 REVERSED_THE_DEVIL 539 REVERSED_DEVIL 540 REVERSED_THE_TOWER 540 REVERSED_TOWER 541 REVERSED_THE_STARS 541 REVERSED_STARS 542 REVERSED_THE_SUN_AND_THE_MOON 542 REVERSED_SUN_AND_MOON 543 REVERSED_JUDGEMENT 544 REVERSED_THE_WORLD 544 REVERSED_WORLD 545 OLD_CAPACITOR 546 BRIMSTONE_BOMBS 547 MEGA_MUSH 548 MOMS_LOCK 549 DICE_BAG 550 HOLY_CROWN 551 MOTHERS_KISS 552 GILDED_KEY 553 LUCKY_SACK 554 YOUR_SOUL 555 NUMBER_MAGNET 556 DINGLE_BERRY 557 RING_CAP 558 STRANGE_KEY 559 LIL_CLOT 560 TEMPORARY_TATTOO 561 SWALLOWED_M80 562 WICKED_CROWN 563 AZAZELS_STUMP 564 TORN_POCKET 565 TORN_CARD 566 NUH_UH 567 MODELING_CLAY 568 KIDS_DRAWING 569 CRYSTAL_KEY 570 THE_TWINS 571 ADOPTION_PAPERS 572 KEEPERS_BARGAIN 573 CURSED_PENNY 574 CRICKET_LEG 575 APOLLYONS_BEST_FRIEND 576 POLISHED_BONE 577 HOLLOW_HEART 578 EXPANSION_PACK 579 BETHS_ESSENCE 580 RC_REMOTE 581 FOUND_SOUL 582 MEMBER_CARD 583 GOLDEN_RAZOR 584 SPINDOWN_DICE 585 HYPERCOAGULATION 586 BAG_OF_CRAFTING 587 DARK_ARTS 588 IBS 589 SUMPTORIUM 590 BERSERK 591 HEMOPTYSIS 592 FLIP 593 CORRUPTED_DATA 594 GHOST_BOMBS 595 GELLO 596 KEEPERS_KIN 597 ABYSS 598 DECAP_ATTACK 599 LEMEGETON 600 ANIMA_SOLA 601 MEGA_CHEST 602 QUEEN_OF_HEARTS 603 GOLD_PILL 603 GOLDEN_PILLS 604 BLACK_SACK 605 CHARMING_POOP 606 HORSE_PILLS 607 CRANE_GAME 608 HELL_GAME 609 WOODEN_CHEST 610 WILD_CARD 611 HAUNTED_CHEST 612 FOOLS_GOLD 613 GOLDEN_PENNY 613 GOLDEN_PENNIES 614 ROTTEN_BEGGAR 615 GOLDEN_BATTERY 615 GOLDEN_BATTERIES 616 CONFESSIONAL 617 GOLDEN_TRINKET 617 GOLDEN_TRINKETS 618 SOUL_OF_ISAAC 619 SOUL_OF_MAGDALENE 619 SOUL_OF_MAGGY 620 SOUL_OF_CAIN 621 SOUL_OF_JUDAS 622 SOUL_OF_BLUE_BABY 622 SOUL_OF_QQQ 623 SOUL_OF_EVE 624 SOUL_OF_SAMSON 625 SOUL_OF_AZAZEL 626 SOUL_OF_LAZARUS 627 SOUL_OF_EDEN 628 SOUL_OF_THE_LOST 628 SOUL_OF_LOST 629 SOUL_OF_LILITH 630 SOUL_OF_THE_KEEPER 630 SOUL_OF_KEEPER 631 SOUL_OF_APOLLYON 632 SOUL_OF_THE_FORGOTTEN 632 SOUL_OF_FORGOTTEN 633 SOUL_OF_BETHANY 634 SOUL_OF_JACOB 634 SOUL_OF_JACOB_AND_ESAU 635 A_STRANGE_DOOR 635 STRANGE_DOOR 635 ASCENT_DOOR 636 DEATH_CERTIFICATE 637 DEAD_GOD","tags":["Enum"]},{"location":"enums/AddHealthType.html","title":"Enum \"AddHealthType\"","text":"Value Enumerator Comment 0 NONE 1&lt;&lt;0 RED 1&lt;&lt;1 MAX 1&lt;&lt;2 SOUL 1&lt;&lt;3 BLACK 1&lt;&lt;4 ETERNAL 1&lt;&lt;5 GOLDEN 1&lt;&lt;6 BONE 1&lt;&lt;7 ROTTEN 1&lt;&lt;8 BROKEN","tags":["Enum"]},{"location":"enums/AnimRenderFlags.html","title":"AnimRenderFlags","text":"Warning <p>The flags contained in Sprite and LayerState are added together during rendering, thus if one is set in <code>Sprite</code> but not <code>LayerState</code> it will still take effect for that layer.</p> <p>Not fully documented yet, sorry! (A test script is provided below if you'd like to help document this)</p> Bitset Calculator <p></p>","tags":["Enum"]},{"location":"enums/AnimRenderFlags.html#enum-animrenderflags","title":"Enum \"AnimRenderFlags\"","text":"Value Enumerator Comment 1&lt;&lt;1 GLITCH Rapidly distorts the spritesheet position. Likely used for glitch items generated by CORRUPTED DATA. 1&lt;&lt;4 COLOROFFSET_CHAMPION Used by champion NPCs. If not applied to a champion NPC, it will not render. 1&lt;&lt;5 STATIC Used by Dogma (boss, collectible, related effects). 1&lt;&lt;6 IGNORE_GAME_TIME If set, animated effects (static, golden) will continue animating even if the game is paused. 1&lt;&lt;7 GOLDEN Used by golden trinkets. 1&lt;&lt;10 ENABLE_LAYER_LIGHTING Layer names starting with <code>*</code> will become fullbright. 1&lt;&lt;11 ENABLE_NULL_LAYER_LIGHTING Null layer names starting with <code>*</code> will emit light. Test script <p>This script will print to both the console and log whenever an entity has flags applied to it:</p> <pre><code>local mod = RegisterMod(\"REPENTOTEST\", 1)\n\nlocal function debugprint(string)\n    print(string)\n    Isaac.DebugString(string)\nend\n\nfunction getfilename(sprite)\n    local name = sprite:GetFilename()\n    local index = string.find(name, \"/[^/]*$\")\n    return string.sub(name, index+1, string.len(name))\nend\n\nfunction printmessage(entity, sprite)\n    debugprint(\"For entity \"..entity.Type..\".\"..entity.Variant..\".\"..entity.SubType..\", frame \"..tostring(entity.FrameCount)..\", \"..\"\\\"\"..getfilename(sprite)..\"\\\":\")\nend\n\nfunction splitflags(n) --https://stackoverflow.com/questions/30445776/lua-decompose-a-number-by-powers-of-2\n    local res = {}\n    local ret = \"\"\n    i = 1\n    while i &lt;= n do\n        if i&amp;n ~= 0 then -- bitwise and check\n            table.insert(res, i)\n        end\n        i = i &lt;&lt; 1 -- bitwise shift to the left\n    end\n\n    local count = 0\n    for _ in ipairs(res) do count = count + 1 end\n\n    for j,v in ipairs(res) do\n        local num = math.floor(math.log(v, 2 ))\n        if num == 0 then\n            ret = ret..\"1\"\n        else\n            ret = ret..\"1&lt;&lt;\"..num\n        end\n        if j ~= count then\n            ret = ret..\", \"\n        else\n            ret = ret..\" (\"..n..\")\"\n        end\n    end\n    return ret\nend\n\nfunction mod:CheckFlags(entity)\n    local data = entity:GetData()\n    local sprite = entity:GetSprite()\n    local anm2Flags = sprite:GetRenderFlags()\n    local layers = sprite:GetAllLayers()\n\n    local didmessage = false\n    if data.layerFlags == nil then\n        data.layerFlags = {}\n    end\n\n    if anm2Flags &gt; 0 and anm2Flags ~= data.anm2Flags then\n        if not didmessage then\n            printmessage(entity, sprite)\n            didmessage = true\n        end\n        debugprint(\"[Sprite]: \"..splitflags(anm2Flags))\n        data.anm2Flags = anm2Flags\n    end\n\n    local layerFlags\n    for i = 1, #layers do\n        layerFlags = layers[i]:GetRenderFlags()\n        if layerFlags &gt; 0 and layerFlags ~= data.layerFlags[i] then\n            if not didmessage then\n                printmessage(entity, sprite)\n                didmessage = true\n            end\n            debugprint(\"[\"..tostring(i)..\"] \\\"\"..layers[i]:GetName()..\"\\\": \"..splitflags(layerFlags))\n            data.layerFlags[i] = layerFlags\n        end\n    end\nend\n\nmod:AddCallback(ModCallbacks.MC_POST_PLAYER_RENDER, mod.CheckFlags)\nmod:AddCallback(ModCallbacks.MC_POST_TEAR_RENDER, mod.CheckFlags)\nmod:AddCallback(ModCallbacks.MC_POST_FAMILIAR_RENDER, mod.CheckFlags)\nmod:AddCallback(ModCallbacks.MC_POST_BOMB_RENDER, mod.CheckFlags)\nmod:AddCallback(ModCallbacks.MC_POST_PICKUP_RENDER, mod.CheckFlags)\nmod:AddCallback(ModCallbacks.MC_POST_SLOT_RENDER, mod.CheckFlags)\nmod:AddCallback(ModCallbacks.MC_POST_LASER_RENDER, mod.CheckFlags)\nmod:AddCallback(ModCallbacks.MC_POST_KNIFE_RENDER, mod.CheckFlags)\nmod:AddCallback(ModCallbacks.MC_POST_PROJECTILE_RENDER, mod.CheckFlags)\nmod:AddCallback(ModCallbacks.MC_POST_NPC_RENDER, mod.CheckFlags)\nmod:AddCallback(ModCallbacks.MC_POST_EFFECT_RENDER, mod.CheckFlags)\n</code></pre>","tags":["Enum"]},{"location":"enums/AnnouncerVoiceMode.html","title":"Enum \"AnnouncerVoiceMode\"","text":"Value Enumerator Comment 0 RANDOM 1 NEVER 1 OFF 2 ALWAYS","tags":["Enum"]},{"location":"enums/AutocompleteType.html","title":"Enum \"AutocompleteType\"","text":"Value Enumerator Comment 0 NONE 1 ENTITY 2 GOTO 3 STAGE 4 GRID 5 DEBUG_FLAG 6 ITEM 7 CHALLENGE 8 COMBO 9 CUTSCENE 10 MACRO 11 SFX 12 CURSE 13 METRO 14 DELIRIOUS 15 PLAYER 16 ACHIEVEMENT 17 MODFOLDER 18 CUSTOM","tags":["Enum"]},{"location":"enums/BagOfCraftingPickup.html","title":"Enum \"BagOfCraftingPickup\"","text":"Value Enumerator Comment 0 BOC_NONE 1 BOC_RED_HEART 2 BOC_SOUL_HEART 3 BOC_BLACK_HEART 4 BOC_ETERNAL_HEART 5 BOC_GOLD_HEART 6 BOC_BONE_HEART 7 BOC_ROTTEN_HEART 8 BOC_PENNY 9 BOC_NICKEL 10 BOC_DIME 11 BOC_LUCKY_PENNY 12 BOC_KEY 13 BOC_GOLD_KEY 14 BOC_CHARGED_KEY 15 BOC_BOMB 16 BOC_GOLD_BOMB 17 BOC_GIGA_BOMB 18 BOC_MINI_BATTERY 19 BOC_BATTERY 20 BOC_MEGA_BATTERY 21 BOC_CARD 22 BOC_PILL 23 BOC_RUNE 24 BOC_DICE_SHARD 25 BOC_CRACKED_KEY 26 BOC_GOLD_PENNY 27 BOC_GOLD_PILL 28 BOC_GOLD_BATTERY 29 BOC_POOP","tags":["Enum"]},{"location":"enums/BlendFactor.html","title":"BlendFactor","text":"Info <p>These are the enums used by glBlendFuncSeparate.</p>","tags":["Enum"]},{"location":"enums/BlendFactor.html#enum-blendfactor","title":"Enum \"BlendFactor\"","text":"Value Enumerator Comment 0 ZERO 1 ONE 2 SRC_COLOR 3 ONE_MINUS_SRC_COLOR 4 DST_COLOR 5 ONE_MINUS_DST_COLOR 6 SRC_ALPHA 7 ONE_MINUS_SRC_ALPHA 8 DST_ALPHA 9 ONE_MINUS_DST_ALPHA 10 CONSTANT_COLOR Currently nonfunctional 11 ONE_MINUS_CONSTANT_COLOR Currently nonfunctional 12 CONSTANT_ALPHA Currently nonfunctional 13 ONE_MINUS_CONSTANT_ALPHA Currently nonfunctional 14 SRC_ALPHA_SATURATE","tags":["Enum"]},{"location":"enums/BlendType.html","title":"Enum \"BlendType\"","text":"Value Enumerator Comment 0 CONSTANT <code>{ 1, 0, 1, 0 }</code>. Seems to be used to ignore any kind of source/destination modifiers 1 NORMAL <code>{ 1, 7, 1, 7}</code> 2 ADDITIVE <code>{ 1, 1, 1, 1 }</code> 3 MULTIPLICATIVE <code>{ 0, 2, 0, 2}</code> 4 OVERLAY <code>{4, 7, 4, 7}</code>","tags":["Enum"]},{"location":"enums/BombCostumeLayer.html","title":"Enum \"BombCostumeLayer\"","text":"Value Enumerator Comment 0 BACK 1 BODY2 2 FRONT 3 FRONT2 4 OVERLAY","tags":["Enum"]},{"location":"enums/BossType.html","title":"Enum \"BossType\"","text":"Value Enumerator Comment 1 MONSTRO 2 LARRY_JR 3 CHUB 4 GURDY 5 MONSTRO_2 5 MONSTRO_II 6 MOM 7 SCOLEX 8 MOMS_HEART 9 FAMINE 10 PESTILENCE 11 WAR 12 DEATH 13 DUKE_OF_FLIES 14 PEEP 15 LOKI 16 BLASTOCYST 17 GEMINI 18 FISTULA 19 GISH 20 STEVEN 21 CHAD 22 HEADLESS_HORSEMAN 23 THE_FALLEN 23 FALLEN 24 SATAN 25 IT_LIVES 26 THE_HOLLOW 26 HOLLOW 27 THE_CARRION_QUEEN 27 CARRION_QUEEN 28 GURDY_JR 29 THE_HUSK 29 HUSK 30 THE_BLOAT 30 BLOAT 31 LOKII 32 THE_BLIGHTED_OVUM 32 BLIGHTED_OVUM 33 TERATOMA 34 THE_WIDOW 34 WIDOW 35 MASK_OF_INFAMY 36 THE_WRETCHED 36 WRETCHED 37 PIN 38 CONQUEST 39 ISAAC 40 BLUE_BABY 40 QQQ 41 DADDY_LONG_LEGS 42 TRIACHNID 43 THE_HAUNT 43 HAUNT 44 DINGLE 45 MEGA_MAW 46 THE_GATE 46 GATE 47 MEGA_FATTY 48 THE_CAGE 48 CAGE 49 MEGA_GURDY 50 DARK_ONE 51 THE_ADVERSARY 51 ADVERSARY 52 POLYCEPHALUS 53 MR_FRED 54 THE_LAMB 54 LAMB 55 MEGA_SATAN 56 GURGLINGS 57 THE_STAIN 57 STAIN 58 BROWNIE 59 THE_FORSAKEN 59 FORSAKEN 60 LITTLE_HORN 61 RAG_MAN 62 ULTRA_GREED 63 HUSH 64 DANGLE 65 TURDLINGS 66 THE_FRAIL 66 FRAIL 67 RAG_MEGA 68 SISTERS_VIS 69 BIG_HORN 70 DELIRIUM 71 ULTRA_GREEDIER 72 THE_MATRIACH 72 MATRIARCH 73 THE_PILE 73 PILE 74 REAP_CREEP 75 LIL_BLUB 75 BEELZEBLUB 76 WORMWOOD 77 THE_RAINMAKER 77 RAINMAKER 78 THE_VISAGE 78 VISAGE 79 THE_SIREN 79 SIREN 80 TUFF_TWINS 81 THE_HERETIC 81 HERETIC 82 HORNFEL 83 GREAT_GIDEON 84 BABY_PLUM 85 THE_SCOURGE 85 SCOURGE 86 CHIMERA 87 ROTGUT 88 MOTHER 89 MOM_MAUSOLEUM 89 MAUS_MOM 90 MOMS_HEART_MAUSOLEUM 90 MAUS_HEART 91 MIN_MIN 92 CLOG 93 SINGE 94 BUMBINO 95 COLOSTOMIA 96 THE_SHELL 96 SHELL 97 TURDLET 98 RAGLICH 99 DOGMA 100 THE_BEAST 100 BEAST 101 HORNY_BOYS 102 CLUTCH 103 CADAVRA","tags":["Enum"]},{"location":"enums/ButtonActionBitwise.html","title":"Enum \"ButtonActionBitwise\"","text":"Bitset Calculator Value Enumerator Comment 1 &lt;&lt; 0 ACTION_LEFT 1 &lt;&lt; 1 ACTION_RIGHT 1 &lt;&lt; 2 ACTION_UP 1 &lt;&lt; 3 ACTION_DOWN 1 &lt;&lt; 4 ACTION_SHOOTLEFT 1 &lt;&lt; 5 ACTION_SHOOTRIGHT 1 &lt;&lt; 6 ACTION_SHOOTUP 1 &lt;&lt; 7 ACTION_SHOOTDOWN 1 &lt;&lt; 8 ACTION_BOMB 1 &lt;&lt; 9 ACTION_ITEM 1 &lt;&lt; 10 ACTION_PILLCARD 1 &lt;&lt; 11 ACTION_DROP 1 &lt;&lt; 12 ACTION_PAUSE 1 &lt;&lt; 13 ACTION_MAP 1 &lt;&lt; 14 ACTION_MENUCONFIRM 1 &lt;&lt; 15 ACTION_MENUBACK 1 &lt;&lt; 16 ACTION_RESTART 1 &lt;&lt; 17 ACTION_FULLSCREEN 1 &lt;&lt; 18 ACTION_MUTE 1 &lt;&lt; 19 ACTION_JOINMULTIPLAYER 1 &lt;&lt; 20 ACTION_MENULEFT 1 &lt;&lt; 21 ACTION_MENURIGHT 1 &lt;&lt; 22 ACTION_MENUUP 1 &lt;&lt; 23 ACTION_MENUDOWN 1 &lt;&lt; 24 ACTION_MENULT 1 &lt;&lt; 25 ACTION_MENURT 1 &lt;&lt; 26 ACTION_MENUTAB 1 &lt;&lt; 28 ACTION_CONSOLE","tags":["Enum"]},{"location":"enums/CameraStyle.html","title":"Enum \"CameraStyle\"","text":"Value Enumerator Comment 1 ACTIVE_CAM_ON 2 ACTIVE_CAM_OFF","tags":["Enum"]},{"location":"enums/CompletionType.html","title":"Enum \"CompletionType\"","text":"Value Enumerator Comment 0 MOMS_HEART 1 ISAAC 2 SATAN 3 BOSS_RUSH 4 BLUE_BABY 5 LAMB 6 MEGA_SATAN 7 ULTRA_GREED 9 HUSH 11 ULTRA_GREEDIER 12 DELIRIUM 13 MOTHER 14 BEAST","tags":["Enum"]},{"location":"enums/ConceptionFamiliarFlag.html","title":"Enum \"ConceptionFamiliarFlag\"","text":"Bitset Calculator Value Enumerator Comment 1 &lt;&lt; 0 LEECH 1 &lt;&lt; 1 DARK_BUM 1 &lt;&lt; 2 DEMON_BABY 1 &lt;&lt; 3 INCUBUS 1 &lt;&lt; 4 LIL_BRIMSTONE 1 &lt;&lt; 5 SUCCUBUS 1 &lt;&lt; 6 GUARDIAN_ANGEL 1 &lt;&lt; 7 HOLY_WATER 1 &lt;&lt; 8 RELIC 1 &lt;&lt; 9 SWORN_PROTECTOR 1 &lt;&lt; 10 SERAPHIM 1 &lt;&lt; 11 LIL_ABADDON 1 &lt;&lt; 12 TWISTED_PAIR","tags":["Enum"]},{"location":"enums/ConsoleFont.html","title":"Enum \"ConsoleFont\"","text":"Value Enumerator Comment 0 DEFAULT 1 SMALL 2 TINY","tags":["Enum"]},{"location":"enums/DebugFlag.html","title":"Enum \"DebugFlag\"","text":"Bitset Calculator Value Enumerator Comment 1 &lt;&lt; 0 ENTITY_POSITIONS 1 &lt;&lt; 1 GRID 1 &lt;&lt; 2 INFINITE_HP 1 &lt;&lt; 3 HIGH_DAMAGE 1 &lt;&lt; 4 ROOM_INFO 1 &lt;&lt; 5 HITSPHERES 1 &lt;&lt; 6 DAMAGE_VALUES 1 &lt;&lt; 7 INFINITE_ITEM_CHARGES 1 &lt;&lt; 8 HIGH_LUCK 1 &lt;&lt; 9 QUICK_KILL 1 &lt;&lt; 10 GRID_INFO 1 &lt;&lt; 11 PLAYER_ITEM_INFO 1 &lt;&lt; 12 GRID_COLLISION_POINTS 1 &lt;&lt; 13 LUA_MEMORY_USAGE","tags":["Enum"]},{"location":"enums/DeliriumCallbacks.html","title":"Enum \"DeliriumCallbacks\"","text":"<p>This is a list of callbacks exclusive to the behavior of Delirium. These callbacks live under a different namespace as they are too specific when compared to the more general ones found in ModCallbacks.</p>"},{"location":"enums/DeliriumCallbacks.html#transformation","title":"TRANSFORMATION","text":"<p>This callback is fired immediately before the game transforms Delirium into a boss (this also includes when Delirium returns to its normal form). Accepts four parameters: <code>Delirium</code>, <code>Type</code>, <code>Variant</code> and <code>Force</code>. <code>Delirium</code> is the instance of Delirium that is transforming. <code>Type</code> and <code>Variant</code> are the type and variant of the selected boss.  <code>Force</code> is set to <code>false</code> if the game performed the transformation by itself, <code>true</code> if the transformation was requested by the modding API.</p> <p>You may return the following values:</p> <ul> <li><code>true</code>: lets the transformation happen without changing anything.</li> <li><code>false</code>: prevents the transformation, Delirium will remain the same.</li> <li>a table containing at least one value. The first value in this table (index 1, mandatory) is the type of the desired transformation; the second value in this table (index 2, optional, defaults to 0) is the variant of the desired transformation; other indices are ignored.</li> <li>any other value will let the transformation occur naturally.</li> </ul> Name Function Args Optional Args Return Type TRANSFORMATION (EntityDelirium Delirium, int Type, int Variant, bool Force) - boolean or table"},{"location":"enums/DeliriumCallbacks.html#post_transformation","title":"POST_TRANSFORMATION","text":"<p>This callback is fired immediately after the game transform Delirium into a boss (this also includes when Delirium returns to its normal form or transforms into the same boss). Accepts one parameter: <code>Delirium</code>, which is the instance of Delirium that transformed. This callback returns nothing.</p> Name Function Args Optional Args Return Type POST_TRANSFORMATION (EntityDelirium Delirium) - void"},{"location":"enums/DialogButtons.html","title":"Enum \"DialogButtons\"","text":"Value Enumerator Comment 0 OK 1 OK_CANCEL 2 ABORT_RETRY_IGNORE 3 YES_NO_CANCEL 4 YES_NO 5 RETRY_CANCEL 6 CANCEL_TRY_CONTINUE 16384 HELP","tags":["Enum"]},{"location":"enums/DialogIcons.html","title":"Enum \"DialogIcons\"","text":"Value Enumerator Comment 16 ERROR 16 HAND 16 STOP 32 QUESTION 48 EXCLAMATION 48 WARNING 64 ASTERISK 64 INFORMATION","tags":["Enum"]},{"location":"enums/DialogReturn.html","title":"Enum \"DialogReturn\"","text":"Value Enumerator Comment 1 OK 2 CANCEL 3 ABORT 4 RETRY 5 IGNORE 6 YES 7 NO 10 TRY_AGAIN 11 CONTINUE","tags":["Enum"]},{"location":"enums/Dimension.html","title":"Enum \"Dimension\"","text":"Value Enumerator Comment -1 CURRENT 0 NORMAL 1 KNIFE_PUZZLE 1 MIRROR 1 MINESHAFT 2 DEATH_CERTIFICATE","tags":["Enum"]},{"location":"enums/DipSubType.html","title":"Enum \"DipSubType\"","text":"Value Enumerator Comment 0 NORMAL 1 RED 2 CHUNKY 2 CORN 3 GOLDEN 4 RAINBOW 5 BLACK 6 HOLY 6 WHITE 12 STONE 12 PETRIFIED 13 FLAMING 14 STINKY 14 POISON 20 BROWNIE","tags":["Enum"]},{"location":"enums/DwmWindowAttribute.html","title":"Enum \"DwmWindowAttribute\"","text":"Value Enumerator Comment 1 DWMWA_NCRENDERING_ENABLED 2 DWMWA_NCRENDERING_POLICY 3 DWMWA_TRANSITIONS_FORCEDISABLED 4 DWMWA_ALLOW_NCPAINT 5 DWMWA_CAPTION_BUTTON_BOUNDS 6 DWMWA_NONCLIENT_RTL_LAYOUT 7 DWMWA_FORCE_ICONIC_REPRESENTATION 8 DWMWA_FLIP3D_POLICY 9 DWMWA_EXTENDED_FRAME_BOUNDS 10 DWMWA_HAS_ICONIC_BITMAP 11 DWMWA_DISALLOW_PEEK 12 DWMWA_EXCLUDED_FROM_PEEK 13 DWMWA_CLOAK blocked 14 DWMWA_CLOAKED blocked 15 DWMWA_FREEZE_REPRESENTATION 16 DWMWA_PASSIVE_UPDATE_MODE 17 DWMWA_USE_HOSTBACKDROPBRUSH 20 DWMWA_USE_IMMERSIVE_DARK_MODE 33 DWMWA_WINDOW_CORNER_PREFERENCE 34 DWMWA_BORDER_COLOR 35 DWMWA_CAPTION_COLOR 36 DWMWA_TEXT_COLOR 37 DWMWA_VISIBLE_FRAME_BORDER_THICKNESS 38 DWMWA_SYSTEMBACKDROP_TYPE 39 DWMWA_LAST","tags":["Enum"]},{"location":"enums/Ending.html","title":"Enum \"Ending\"","text":"Value Enumerator Comment 1 DIE 2 EPILOGUE 3 CREDITS 4 SATAN 4 ENDING_12 5 ISAAC 5 ENDING_13 6 LAMB 6 ENDING_15 7 BLUE_BABY 7 ENDING_14 8 MEGA_SATAN 8 ENDING_16 9 ULTRA_GREED 9 ENDING_18 10 HUSH 10 ENDING_17 11 DELIRIUM 11 ENDING_20 12 ULTRA_GREEDIER 12 ENDING_19 13 MOTHER 13 ENDING_21 14 BEAST 14 FINAL_ENDING","tags":["Enum"]},{"location":"enums/EntityPoopVariant.html","title":"Enum \"EntityPoopVariant\"","text":"Value Enumerator Comment 0 NORMAL 1 GOLDEN 11 STONE 11 PETRIFIED 12 CHUNKY 12 CORN 13 FLAMING 14 STINKY 14 POISON 15 BLACK 16 HOLY 16 WHITE","tags":["Enum"]},{"location":"enums/EntityTag.html","title":"Enum \"EntityTag\"","text":"Bitset Calculator Value Enumerator Comment 1 &lt;&lt; 0 FLY 1 &lt;&lt; 1 SPIDER 1 &lt;&lt; 3 GHOST 1 &lt;&lt; 4 NOREROLL 1 &lt;&lt; 5 CANSACRIFICE 1 &lt;&lt; 6 EXPLOSIVE_SOUL 1 &lt;&lt; 7 HOMING_SOUL 1 &lt;&lt; 8 BRIMSTONE_SOUL 1 &lt;&lt; 9 NODELIRIUM","tags":["Enum"]},{"location":"enums/EventCounter.html","title":"Enum \"EventCounter\"","text":"Value Enumerator Comment 0 NULL Seems unused 1 MOM_KILLS Stat from the stat screen. Counts kills of Moms heart (Does only count instances where the kill is combined with run \"progression\". aka in final room and spawning a trapdoor/chest/trophy) 2 ROCKS_DESTROYED Includes all rock types including tinted rocks 3 TINTED_ROCKS_DESTROYED 4 SUPER_SPECIAL_ROCKS_DESTROYED Super Special Rocks are Tinted Rock variants with smaller marks and lack of discoloration 5 POOP_DESTROYED Includes all poop types. Red poop counts everytime it gets destroyed 6 PILLS_EATEN Includes all pills including horse pills 7 XIII_DEATH_CARD_USED 8 UNKNOWN_EVENT_8 9 ARCADES_ENTERED Also includes teleports with goto. 10 DEATHS does not increase when revived 11 ISAAC_KILLS How often was the final boss of cathedral killed. (Isaac) (Does only count instances where the kill is combined with run \"progression\". aka in final room and spawning a trapdoor/chest/trophy) 12 SHOPKEEPER_KILLED 13 SATAN_KILLS How often was the final boss of sheol killed. (Satan) (Does only count instances where the kill is combined with run \"progression\". aka in final room and spawning a trapdoor/chest/trophy) 14 SHELLGAMES_PLAYED How often the shellgame was played 15 ANGEL_DEALS_TAKEN 16 DEVIL_DEALS_TAKEN 17 BLOOD_DONATION_MACHINE_USED 18 SLOT_MACHINES_BROKEN 19 UNKNOWN_EVENT_19 20 DONATE_MACHINE_COUNTER 20 DONATION_MACHINE_COUNTER 21 EDEN_TOKENS 22 STREAK_COUNTER counts your current streak. 23 BEST_STREAK 24 BLUE_BABY_KILLS How often was the final boss of chest killed. (??? - Blue Baby) (Does only count instances where the kill is combined with run \"progression\". aka in final room and spawning a trapdoor/chest/trophy) 25 LAMB_KILLS How often was the final boss of dark room killed. (The lamb) (Does only count instances where the kill is combined with run \"progression\". aka in final room and spawning a trapdoor/chest/trophy) 26 MEGA_SATAN_KILLS 27 PROGRESSION_KILL_MOMS_HEART_WITH_ISAAC (0 for not done. 1 for normal difficulty, 2 for hard) 28 PROGRESSION_KILL_MOMS_HEART_WITH_MAGDALENE (0 for not done. 1 for normal difficulty, 2 for hard) 29 PROGRESSION_KILL_MOMS_HEART_WITH_CAIN (0 for not done. 1 for normal difficulty, 2 for hard) 30 PROGRESSION_KILL_MOMS_HEART_WITH_JUDAS (0 for not done. 1 for normal difficulty, 2 for hard) 31 PROGRESSION_KILL_MOMS_HEART_WITH_BLUE_BABY (0 for not done. 1 for normal difficulty, 2 for hard) 32 PROGRESSION_KILL_MOMS_HEART_WITH_EVE (0 for not done. 1 for normal difficulty, 2 for hard) 33 PROGRESSION_KILL_MOMS_HEART_WITH_SAMSON (0 for not done. 1 for normal difficulty, 2 for hard) 34 PROGRESSION_KILL_MOMS_HEART_WITH_AZAZEL (0 for not done. 1 for normal difficulty, 2 for hard) 35 PROGRESSION_KILL_MOMS_HEART_WITH_LAZARUS (0 for not done. 1 for normal difficulty, 2 for hard) 36 PROGRESSION_KILL_MOMS_HEART_WITH_EDEN (0 for not done. 1 for normal difficulty, 2 for hard) 37 PROGRESSION_KILL_MOMS_HEART_WITH_THE_LOST (0 for not done. 1 for normal difficulty, 2 for hard) 38 PROGRESSION_KILL_MOMS_HEART_WITH_LILITH (0 for not done. 1 for normal difficulty, 2 for hard) 39 PROGRESSION_KILL_MOMS_HEART_WITH_KEEPER (0 for not done. 1 for normal difficulty, 2 for hard) 40 PROGRESSION_KILL_MOMS_HEART_WITH_APOLLYON (0 for not done. 1 for normal difficulty, 2 for hard) 41 PROGRESSION_KILL_ISAAC_WITH_ISAAC (0 for not done. 1 for normal difficulty, 2 for hard) 42 PROGRESSION_KILL_ISAAC_WITH_MAGDALENE (0 for not done. 1 for normal difficulty, 2 for hard) 43 PROGRESSION_KILL_ISAAC_WITH_CAIN (0 for not done. 1 for normal difficulty, 2 for hard) 44 PROGRESSION_KILL_ISAAC_WITH_JUDAS (0 for not done. 1 for normal difficulty, 2 for hard) 45 PROGRESSION_KILL_ISAAC_WITH_BLUE_BABY (0 for not done. 1 for normal difficulty, 2 for hard) 46 PROGRESSION_KILL_ISAAC_WITH_EVE (0 for not done. 1 for normal difficulty, 2 for hard) 47 PROGRESSION_KILL_ISAAC_WITH_SAMSON (0 for not done. 1 for normal difficulty, 2 for hard) 48 PROGRESSION_KILL_ISAAC_WITH_AZAZEL (0 for not done. 1 for normal difficulty, 2 for hard) 49 PROGRESSION_KILL_ISAAC_WITH_LAZARUS (0 for not done. 1 for normal difficulty, 2 for hard) 50 PROGRESSION_KILL_ISAAC_WITH_EDEN (0 for not done. 1 for normal difficulty, 2 for hard) 51 PROGRESSION_KILL_ISAAC_WITH_THE_LOST (0 for not done. 1 for normal difficulty, 2 for hard) 52 PROGRESSION_KILL_ISAAC_WITH_LILITH (0 for not done. 1 for normal difficulty, 2 for hard) 53 PROGRESSION_KILL_ISAAC_WITH_KEEPER (0 for not done. 1 for normal difficulty, 2 for hard) 54 PROGRESSION_KILL_ISAAC_WITH_APOLLYON (0 for not done. 1 for normal difficulty, 2 for hard) 55 PROGRESSION_KILL_SATAN_WITH_ISAAC (0 for not done. 1 for normal difficulty, 2 for hard) 56 PROGRESSION_KILL_SATAN_WITH_MAGDALENE (0 for not done. 1 for normal difficulty, 2 for hard) 57 PROGRESSION_KILL_SATAN_WITH_CAIN (0 for not done. 1 for normal difficulty, 2 for hard) 58 PROGRESSION_KILL_SATAN_WITH_JUDAS (0 for not done. 1 for normal difficulty, 2 for hard) 59 PROGRESSION_KILL_SATAN_WITH_BLUE_BABY (0 for not done. 1 for normal difficulty, 2 for hard) 60 PROGRESSION_KILL_SATAN_WITH_EVE (0 for not done. 1 for normal difficulty, 2 for hard) 61 PROGRESSION_KILL_SATAN_WITH_SAMSON (0 for not done. 1 for normal difficulty, 2 for hard) 62 PROGRESSION_KILL_SATAN_WITH_AZAZEL (0 for not done. 1 for normal difficulty, 2 for hard) 63 PROGRESSION_KILL_SATAN_WITH_LAZARUS (0 for not done. 1 for normal difficulty, 2 for hard) 64 PROGRESSION_KILL_SATAN_WITH_EDEN (0 for not done. 1 for normal difficulty, 2 for hard) 65 PROGRESSION_KILL_SATAN_WITH_THE_LOST (0 for not done. 1 for normal difficulty, 2 for hard) 66 PROGRESSION_KILL_SATAN_WITH_LILITH (0 for not done. 1 for normal difficulty, 2 for hard) 67 PROGRESSION_KILL_SATAN_WITH_KEEPER (0 for not done. 1 for normal difficulty, 2 for hard) 68 PROGRESSION_KILL_SATAN_WITH_APOLLYON (0 for not done. 1 for normal difficulty, 2 for hard) 69 PROGRESSION_BOSSRUSH_CLEARED_WITH_ISAAC (0 for not done. 1 for normal difficulty, 2 for hard) 70 PROGRESSION_BOSSRUSH_CLEARED_WITH_MAGDALENE (0 for not done. 1 for normal difficulty, 2 for hard) 71 PROGRESSION_BOSSRUSH_CLEARED_WITH_CAIN (0 for not done. 1 for normal difficulty, 2 for hard) 72 PROGRESSION_BOSSRUSH_CLEARED_WITH_JUDAS (0 for not done. 1 for normal difficulty, 2 for hard) 73 PROGRESSION_BOSSRUSH_CLEARED_WITH_BLUE_BABY (0 for not done. 1 for normal difficulty, 2 for hard) 74 PROGRESSION_BOSSRUSH_CLEARED_WITH_EVE (0 for not done. 1 for normal difficulty, 2 for hard) 75 PROGRESSION_BOSSRUSH_CLEARED_WITH_SAMSON (0 for not done. 1 for normal difficulty, 2 for hard) 76 PROGRESSION_BOSSRUSH_CLEARED_WITH_AZAZEL (0 for not done. 1 for normal difficulty, 2 for hard) 77 PROGRESSION_BOSSRUSH_CLEARED_WITH_LAZARUS (0 for not done. 1 for normal difficulty, 2 for hard) 78 PROGRESSION_BOSSRUSH_CLEARED_WITH_EDEN (0 for not done. 1 for normal difficulty, 2 for hard) 79 PROGRESSION_BOSSRUSH_CLEARED_WITH_THE_LOST (0 for not done. 1 for normal difficulty, 2 for hard) 80 PROGRESSION_BOSSRUSH_CLEARED_WITH_LILITH (0 for not done. 1 for normal difficulty, 2 for hard) 81 PROGRESSION_BOSSRUSH_CLEARED_WITH_KEEPER (0 for not done. 1 for normal difficulty, 2 for hard) 82 PROGRESSION_BOSSRUSH_CLEARED_WITH_APOLLYON (0 for not done. 1 for normal difficulty, 2 for hard) 83 PROGRESSION_KILL_BLUE_BABY_WITH_ISAAC (0 for not done. 1 for normal difficulty, 2 for hard) 84 PROGRESSION_KILL_BLUE_BABY_WITH_MAGDALENE (0 for not done. 1 for normal difficulty, 2 for hard) 85 PROGRESSION_KILL_BLUE_BABY_WITH_CAIN (0 for not done. 1 for normal difficulty, 2 for hard) 86 PROGRESSION_KILL_BLUE_BABY_WITH_JUDAS (0 for not done. 1 for normal difficulty, 2 for hard) 87 PROGRESSION_KILL_BLUE_BABY_WITH_BLUE_BABY (0 for not done. 1 for normal difficulty, 2 for hard) 88 PROGRESSION_KILL_BLUE_BABY_WITH_EVE (0 for not done. 1 for normal difficulty, 2 for hard) 89 PROGRESSION_KILL_BLUE_BABY_WITH_SAMSON (0 for not done. 1 for normal difficulty, 2 for hard) 90 PROGRESSION_KILL_BLUE_BABY_WITH_AZAZEL (0 for not done. 1 for normal difficulty, 2 for hard) 91 PROGRESSION_KILL_BLUE_BABY_WITH_LAZARUS (0 for not done. 1 for normal difficulty, 2 for hard) 92 PROGRESSION_KILL_BLUE_BABY_WITH_EDEN (0 for not done. 1 for normal difficulty, 2 for hard) 93 PROGRESSION_KILL_BLUE_BABY_WITH_THE_LOST (0 for not done. 1 for normal difficulty, 2 for hard) 94 PROGRESSION_KILL_BLUE_BABY_WITH_LILITH (0 for not done. 1 for normal difficulty, 2 for hard) 95 PROGRESSION_KILL_BLUE_BABY_WITH_KEEPER (0 for not done. 1 for normal difficulty, 2 for hard) 96 PROGRESSION_KILL_BLUE_BABY_WITH_APOLLYON (0 for not done. 1 for normal difficulty, 2 for hard) 97 PROGRESSION_KILL_THE_LAMB_WITH_ISAAC (0 for not done. 1 for normal difficulty, 2 for hard) 98 PROGRESSION_KILL_THE_LAMB_WITH_MAGDALENE (0 for not done. 1 for normal difficulty, 2 for hard) 99 PROGRESSION_KILL_THE_LAMB_WITH_CAIN (0 for not done. 1 for normal difficulty, 2 for hard) 100 PROGRESSION_KILL_THE_LAMB_WITH_JUDAS (0 for not done. 1 for normal difficulty, 2 for hard) 101 PROGRESSION_KILL_THE_LAMB_WITH_BLUE_BABY (0 for not done. 1 for normal difficulty, 2 for hard) 102 PROGRESSION_KILL_THE_LAMB_WITH_EVE (0 for not done. 1 for normal difficulty, 2 for hard) 103 PROGRESSION_KILL_THE_LAMB_WITH_SAMSON (0 for not done. 1 for normal difficulty, 2 for hard) 104 PROGRESSION_KILL_THE_LAMB_WITH_AZAZEL (0 for not done. 1 for normal difficulty, 2 for hard) 105 PROGRESSION_KILL_THE_LAMB_WITH_LAZARUS (0 for not done. 1 for normal difficulty, 2 for hard) 106 PROGRESSION_KILL_THE_LAMB_WITH_EDEN (0 for not done. 1 for normal difficulty, 2 for hard) 107 PROGRESSION_KILL_THE_LAMB_WITH_THE_LOST (0 for not done. 1 for normal difficulty, 2 for hard) 108 PROGRESSION_KILL_THE_LAMB_WITH_LILITH (0 for not done. 1 for normal difficulty, 2 for hard) 109 PROGRESSION_KILL_THE_LAMB_WITH_KEEPER (0 for not done. 1 for normal difficulty, 2 for hard) 110 PROGRESSION_KILL_THE_LAMB_WITH_APOLLYON (0 for not done. 1 for normal difficulty, 2 for hard) 111 BOSSRUSHS_CLEARED 112 UNKNOWN_EVENT_112 seems to only be at 1 for a dead god file 113 NEGATIVE_STREAK_COUNTER counts your current negative streak. aka consecutive runs ending with death. 114 EDENS_BLESSINGS_NEXT_RUN number of edens blessing items added to the player in next run 115 GREED_DONATION_MACHINE_COUNTER 116 PROGRESSION_KILL_MEGA_SATAN_WITH_ISAAC (0 for not done. 1 for normal difficulty, 2 for hard) 117 PROGRESSION_KILL_MEGA_SATAN_WITH_MAGDALENE (0 for not done. 1 for normal difficulty, 2 for hard) 118 PROGRESSION_KILL_MEGA_SATAN_WITH_CAIN (0 for not done. 1 for normal difficulty, 2 for hard) 119 PROGRESSION_KILL_MEGA_SATAN_WITH_JUDAS (0 for not done. 1 for normal difficulty, 2 for hard) 120 PROGRESSION_KILL_MEGA_SATAN_WITH_BLUE_BABY (0 for not done. 1 for normal difficulty, 2 for hard) 121 PROGRESSION_KILL_MEGA_SATAN_WITH_EVE (0 for not done. 1 for normal difficulty, 2 for hard) 122 PROGRESSION_KILL_MEGA_SATAN_WITH_SAMSON (0 for not done. 1 for normal difficulty, 2 for hard) 123 PROGRESSION_KILL_MEGA_SATAN_WITH_AZAZEL (0 for not done. 1 for normal difficulty, 2 for hard) 124 PROGRESSION_KILL_MEGA_SATAN_WITH_LAZARUS (0 for not done. 1 for normal difficulty, 2 for hard) 125 PROGRESSION_KILL_MEGA_SATAN_WITH_EDEN (0 for not done. 1 for normal difficulty, 2 for hard) 126 PROGRESSION_KILL_MEGA_SATAN_WITH_THE_LOST (0 for not done. 1 for normal difficulty, 2 for hard) 127 PROGRESSION_KILL_MEGA_SATAN_WITH_LILITH (0 for not done. 1 for normal difficulty, 2 for hard) 128 PROGRESSION_KILL_MEGA_SATAN_WITH_KEEPER (0 for not done. 1 for normal difficulty, 2 for hard) 129 PROGRESSION_KILL_MEGA_SATAN_WITH_APOLLYON (0 for not done. 1 for normal difficulty, 2 for hard) 130 PROGRESSION_GREED_MODE_CLEARED_WITH_ISAAC (value = 0, 1 for greed mode, 2 for greedier) 131 PROGRESSION_GREED_MODE_CLEARED_WITH_MAGDALENE (value = 0, 1 for greed mode, 2 for greedier) 132 PROGRESSION_GREED_MODE_CLEARED_WITH_CAIN (value = 0, 1 for greed mode, 2 for greedier) 133 PROGRESSION_GREED_MODE_CLEARED_WITH_JUDAS (value = 0, 1 for greed mode, 2 for greedier) 134 PROGRESSION_GREED_MODE_CLEARED_WITH_BLUE_BABY (value = 0, 1 for greed mode, 2 for greedier) 135 PROGRESSION_GREED_MODE_CLEARED_WITH_EVE (value = 0, 1 for greed mode, 2 for greedier) 136 PROGRESSION_GREED_MODE_CLEARED_WITH_SAMSON (value = 0, 1 for greed mode, 2 for greedier) 137 PROGRESSION_GREED_MODE_CLEARED_WITH_AZAZEL (value = 0, 1 for greed mode, 2 for greedier) 138 PROGRESSION_GREED_MODE_CLEARED_WITH_LAZARUS (value = 0, 1 for greed mode, 2 for greedier) 139 PROGRESSION_GREED_MODE_CLEARED_WITH_EDEN (value = 0, 1 for greed mode, 2 for greedier) 140 PROGRESSION_GREED_MODE_CLEARED_WITH_THE_LOST (value = 0, 1 for greed mode, 2 for greedier) 141 PROGRESSION_GREED_MODE_CLEARED_WITH_LILITH (value = 0, 1 for greed mode, 2 for greedier) 142 PROGRESSION_GREED_MODE_CLEARED_WITH_KEEPER (value = 0, 1 for greed mode, 2 for greedier) 143 PROGRESSION_GREED_MODE_CLEARED_WITH_APOLLYON (value = 0, 1 for greed mode, 2 for greedier) 144 PROGRESSION_KILL_HUSH_WITH_ISAAC (0 for not done. 1 for normal difficulty, 2 for hard) 145 PROGRESSION_KILL_HUSH_WITH_MAGDALENE (0 for not done. 1 for normal difficulty, 2 for hard) 146 PROGRESSION_KILL_HUSH_WITH_CAIN (0 for not done. 1 for normal difficulty, 2 for hard) 147 PROGRESSION_KILL_HUSH_WITH_JUDAS (0 for not done. 1 for normal difficulty, 2 for hard) 148 PROGRESSION_KILL_HUSH_WITH_BLUE_BABY (0 for not done. 1 for normal difficulty, 2 for hard) 149 PROGRESSION_KILL_HUSH_WITH_EVE (0 for not done. 1 for normal difficulty, 2 for hard) 150 PROGRESSION_KILL_HUSH_WITH_SAMSON (0 for not done. 1 for normal difficulty, 2 for hard) 151 PROGRESSION_KILL_HUSH_WITH_AZAZEL (0 for not done. 1 for normal difficulty, 2 for hard) 152 PROGRESSION_KILL_HUSH_WITH_LAZARUS (0 for not done. 1 for normal difficulty, 2 for hard) 153 PROGRESSION_KILL_HUSH_WITH_EDEN (0 for not done. 1 for normal difficulty, 2 for hard) 154 PROGRESSION_KILL_HUSH_WITH_THE_LOST (0 for not done. 1 for normal difficulty, 2 for hard) 155 PROGRESSION_KILL_HUSH_WITH_LILITH (0 for not done. 1 for normal difficulty, 2 for hard) 156 PROGRESSION_KILL_HUSH_WITH_KEEPER (0 for not done. 1 for normal difficulty, 2 for hard) 157 PROGRESSION_KILL_HUSH_WITH_APOLLYON (0 for not done. 1 for normal difficulty, 2 for hard) 158 HUSH_KILLS How often Hush was killed. (Does only count instances where the kill is combined with run \"progression\". aka in final room and spawning a trapdoor/chest/trophy) 159 GREED_MODE_COINS_DONATED_WITH_ISAAC 160 GREED_MODE_COINS_DONATED_WITH_MAGDALENE 161 GREED_MODE_COINS_DONATED_WITH_CAIN 162 GREED_MODE_COINS_DONATED_WITH_JUDAS 163 GREED_MODE_COINS_DONATED_WITH_BLUE 164 GREED_MODE_COINS_DONATED_WITH_EVE 165 GREED_MODE_COINS_DONATED_WITH_SAMSON 166 GREED_MODE_COINS_DONATED_WITH_AZAZEL 167 GREED_MODE_COINS_DONATED_WITH_LAZARUS 168 GREED_MODE_COINS_DONATED_WITH_EDEN 169 GREED_MODE_COINS_DONATED_WITH_THE_LOST 170 GREED_MODE_COINS_DONATED_WITH_LILITH 171 GREED_MODE_COINS_DONATED_WITH_KEEPER 172 GREED_MODE_COINS_DONATED_WITH_APOLLYON 173 PROGRESSION_KILL_DELIRIUM_WITH_ISAAC (0 for not done. 1 for normal difficulty, 2 for hard) 174 PROGRESSION_KILL_DELIRIUM_WITH_MAGDALENE (0 for not done. 1 for normal difficulty, 2 for hard) 175 PROGRESSION_KILL_DELIRIUM_WITH_CAIN (0 for not done. 1 for normal difficulty, 2 for hard) 176 PROGRESSION_KILL_DELIRIUM_WITH_JUDAS (0 for not done. 1 for normal difficulty, 2 for hard) 177 PROGRESSION_KILL_DELIRIUM_WITH_BLUE_BABY (0 for not done. 1 for normal difficulty, 2 for hard) 178 PROGRESSION_KILL_DELIRIUM_WITH_EVE (0 for not done. 1 for normal difficulty, 2 for hard) 179 PROGRESSION_KILL_DELIRIUM_WITH_SAMSON (0 for not done. 1 for normal difficulty, 2 for hard) 180 PROGRESSION_KILL_DELIRIUM_WITH_AZAZEL (0 for not done. 1 for normal difficulty, 2 for hard) 181 PROGRESSION_KILL_DELIRIUM_WITH_LAZARUS (0 for not done. 1 for normal difficulty, 2 for hard) 182 PROGRESSION_KILL_DELIRIUM_WITH_EDEN (0 for not done. 1 for normal difficulty, 2 for hard) 183 PROGRESSION_KILL_DELIRIUM_WITH_THE_LOST (0 for not done. 1 for normal difficulty, 2 for hard) 184 PROGRESSION_KILL_DELIRIUM_WITH_LILITH (0 for not done. 1 for normal difficulty, 2 for hard) 185 PROGRESSION_KILL_DELIRIUM_WITH_KEEPER (0 for not done. 1 for normal difficulty, 2 for hard) 186 PROGRESSION_KILL_DELIRIUM_WITH_APOLLYON (0 for not done. 1 for normal difficulty, 2 for hard) 187 DELIRIUM_KILLS How often was the final boss of the void was killed. (Delirium) (Does only count instances where the kill is combined with run \"progression\". aka in final room and spawning a trapdoor/chest/trophy) 188 CHARACTER_LAST_RUN_WIN Potential Bitmask containing the ids of the characters that won the last run, including coop. gets cleared on run restart. TODO: Usage and pattern still unknown!!! 189 UNKNOWN_EVENT_189 really big counter 190 DAILYS_PLAYED counts dailies played 191 DAILY_RUN_IS_ACTIVE Set to 1 when daily is currently played. Set to 0 when trophy was collected 192 DAILYS_STREAK Numbers of dailies won in a row 193 DAILYS_WON Number of dailies won 194 RAINBOW_POOP_DESTROYED 195 BATTERIES_COLLECTED Sum of all batteries collected 196 CARDS_USED Sum of cards used 197 SHOP_ITEMS_BOUGHT Sum of shop items bought. this includes devil deals, dark room red chest deals, and black market deals 198 CHESTS_OPENED_WITH_KEY Sum of all golden and Eternal Chests opened. Mega chests dont count 199 SECRET_ROOMS_WALLS_OPENED Includes super secret rooms and counts walls that lead to secret rooms already entered or discovered. Also counts the door towards the mines. Does not count X-Ray Vision effect 200 BLOOD_CLOT_ITEM_AQUIRED 201 RUBBER_CEMENT_ITEM_AQUIRED 202 BEDS_USED Sleeping in a bed 203 PROGRESSION_KILL_MOMS_HEART_WITH_THE_FORGOTTEN (0 for not done. 1 for normal difficulty, 2 for hard) 204 PROGRESSION_KILL_ISAAC_WITH_THE_FORGOTTEN (0 for not done. 1 for normal difficulty, 2 for hard) 205 PROGRESSION_KILL_SATAN_WITH_THE_FORGOTTEN (0 for not done. 1 for normal difficulty, 2 for hard) 206 PROGRESSION_BOSSRUSH_CLEARED_WITH_THE_FORGOTTEN (0 for not done. 1 for normal difficulty, 2 for hard) 207 PROGRESSION_KILL_BLUE_BABY_WITH_THE_FORGOTTEN (0 for not done. 1 for normal difficulty, 2 for hard) 208 PROGRESSION_KILL_THE_LAMB_WITH_THE_FORGOTTEN (0 for not done. 1 for normal difficulty, 2 for hard) 209 PROGRESSION_KILL_MEGA_SATAN_WITH_THE_FORGOTTEN (0 for not done. 1 for normal difficulty, 2 for hard) 210 PROGRESSION_GREED_MODE_CLEARED_WITH_THE_FORGOTTEN (0 for not done. 1 for normal difficulty, 2 for hard) 211 PROGRESSION_KILL_HUSH_WITH_THE_FORGOTTEN (0 for not done. 1 for normal difficulty, 2 for hard) 212 GREED_MODE_COINS_DONATED_WITH_FORGOTTEN 213 PROGRESSION_KILL_DELIRIUM_WITH_THE_FORGOTTEN (0 for not done. 1 for normal difficulty, 2 for hard) 214 PROGRESSION_KILL_MOMS_HEART_WITH_BETHANY (0 for not done. 1 for normal difficulty, 2 for hard) 215 PROGRESSION_KILL_MOMS_HEART_WITH_JACOB_AND_ESAU (0 for not done. 1 for normal difficulty, 2 for hard) 216 PROGRESSION_KILL_MOMS_HEART_WITH_T_ISAAC (0 for not done. 1 for normal difficulty, 2 for hard) 217 PROGRESSION_KILL_MOMS_HEART_WITH_T_MAGDALENE (0 for not done. 1 for normal difficulty, 2 for hard) 218 PROGRESSION_KILL_MOMS_HEART_WITH_T_CAIN (0 for not done. 1 for normal difficulty, 2 for hard) 219 PROGRESSION_KILL_MOMS_HEART_WITH_T_JUDAS (0 for not done. 1 for normal difficulty, 2 for hard) 220 PROGRESSION_KILL_MOMS_HEART_WITH_T_BLUE_BABY (0 for not done. 1 for normal difficulty, 2 for hard) 221 PROGRESSION_KILL_MOMS_HEART_WITH_T_EVE (0 for not done. 1 for normal difficulty, 2 for hard) 222 PROGRESSION_KILL_MOMS_HEART_WITH_T_SAMSON (0 for not done. 1 for normal difficulty, 2 for hard) 223 PROGRESSION_KILL_MOMS_HEART_WITH_T_AZAZEL (0 for not done. 1 for normal difficulty, 2 for hard) 224 PROGRESSION_KILL_MOMS_HEART_WITH_T_LAZARUS (0 for not done. 1 for normal difficulty, 2 for hard) 225 PROGRESSION_KILL_MOMS_HEART_WITH_T_EDEN (0 for not done. 1 for normal difficulty, 2 for hard) 226 PROGRESSION_KILL_MOMS_HEART_WITH_T_THE_LOST (0 for not done. 1 for normal difficulty, 2 for hard) 227 PROGRESSION_KILL_MOMS_HEART_WITH_T_LILITH (0 for not done. 1 for normal difficulty, 2 for hard) 228 PROGRESSION_KILL_MOMS_HEART_WITH_T_KEEPER (0 for not done. 1 for normal difficulty, 2 for hard) 229 PROGRESSION_KILL_MOMS_HEART_WITH_T_APOLLYON (0 for not done. 1 for normal difficulty, 2 for hard) 230 PROGRESSION_KILL_MOMS_HEART_WITH_T_THE_FORGOTTEN (0 for not done. 1 for normal difficulty, 2 for hard) 231 PROGRESSION_KILL_MOMS_HEART_WITH_T_BETHANY (0 for not done. 1 for normal difficulty, 2 for hard) 232 PROGRESSION_KILL_MOMS_HEART_WITH_T_JACOB_AND_ESAU (0 for not done. 1 for normal difficulty, 2 for hard) 233 PROGRESSION_KILL_ISAAC_WITH_BETHANY (0 for not done. 1 for normal difficulty, 2 for hard) 234 PROGRESSION_KILL_ISAAC_WITH_JACOB_AND_ESAU (0 for not done. 1 for normal difficulty, 2 for hard) 235 PROGRESSION_KILL_ISAAC_WITH_T_ISAAC (0 for not done. 1 for normal difficulty, 2 for hard) 236 PROGRESSION_KILL_ISAAC_WITH_T_MAGDALENE (0 for not done. 1 for normal difficulty, 2 for hard) 237 PROGRESSION_KILL_ISAAC_WITH_T_CAIN (0 for not done. 1 for normal difficulty, 2 for hard) 238 PROGRESSION_KILL_ISAAC_WITH_T_JUDAS (0 for not done. 1 for normal difficulty, 2 for hard) 239 PROGRESSION_KILL_ISAAC_WITH_T_BLUE_BABY (0 for not done. 1 for normal difficulty, 2 for hard) 240 PROGRESSION_KILL_ISAAC_WITH_T_EVE (0 for not done. 1 for normal difficulty, 2 for hard) 241 PROGRESSION_KILL_ISAAC_WITH_T_SAMSON (0 for not done. 1 for normal difficulty, 2 for hard) 242 PROGRESSION_KILL_ISAAC_WITH_T_AZAZEL (0 for not done. 1 for normal difficulty, 2 for hard) 243 PROGRESSION_KILL_ISAAC_WITH_T_LAZARUS (0 for not done. 1 for normal difficulty, 2 for hard) 244 PROGRESSION_KILL_ISAAC_WITH_T_EDEN (0 for not done. 1 for normal difficulty, 2 for hard) 245 PROGRESSION_KILL_ISAAC_WITH_T_THE_LOST (0 for not done. 1 for normal difficulty, 2 for hard) 246 PROGRESSION_KILL_ISAAC_WITH_T_LILITH (0 for not done. 1 for normal difficulty, 2 for hard) 247 PROGRESSION_KILL_ISAAC_WITH_T_KEEPER (0 for not done. 1 for normal difficulty, 2 for hard) 248 PROGRESSION_KILL_ISAAC_WITH_T_APOLLYON (0 for not done. 1 for normal difficulty, 2 for hard) 249 PROGRESSION_KILL_ISAAC_WITH_T_THE_FORGOTTEN (0 for not done. 1 for normal difficulty, 2 for hard) 250 PROGRESSION_KILL_ISAAC_WITH_T_BETHANY (0 for not done. 1 for normal difficulty, 2 for hard) 251 PROGRESSION_KILL_ISAAC_WITH_T_JACOB_AND_ESAU (0 for not done. 1 for normal difficulty, 2 for hard) 252 PROGRESSION_KILL_SATAN_WITH_BETHANY (0 for not done. 1 for normal difficulty, 2 for hard) 253 PROGRESSION_KILL_SATAN_WITH_JACOB_AND_ESAU (0 for not done. 1 for normal difficulty, 2 for hard) 254 PROGRESSION_KILL_SATAN_WITH_T_ISAAC (0 for not done. 1 for normal difficulty, 2 for hard) 255 PROGRESSION_KILL_SATAN_WITH_T_MAGDALENE (0 for not done. 1 for normal difficulty, 2 for hard) 256 PROGRESSION_KILL_SATAN_WITH_T_CAIN (0 for not done. 1 for normal difficulty, 2 for hard) 257 PROGRESSION_KILL_SATAN_WITH_T_JUDAS (0 for not done. 1 for normal difficulty, 2 for hard) 258 PROGRESSION_KILL_SATAN_WITH_T_BLUE_BABY (0 for not done. 1 for normal difficulty, 2 for hard) 259 PROGRESSION_KILL_SATAN_WITH_T_EVE (0 for not done. 1 for normal difficulty, 2 for hard) 260 PROGRESSION_KILL_SATAN_WITH_T_SAMSON (0 for not done. 1 for normal difficulty, 2 for hard) 261 PROGRESSION_KILL_SATAN_WITH_T_AZAZEL (0 for not done. 1 for normal difficulty, 2 for hard) 262 PROGRESSION_KILL_SATAN_WITH_T_LAZARUS (0 for not done. 1 for normal difficulty, 2 for hard) 263 PROGRESSION_KILL_SATAN_WITH_T_EDEN (0 for not done. 1 for normal difficulty, 2 for hard) 264 PROGRESSION_KILL_SATAN_WITH_T_THE_LOST (0 for not done. 1 for normal difficulty, 2 for hard) 265 PROGRESSION_KILL_SATAN_WITH_T_LILITH (0 for not done. 1 for normal difficulty, 2 for hard) 266 PROGRESSION_KILL_SATAN_WITH_T_KEEPER (0 for not done. 1 for normal difficulty, 2 for hard) 267 PROGRESSION_KILL_SATAN_WITH_T_APOLLYON (0 for not done. 1 for normal difficulty, 2 for hard) 268 PROGRESSION_KILL_SATAN_WITH_T_THE_FORGOTTEN (0 for not done. 1 for normal difficulty, 2 for hard) 269 PROGRESSION_KILL_SATAN_WITH_T_BETHANY (0 for not done. 1 for normal difficulty, 2 for hard) 270 PROGRESSION_KILL_SATAN_WITH_T_JACOB_AND_ESAU (0 for not done. 1 for normal difficulty, 2 for hard) 271 PROGRESSION_BOSSRUSH_CLEARED_WITH_BETHANY (0 for not done. 1 for normal difficulty, 2 for hard) 272 PROGRESSION_BOSSRUSH_CLEARED_WITH_JACOB_AND_ESAU (0 for not done. 1 for normal difficulty, 2 for hard) 273 PROGRESSION_BOSSRUSH_CLEARED_WITH_T_ISAAC (0 for not done. 1 for normal difficulty, 2 for hard) 274 PROGRESSION_BOSSRUSH_CLEARED_WITH_T_MAGDALENE (0 for not done. 1 for normal difficulty, 2 for hard) 275 PROGRESSION_BOSSRUSH_CLEARED_WITH_T_CAIN (0 for not done. 1 for normal difficulty, 2 for hard) 276 PROGRESSION_BOSSRUSH_CLEARED_WITH_T_JUDAS (0 for not done. 1 for normal difficulty, 2 for hard) 277 PROGRESSION_BOSSRUSH_CLEARED_WITH_T_BLUE_BABY (0 for not done. 1 for normal difficulty, 2 for hard) 278 PROGRESSION_BOSSRUSH_CLEARED_WITH_T_EVE (0 for not done. 1 for normal difficulty, 2 for hard) 279 PROGRESSION_BOSSRUSH_CLEARED_WITH_T_SAMSON (0 for not done. 1 for normal difficulty, 2 for hard) 280 PROGRESSION_BOSSRUSH_CLEARED_WITH_T_AZAZEL (0 for not done. 1 for normal difficulty, 2 for hard) 281 PROGRESSION_BOSSRUSH_CLEARED_WITH_T_LAZARUS (0 for not done. 1 for normal difficulty, 2 for hard) 282 PROGRESSION_BOSSRUSH_CLEARED_WITH_T_EDEN (0 for not done. 1 for normal difficulty, 2 for hard) 283 PROGRESSION_BOSSRUSH_CLEARED_WITH_T_THE_LOST (0 for not done. 1 for normal difficulty, 2 for hard) 284 PROGRESSION_BOSSRUSH_CLEARED_WITH_T_LILITH (0 for not done. 1 for normal difficulty, 2 for hard) 285 PROGRESSION_BOSSRUSH_CLEARED_WITH_T_KEEPER (0 for not done. 1 for normal difficulty, 2 for hard) 286 PROGRESSION_BOSSRUSH_CLEARED_WITH_T_APOLLYON (0 for not done. 1 for normal difficulty, 2 for hard) 287 PROGRESSION_BOSSRUSH_CLEARED_WITH_T_THE_FORGOTTEN (0 for not done. 1 for normal difficulty, 2 for hard) 288 PROGRESSION_BOSSRUSH_CLEARED_WITH_T_BETHANY (0 for not done. 1 for normal difficulty, 2 for hard) 289 PROGRESSION_BOSSRUSH_CLEARED_WITH_T_JACOB_AND_ESAU (0 for not done. 1 for normal difficulty, 2 for hard) 290 PROGRESSION_KILL_BLUE_BABY_WITH_BETHANY (0 for not done. 1 for normal difficulty, 2 for hard) 291 PROGRESSION_KILL_BLUE_BABY_WITH_JACOB_AND_ESAU (0 for not done. 1 for normal difficulty, 2 for hard) 292 PROGRESSION_KILL_BLUE_BABY_WITH_T_ISAAC (0 for not done. 1 for normal difficulty, 2 for hard) 293 PROGRESSION_KILL_BLUE_BABY_WITH_T_MAGDALENE (0 for not done. 1 for normal difficulty, 2 for hard) 294 PROGRESSION_KILL_BLUE_BABY_WITH_T_CAIN (0 for not done. 1 for normal difficulty, 2 for hard) 295 PROGRESSION_KILL_BLUE_BABY_WITH_T_JUDAS (0 for not done. 1 for normal difficulty, 2 for hard) 296 PROGRESSION_KILL_BLUE_BABY_WITH_T_BLUE_BABY (0 for not done. 1 for normal difficulty, 2 for hard) 297 PROGRESSION_KILL_BLUE_BABY_WITH_T_EVE (0 for not done. 1 for normal difficulty, 2 for hard) 298 PROGRESSION_KILL_BLUE_BABY_WITH_T_SAMSON (0 for not done. 1 for normal difficulty, 2 for hard) 299 PROGRESSION_KILL_BLUE_BABY_WITH_T_AZAZEL (0 for not done. 1 for normal difficulty, 2 for hard) 300 PROGRESSION_KILL_BLUE_BABY_WITH_T_LAZARUS (0 for not done. 1 for normal difficulty, 2 for hard) 301 PROGRESSION_KILL_BLUE_BABY_WITH_T_EDEN (0 for not done. 1 for normal difficulty, 2 for hard) 302 PROGRESSION_KILL_BLUE_BABY_WITH_T_THE_LOST (0 for not done. 1 for normal difficulty, 2 for hard) 303 PROGRESSION_KILL_BLUE_BABY_WITH_T_LILITH (0 for not done. 1 for normal difficulty, 2 for hard) 304 PROGRESSION_KILL_BLUE_BABY_WITH_T_KEEPER (0 for not done. 1 for normal difficulty, 2 for hard) 305 PROGRESSION_KILL_BLUE_BABY_WITH_T_APOLLYON (0 for not done. 1 for normal difficulty, 2 for hard) 306 PROGRESSION_KILL_BLUE_BABY_WITH_T_THE_FORGOTTEN (0 for not done. 1 for normal difficulty, 2 for hard) 307 PROGRESSION_KILL_BLUE_BABY_WITH_T_BETHANY (0 for not done. 1 for normal difficulty, 2 for hard) 308 PROGRESSION_KILL_BLUE_BABY_WITH_T_JACOB_AND_ESAU (0 for not done. 1 for normal difficulty, 2 for hard) 309 PROGRESSION_KILL_THE_LAMB_WITH_BETHANY (0 for not done. 1 for normal difficulty, 2 for hard) 310 PROGRESSION_KILL_THE_LAMB_WITH_JACOB_AND_ESAU (0 for not done. 1 for normal difficulty, 2 for hard) 311 PROGRESSION_KILL_THE_LAMB_WITH_T_ISAAC (0 for not done. 1 for normal difficulty, 2 for hard) 312 PROGRESSION_KILL_THE_LAMB_WITH_T_MAGDALENE (0 for not done. 1 for normal difficulty, 2 for hard) 313 PROGRESSION_KILL_THE_LAMB_WITH_T_CAIN (0 for not done. 1 for normal difficulty, 2 for hard) 314 PROGRESSION_KILL_THE_LAMB_WITH_T_JUDAS (0 for not done. 1 for normal difficulty, 2 for hard) 315 PROGRESSION_KILL_THE_LAMB_WITH_T_BLUE_BABY (0 for not done. 1 for normal difficulty, 2 for hard) 316 PROGRESSION_KILL_THE_LAMB_WITH_T_EVE (0 for not done. 1 for normal difficulty, 2 for hard) 317 PROGRESSION_KILL_THE_LAMB_WITH_T_SAMSON (0 for not done. 1 for normal difficulty, 2 for hard) 318 PROGRESSION_KILL_THE_LAMB_WITH_T_AZAZEL (0 for not done. 1 for normal difficulty, 2 for hard) 319 PROGRESSION_KILL_THE_LAMB_WITH_T_LAZARUS (0 for not done. 1 for normal difficulty, 2 for hard) 320 PROGRESSION_KILL_THE_LAMB_WITH_T_EDEN (0 for not done. 1 for normal difficulty, 2 for hard) 321 PROGRESSION_KILL_THE_LAMB_WITH_T_THE_LOST (0 for not done. 1 for normal difficulty, 2 for hard) 322 PROGRESSION_KILL_THE_LAMB_WITH_T_LILITH (0 for not done. 1 for normal difficulty, 2 for hard) 323 PROGRESSION_KILL_THE_LAMB_WITH_T_KEEPER (0 for not done. 1 for normal difficulty, 2 for hard) 324 PROGRESSION_KILL_THE_LAMB_WITH_T_APOLLYON (0 for not done. 1 for normal difficulty, 2 for hard) 325 PROGRESSION_KILL_THE_LAMB_WITH_T_THE_FORGOTTEN (0 for not done. 1 for normal difficulty, 2 for hard) 326 PROGRESSION_KILL_THE_LAMB_WITH_T_BETHANY (0 for not done. 1 for normal difficulty, 2 for hard) 327 PROGRESSION_KILL_THE_LAMB_WITH_T_JACOB_AND_ESAU (0 for not done. 1 for normal difficulty, 2 for hard) 328 PROGRESSION_KILL_MEGA_SATAN_WITH_BETHANY (0 for not done. 1 for normal difficulty, 2 for hard) 329 PROGRESSION_KILL_MEGA_SATAN_WITH_JACOB_AND_ESAU (0 for not done. 1 for normal difficulty, 2 for hard) 330 PROGRESSION_KILL_MEGA_SATAN_WITH_T_ISAAC (0 for not done. 1 for normal difficulty, 2 for hard) 331 PROGRESSION_KILL_MEGA_SATAN_WITH_T_MAGDALENE (0 for not done. 1 for normal difficulty, 2 for hard) 332 PROGRESSION_KILL_MEGA_SATAN_WITH_T_CAIN (0 for not done. 1 for normal difficulty, 2 for hard) 333 PROGRESSION_KILL_MEGA_SATAN_WITH_T_JUDAS (0 for not done. 1 for normal difficulty, 2 for hard) 334 PROGRESSION_KILL_MEGA_SATAN_WITH_T_BLUE_BABY (0 for not done. 1 for normal difficulty, 2 for hard) 335 PROGRESSION_KILL_MEGA_SATAN_WITH_T_EVE (0 for not done. 1 for normal difficulty, 2 for hard) 336 PROGRESSION_KILL_MEGA_SATAN_WITH_T_SAMSON (0 for not done. 1 for normal difficulty, 2 for hard) 337 PROGRESSION_KILL_MEGA_SATAN_WITH_T_AZAZEL (0 for not done. 1 for normal difficulty, 2 for hard) 338 PROGRESSION_KILL_MEGA_SATAN_WITH_T_LAZARUS (0 for not done. 1 for normal difficulty, 2 for hard) 339 PROGRESSION_KILL_MEGA_SATAN_WITH_T_EDEN (0 for not done. 1 for normal difficulty, 2 for hard) 340 PROGRESSION_KILL_MEGA_SATAN_WITH_T_THE_LOST (0 for not done. 1 for normal difficulty, 2 for hard) 341 PROGRESSION_KILL_MEGA_SATAN_WITH_T_LILITH (0 for not done. 1 for normal difficulty, 2 for hard) 342 PROGRESSION_KILL_MEGA_SATAN_WITH_T_KEEPER (0 for not done. 1 for normal difficulty, 2 for hard) 343 PROGRESSION_KILL_MEGA_SATAN_WITH_T_APOLLYON (0 for not done. 1 for normal difficulty, 2 for hard) 344 PROGRESSION_KILL_MEGA_SATAN_WITH_T_THE_FORGOTTEN (0 for not done. 1 for normal difficulty, 2 for hard) 345 PROGRESSION_KILL_MEGA_SATAN_WITH_T_BETHANY (0 for not done. 1 for normal difficulty, 2 for hard) 346 PROGRESSION_KILL_MEGA_SATAN_WITH_T_JACOB_AND_ESAU (0 for not done. 1 for normal difficulty, 2 for hard) 347 PROGRESSION_GREED_MODE_CLEARED_WITH_BETHANY (0 for not done. 1 for normal difficulty, 2 for hard) 348 PROGRESSION_GREED_MODE_CLEARED_WITH_JACOB_AND_ESAU (0 for not done. 1 for normal difficulty, 2 for hard) 349 PROGRESSION_GREED_MODE_CLEARED_WITH_T_ISAAC (0 for not done. 1 for normal difficulty, 2 for hard) 350 PROGRESSION_GREED_MODE_CLEARED_WITH_T_MAGDALENE (0 for not done. 1 for normal difficulty, 2 for hard) 351 PROGRESSION_GREED_MODE_CLEARED_WITH_T_CAIN (0 for not done. 1 for normal difficulty, 2 for hard) 352 PROGRESSION_GREED_MODE_CLEARED_WITH_T_JUDAS (0 for not done. 1 for normal difficulty, 2 for hard) 353 PROGRESSION_GREED_MODE_CLEARED_WITH_T_BLUE_BABY (0 for not done. 1 for normal difficulty, 2 for hard) 354 PROGRESSION_GREED_MODE_CLEARED_WITH_T_EVE (0 for not done. 1 for normal difficulty, 2 for hard) 355 PROGRESSION_GREED_MODE_CLEARED_WITH_T_SAMSON (0 for not done. 1 for normal difficulty, 2 for hard) 356 PROGRESSION_GREED_MODE_CLEARED_WITH_T_AZAZEL (0 for not done. 1 for normal difficulty, 2 for hard) 357 PROGRESSION_GREED_MODE_CLEARED_WITH_T_LAZARUS (0 for not done. 1 for normal difficulty, 2 for hard) 358 PROGRESSION_GREED_MODE_CLEARED_WITH_T_EDEN (0 for not done. 1 for normal difficulty, 2 for hard) 359 PROGRESSION_GREED_MODE_CLEARED_WITH_T_THE_LOST (0 for not done. 1 for normal difficulty, 2 for hard) 360 PROGRESSION_GREED_MODE_CLEARED_WITH_T_LILITH (0 for not done. 1 for normal difficulty, 2 for hard) 361 PROGRESSION_GREED_MODE_CLEARED_WITH_T_KEEPER (0 for not done. 1 for normal difficulty, 2 for hard) 362 PROGRESSION_GREED_MODE_CLEARED_WITH_T_APOLLYON (0 for not done. 1 for normal difficulty, 2 for hard) 363 PROGRESSION_GREED_MODE_CLEARED_WITH_T_THE_FORGOTTEN (0 for not done. 1 for normal difficulty, 2 for hard) 364 PROGRESSION_GREED_MODE_CLEARED_WITH_T_BETHANY (0 for not done. 1 for normal difficulty, 2 for hard) 365 PROGRESSION_GREED_MODE_CLEARED_WITH_T_JACOB_AND_ESAU (0 for not done. 1 for normal difficulty, 2 for hard) 366 PROGRESSION_KILL_HUSH_WITH_BETHANY (0 for not done. 1 for normal difficulty, 2 for hard) 367 PROGRESSION_KILL_HUSH_WITH_JACOB_AND_ESAU (0 for not done. 1 for normal difficulty, 2 for hard) 368 PROGRESSION_KILL_HUSH_WITH_T_ISAAC (0 for not done. 1 for normal difficulty, 2 for hard) 369 PROGRESSION_KILL_HUSH_WITH_T_MAGDALENE (0 for not done. 1 for normal difficulty, 2 for hard) 370 PROGRESSION_KILL_HUSH_WITH_T_CAIN (0 for not done. 1 for normal difficulty, 2 for hard) 371 PROGRESSION_KILL_HUSH_WITH_T_JUDAS (0 for not done. 1 for normal difficulty, 2 for hard) 372 PROGRESSION_KILL_HUSH_WITH_T_BLUE_BABY (0 for not done. 1 for normal difficulty, 2 for hard) 373 PROGRESSION_KILL_HUSH_WITH_T_EVE (0 for not done. 1 for normal difficulty, 2 for hard) 374 PROGRESSION_KILL_HUSH_WITH_T_SAMSON (0 for not done. 1 for normal difficulty, 2 for hard) 375 PROGRESSION_KILL_HUSH_WITH_T_AZAZEL (0 for not done. 1 for normal difficulty, 2 for hard) 376 PROGRESSION_KILL_HUSH_WITH_T_LAZARUS (0 for not done. 1 for normal difficulty, 2 for hard) 377 PROGRESSION_KILL_HUSH_WITH_T_EDEN (0 for not done. 1 for normal difficulty, 2 for hard) 378 PROGRESSION_KILL_HUSH_WITH_T_THE_LOST (0 for not done. 1 for normal difficulty, 2 for hard) 379 PROGRESSION_KILL_HUSH_WITH_T_LILITH (0 for not done. 1 for normal difficulty, 2 for hard) 380 PROGRESSION_KILL_HUSH_WITH_T_KEEPER (0 for not done. 1 for normal difficulty, 2 for hard) 381 PROGRESSION_KILL_HUSH_WITH_T_APOLLYON (0 for not done. 1 for normal difficulty, 2 for hard) 382 PROGRESSION_KILL_HUSH_WITH_T_THE_FORGOTTEN (0 for not done. 1 for normal difficulty, 2 for hard) 383 PROGRESSION_KILL_HUSH_WITH_T_BETHANY (0 for not done. 1 for normal difficulty, 2 for hard) 384 PROGRESSION_KILL_HUSH_WITH_T_JACOB_AND_ESAU (0 for not done. 1 for normal difficulty, 2 for hard) 385 GREED_MODE_COINS_DONATED_WITH_BETHANY 386 GREED_MODE_COINS_DONATED_WITH_JACOB_AND_ESAU 387 GREED_MODE_COINS_DONATED_WITH_T_ISAAC 388 GREED_MODE_COINS_DONATED_WITH_T_MAGDALENE 389 GREED_MODE_COINS_DONATED_WITH_T_CAIN 390 GREED_MODE_COINS_DONATED_WITH_T_JUDAS 391 GREED_MODE_COINS_DONATED_WITH_T_BLUE_BABY 392 GREED_MODE_COINS_DONATED_WITH_T_EVE 393 GREED_MODE_COINS_DONATED_WITH_T_SAMSON 394 GREED_MODE_COINS_DONATED_WITH_T_AZAZEL 395 GREED_MODE_COINS_DONATED_WITH_T_LAZARUS 396 GREED_MODE_COINS_DONATED_WITH_T_EDEN 397 GREED_MODE_COINS_DONATED_WITH_T_THE_LOST 398 GREED_MODE_COINS_DONATED_WITH_T_LILITH 399 GREED_MODE_COINS_DONATED_WITH_T_KEEPER 400 GREED_MODE_COINS_DONATED_WITH_T_APOLLYON 401 GREED_MODE_COINS_DONATED_WITH_T_THE_FORGOTTEN 402 GREED_MODE_COINS_DONATED_WITH_T_BETHANY 403 GREED_MODE_COINS_DONATED_WITH_T_JACOB_AND_ESAU 404 PROGRESSION_KILL_DELIRIUM_WITH_BETHANY (0 for not done. 1 for normal difficulty, 2 for hard) 405 PROGRESSION_KILL_DELIRIUM_WITH_JACOB_AND_ESAU (0 for not done. 1 for normal difficulty, 2 for hard) 406 PROGRESSION_KILL_DELIRIUM_WITH_T_ISAAC (0 for not done. 1 for normal difficulty, 2 for hard) 407 PROGRESSION_KILL_DELIRIUM_WITH_T_MAGDALENE (0 for not done. 1 for normal difficulty, 2 for hard) 408 PROGRESSION_KILL_DELIRIUM_WITH_T_CAIN (0 for not done. 1 for normal difficulty, 2 for hard) 409 PROGRESSION_KILL_DELIRIUM_WITH_T_JUDAS (0 for not done. 1 for normal difficulty, 2 for hard) 410 PROGRESSION_KILL_DELIRIUM_WITH_T_BLUE_BABY (0 for not done. 1 for normal difficulty, 2 for hard) 411 PROGRESSION_KILL_DELIRIUM_WITH_T_EVE (0 for not done. 1 for normal difficulty, 2 for hard) 412 PROGRESSION_KILL_DELIRIUM_WITH_T_SAMSON (0 for not done. 1 for normal difficulty, 2 for hard) 413 PROGRESSION_KILL_DELIRIUM_WITH_T_AZAZEL (0 for not done. 1 for normal difficulty, 2 for hard) 414 PROGRESSION_KILL_DELIRIUM_WITH_T_LAZARUS (0 for not done. 1 for normal difficulty, 2 for hard) 415 PROGRESSION_KILL_DELIRIUM_WITH_T_EDEN (0 for not done. 1 for normal difficulty, 2 for hard) 416 PROGRESSION_KILL_DELIRIUM_WITH_T_THE_LOST (0 for not done. 1 for normal difficulty, 2 for hard) 417 PROGRESSION_KILL_DELIRIUM_WITH_T_LILITH (0 for not done. 1 for normal difficulty, 2 for hard) 418 PROGRESSION_KILL_DELIRIUM_WITH_T_KEEPER (0 for not done. 1 for normal difficulty, 2 for hard) 419 PROGRESSION_KILL_DELIRIUM_WITH_T_APOLLYON (0 for not done. 1 for normal difficulty, 2 for hard) 420 PROGRESSION_KILL_DELIRIUM_WITH_T_THE_FORGOTTEN (0 for not done. 1 for normal difficulty, 2 for hard) 421 PROGRESSION_KILL_DELIRIUM_WITH_T_BETHANY (0 for not done. 1 for normal difficulty, 2 for hard) 422 PROGRESSION_KILL_DELIRIUM_WITH_T_JACOB_AND_ESAU (0 for not done. 1 for normal difficulty, 2 for hard) 423 PROGRESSION_KILL_MOTHER_WITH_ISAAC (0 for not done. 1 for normal difficulty, 2 for hard) 424 PROGRESSION_KILL_MOTHER_WITH_MAGDALENE (0 for not done. 1 for normal difficulty, 2 for hard) 425 PROGRESSION_KILL_MOTHER_WITH_CAIN (0 for not done. 1 for normal difficulty, 2 for hard) 426 PROGRESSION_KILL_MOTHER_WITH_JUDAS (0 for not done. 1 for normal difficulty, 2 for hard) 427 PROGRESSION_KILL_MOTHER_WITH_BLUE_BABY (0 for not done. 1 for normal difficulty, 2 for hard) 428 PROGRESSION_KILL_MOTHER_WITH_EVE (0 for not done. 1 for normal difficulty, 2 for hard) 429 PROGRESSION_KILL_MOTHER_WITH_SAMSON (0 for not done. 1 for normal difficulty, 2 for hard) 430 PROGRESSION_KILL_MOTHER_WITH_AZAZEL (0 for not done. 1 for normal difficulty, 2 for hard) 431 PROGRESSION_KILL_MOTHER_WITH_LAZARUS (0 for not done. 1 for normal difficulty, 2 for hard) 432 PROGRESSION_KILL_MOTHER_WITH_EDEN (0 for not done. 1 for normal difficulty, 2 for hard) 433 PROGRESSION_KILL_MOTHER_WITH_THE_LOST (0 for not done. 1 for normal difficulty, 2 for hard) 434 PROGRESSION_KILL_MOTHER_WITH_LILITH (0 for not done. 1 for normal difficulty, 2 for hard) 435 PROGRESSION_KILL_MOTHER_WITH_KEEPER (0 for not done. 1 for normal difficulty, 2 for hard) 436 PROGRESSION_KILL_MOTHER_WITH_APOLLYON (0 for not done. 1 for normal difficulty, 2 for hard) 437 PROGRESSION_KILL_MOTHER_WITH_THE_FORGOTTEN (0 for not done. 1 for normal difficulty, 2 for hard) 438 PROGRESSION_KILL_MOTHER_WITH_BETHANY (0 for not done. 1 for normal difficulty, 2 for hard) 439 PROGRESSION_KILL_MOTHER_WITH_JACOB_AND_ESAU (0 for not done. 1 for normal difficulty, 2 for hard) 440 PROGRESSION_KILL_MOTHER_WITH_T_ISAAC (0 for not done. 1 for normal difficulty, 2 for hard) 441 PROGRESSION_KILL_MOTHER_WITH_T_MAGDALENE (0 for not done. 1 for normal difficulty, 2 for hard) 442 PROGRESSION_KILL_MOTHER_WITH_T_CAIN (0 for not done. 1 for normal difficulty, 2 for hard) 443 PROGRESSION_KILL_MOTHER_WITH_T_JUDAS (0 for not done. 1 for normal difficulty, 2 for hard) 444 PROGRESSION_KILL_MOTHER_WITH_T_BLUE_BABY (0 for not done. 1 for normal difficulty, 2 for hard) 445 PROGRESSION_KILL_MOTHER_WITH_T_EVE (0 for not done. 1 for normal difficulty, 2 for hard) 446 PROGRESSION_KILL_MOTHER_WITH_T_SAMSON (0 for not done. 1 for normal difficulty, 2 for hard) 447 PROGRESSION_KILL_MOTHER_WITH_T_AZAZEL (0 for not done. 1 for normal difficulty, 2 for hard) 448 PROGRESSION_KILL_MOTHER_WITH_T_LAZARUS (0 for not done. 1 for normal difficulty, 2 for hard) 449 PROGRESSION_KILL_MOTHER_WITH_T_EDEN (0 for not done. 1 for normal difficulty, 2 for hard) 450 PROGRESSION_KILL_MOTHER_WITH_T_THE_LOST (0 for not done. 1 for normal difficulty, 2 for hard) 451 PROGRESSION_KILL_MOTHER_WITH_T_LILITH (0 for not done. 1 for normal difficulty, 2 for hard) 452 PROGRESSION_KILL_MOTHER_WITH_T_KEEPER (0 for not done. 1 for normal difficulty, 2 for hard) 453 PROGRESSION_KILL_MOTHER_WITH_T_APOLLYON (0 for not done. 1 for normal difficulty, 2 for hard) 454 PROGRESSION_KILL_MOTHER_WITH_T_THE_FORGOTTEN (0 for not done. 1 for normal difficulty, 2 for hard) 455 PROGRESSION_KILL_MOTHER_WITH_T_BETHANY (0 for not done. 1 for normal difficulty, 2 for hard) 456 PROGRESSION_KILL_MOTHER_WITH_T_JACOB_AND_ESAU (0 for not done. 1 for normal difficulty, 2 for hard) 457 PROGRESSION_KILL_BEAST_WITH_ISAAC (0 for not done. 1 for normal difficulty, 2 for hard) 458 PROGRESSION_KILL_BEAST_WITH_MAGDALENE (0 for not done. 1 for normal difficulty, 2 for hard) 459 PROGRESSION_KILL_BEAST_WITH_CAIN (0 for not done. 1 for normal difficulty, 2 for hard) 460 PROGRESSION_KILL_BEAST_WITH_JUDAS (0 for not done. 1 for normal difficulty, 2 for hard) 461 PROGRESSION_KILL_BEAST_WITH_BLUE_BABY (0 for not done. 1 for normal difficulty, 2 for hard) 462 PROGRESSION_KILL_BEAST_WITH_EVE (0 for not done. 1 for normal difficulty, 2 for hard) 463 PROGRESSION_KILL_BEAST_WITH_SAMSON (0 for not done. 1 for normal difficulty, 2 for hard) 464 PROGRESSION_KILL_BEAST_WITH_AZAZEL (0 for not done. 1 for normal difficulty, 2 for hard) 465 PROGRESSION_KILL_BEAST_WITH_LAZARUS (0 for not done. 1 for normal difficulty, 2 for hard) 466 PROGRESSION_KILL_BEAST_WITH_EDEN (0 for not done. 1 for normal difficulty, 2 for hard) 467 PROGRESSION_KILL_BEAST_WITH_THE_LOST (0 for not done. 1 for normal difficulty, 2 for hard) 468 PROGRESSION_KILL_BEAST_WITH_LILITH (0 for not done. 1 for normal difficulty, 2 for hard) 469 PROGRESSION_KILL_BEAST_WITH_KEEPER (0 for not done. 1 for normal difficulty, 2 for hard) 470 PROGRESSION_KILL_BEAST_WITH_APOLLYON (0 for not done. 1 for normal difficulty, 2 for hard) 471 PROGRESSION_KILL_BEAST_WITH_THE_FORGOTTEN (0 for not done. 1 for normal difficulty, 2 for hard) 472 PROGRESSION_KILL_BEAST_WITH_BETHANY (0 for not done. 1 for normal difficulty, 2 for hard) 473 PROGRESSION_KILL_BEAST_WITH_JACOB_AND_ESAU (0 for not done. 1 for normal difficulty, 2 for hard) 474 PROGRESSION_KILL_BEAST_WITH_T_ISAAC (0 for not done. 1 for normal difficulty, 2 for hard) 475 PROGRESSION_KILL_BEAST_WITH_T_MAGDALENE (0 for not done. 1 for normal difficulty, 2 for hard) 476 PROGRESSION_KILL_BEAST_WITH_T_CAIN (0 for not done. 1 for normal difficulty, 2 for hard) 477 PROGRESSION_KILL_BEAST_WITH_T_JUDAS (0 for not done. 1 for normal difficulty, 2 for hard) 478 PROGRESSION_KILL_BEAST_WITH_T_BLUE_BABY (0 for not done. 1 for normal difficulty, 2 for hard) 479 PROGRESSION_KILL_BEAST_WITH_T_EVE (0 for not done. 1 for normal difficulty, 2 for hard) 480 PROGRESSION_KILL_BEAST_WITH_T_SAMSON (0 for not done. 1 for normal difficulty, 2 for hard) 481 PROGRESSION_KILL_BEAST_WITH_T_AZAZEL (0 for not done. 1 for normal difficulty, 2 for hard) 482 PROGRESSION_KILL_BEAST_WITH_T_LAZARUS (0 for not done. 1 for normal difficulty, 2 for hard) 483 PROGRESSION_KILL_BEAST_WITH_T_EDEN (0 for not done. 1 for normal difficulty, 2 for hard) 484 PROGRESSION_KILL_BEAST_WITH_T_THE_LOST (0 for not done. 1 for normal difficulty, 2 for hard) 485 PROGRESSION_KILL_BEAST_WITH_T_LILITH (0 for not done. 1 for normal difficulty, 2 for hard) 486 PROGRESSION_KILL_BEAST_WITH_T_KEEPER (0 for not done. 1 for normal difficulty, 2 for hard) 487 PROGRESSION_KILL_BEAST_WITH_T_APOLLYON (0 for not done. 1 for normal difficulty, 2 for hard) 488 PROGRESSION_KILL_BEAST_WITH_T_THE_FORGOTTEN (0 for not done. 1 for normal difficulty, 2 for hard) 489 PROGRESSION_KILL_BEAST_WITH_T_BETHANY (0 for not done. 1 for normal difficulty, 2 for hard) 490 PROGRESSION_KILL_BEAST_WITH_T_JACOB_AND_ESAU (0 for not done. 1 for normal difficulty, 2 for hard) 491 MOTHER_KILLS Killing endboss of Corpse 2 (Does only count instances where the kill is combined with run \"progression\". aka in final room and spawning a trapdoor/chest/trophy) 492 BEAST_KILLS Killing the endboss of Home 493 BABY_PLUM_KILLS 494 BATTERY_BUMS_KILLED 495 BATTERY_BUM_COLLECTIBLE_PAYOUTS counts how often the battery bum paid out with a collectible item 496 UNKNOWN_EVENT_496 TODO: Currently Unknown. Maybe Daily Multiplayer run Streak? 497 ONLINE_CURRENT_STREAK Current Online Mode streak 498 ONLINE_BEST_STREAK Best streak in Online Gameplay 499 UNKNOWN_EVENT_499 TODO: Currently Unknown. Maybe Daily Multiplayer run Streak? 500 ONLINE_SIN_ETERNAL 501 ONLINE_SIN_HEARTLESS 502 ONLINE_SIN_ENVIOUS 503 ONLINE_SIN_DRESSED_UP 504 ONLINE_SIN_PRIDEFUL 505 ONLINE_SIN_SAVIOR 506 ONLINE_SIN_WRATHFUL 507 ONLINE_SIN_BIG_BOSS 508 ONLINE_SIN_EXPLORER 509 ONLINE_SIN_EXPRESSIVE 510 ONLINE_SIN_GLUTTONOUS 511 ONLINE_SIN_RECKLESS 512 ONLINE_SIN_ESCAPE_ARTIST 513 ONLINE_SIN_GAMBLER 514 ONLINE_SIN_GREEDY 515 ONLINE_SIN_MYSTIC 516 ONLINE_SIN_PILL_POPPER 517 ONLINE_SIN_BIG_SPENDER 518 ONLINE_SIN_JANITOR 519 ONLINE_SIN_LUSTFUL 520 ONLINE_SIN_SLOTHFUL 521 NUM_EVENT_COUNTERS","tags":["Enum"]},{"location":"enums/ExtraHudStyle.html","title":"Enum \"ExtraHudStyle\"","text":"Value Enumerator Comment 0 OFF 1 ON 2 ON_MINI","tags":["Enum"]},{"location":"enums/FadeoutTarget.html","title":"Enum \"FadeoutTarget\"","text":"Value Enumerator Comment 1 FILE_SELECT_MENU 2 SAVEFILE_MENU 3 TITLE_SCREEN 4 NEW_RUN","tags":["Enum"]},{"location":"enums/FollowerPriority.html","title":"Enum \"FollowerPriority\"","text":"Value Enumerator Comment 0 DEFAULT 1 SHOOTER 2 DEFENSIVE Dry Baby, Mongo Baby, Cencer, Lil Abaddon 3 SHOOTER_SPECIAL Lil Brim, Lil Monstro 10 INCUBUS 9999 KING_BABY","tags":["Enum"]},{"location":"enums/GLSLType.html","title":"Enum \"Renderer.GLSLType\"","text":"Value Enumerator Comment 0 Float 1 Vec2 2 Vec3 3 Vec4","tags":["Enum"]},{"location":"enums/GetCollectibleFlag.html","title":"Enum \"GetCollectibleFlag\"","text":"Bitset Calculator Value Enumerator Comment 1 &lt;&lt; 0 BAN_ACTIVES Bans items with Type: <code>ITEM_ACTIVE</code>. 1 &lt;&lt; 1 IGNORE_MODIFIERS If set the game does not attempt to morph the collectible into either <code>Magic Skin</code> or <code>Rosary</code>. Does not prevent a morph into <code>Bible</code>. 1 &lt;&lt; 2 BAN_PASSIVES Only allows items with Type: <code>ITEM_ACTIVE</code>.","tags":["Enum"]},{"location":"enums/Giantbook.html","title":"Enum \"Giantbook\"","text":"Value Enumerator Comment 1 NECRONOMICON 2 MONSTER_MANUAL 3 WHORE_OF_BABYLON 3 HORRIBLE_NIGHT 4 DEAD_SEA_SCROLLS 5 THE_SUN 6 ETERNAL_HEART_SOUL 7 MOMS_BRA 8 MOMS_PAD 9 ANARCHIST_COOKBOOK 10 BIBLE 11 BOOK_OF_REVELATIONS 12 DEATH 13 ETERNAL_HEART 14 HOURGLASS 15 SATANIC_BIBLE 16 BLACK_HEART 17 D4 18 D10 19 FLUSH 20 HAGALAZ 21 JERA 22 EHWAZ 23 DAGAZ 24 ANSUZ 25 PERTHRO 26 BERKANO 26 BERKAND 27 ALGIZ 28 D100 29 RAINBOW 29 RAINBOW_POOP 30 MISSING_PAGE 31 MISSING_PAGE_2 32 SPIDER_BUTT 33 SLEEP 34 BOOK_OF_BELIAL 34 BOOK_OF_BEAST 35 BETRAYAL 36 D8 37 D12 38 SUPER_BUM 39 CLICKER 40 MAMA_MEGA 41 ETERNAL_HEART_EMPTY 42 REVERSE_EMPRESS 42 MORNING_SUN 43 REVERSE_THE_SUN 43 REVERSE_SUN 44 SLEEP_NIGHTMARE 44 DOGMA 45 MEGA_MUSH 46 ETERNAL_HEART_BLACK","tags":["Enum"]},{"location":"enums/GibFlag.html","title":"Enum \"GibFlag\"","text":"Bitset Calculator Value Enumerator Comment 1 &lt;&lt; 0 BLOOD 1 &lt;&lt; 1 BONE 1 &lt;&lt; 2 GUT 1 &lt;&lt; 3 EYE 1 &lt;&lt; 4 LARGE 1 &lt;&lt; 5 POOP 1 &lt;&lt; 6 WORM 1 &lt;&lt; 7 ROCK 1 &lt;&lt; 8 ROCK_SMALL 1 &lt;&lt; 9 SOUND_BABY 1 &lt;&lt; 10 SOUND_BONE 1 &lt;&lt; 11 CHAIN 1 &lt;&lt; 12 DUST 1 &lt;&lt; 13 HUGE","tags":["Enum"]},{"location":"enums/GridPoopVariant.html","title":"Enum \"GridPoopVariant\"","text":"Value Enumerator Comment 0 NORMAL 1 RED 2 CHUNKY 2 CORN 3 GOLDEN 4 RAINBOW 5 BLACK 6 HOLY 6 WHITE 7 GIANT_TL 8 GIANT_TR 9 GIANT_BL 10 GIANT_BR 11 CHARMING","tags":["Enum"]},{"location":"enums/HealthType.html","title":"Enum \"HealthType\"","text":"Value Enumerator Comment 0 DEFAULT 0 RED 1 SOUL 2 LOST 2 NO_HEALTH 3 COIN 3 KEEPER 4 BONE","tags":["Enum"]},{"location":"enums/ImGuiCallback.html","title":"Enum \"ImGuiCallback\"","text":"Value Enumerator Comment 0 Clicked 1 Hovered 2 Active 3 Focused 4 Visible 5 Edited 6 Activated 7 Deactivated 8 DeactivatedAfterEdit 9 ToggledOpen 10 Render Gets executed before an object gets rendered","tags":["Enum"]},{"location":"enums/ImGuiColor.html","title":"Enum \"ImGuiColor\"","text":"Value Enumerator Comment 0 Text 1 TextDisabled 2 WindowBg Background of normal windows 3 ChildBg Background of child windows 4 PopupBg Background of popups, menus, tooltips windows 5 Border 6 BorderShadow 7 FrameBg Background of checkbox, radio button, plot, slider, text input 8 FrameBgHovered 9 FrameBgActive 10 TitleBg 11 TitleBgActive 12 TitleBgCollapsed 13 MenuBarBg 14 ScrollbarBg 15 ScrollbarGrab 16 ScrollbarGrabHovered 17 ScrollbarGrabActive 18 CheckMark 19 SliderGrab 20 SliderGrabActive 21 Button 22 ButtonHovered 23 ButtonActive 24 Header Header* colors are used for CollapsingHeader, TreeNode, Selectable, MenuItem 25 HeaderHovered 26 HeaderActive 27 Separator 28 SeparatorHovered 29 SeparatorActive 30 ResizeGrip Resize grip in lower-right and lower-left corners of windows. 31 ResizeGripHovered 32 ResizeGripActive 33 Tab TabItem in a TabBar 34 TabHovered 35 TabActive 36 TabUnfocused 37 TabUnfocusedActive 38 PlotLines 39 PlotLinesHovered 40 PlotHistogram 41 PlotHistogramHovered 42 TableHeaderBg Table header background 43 TableBorderStrong Table outer and header borders (prefer using Alpha=1.0 here) 44 TableBorderLight Table inner borders (prefer using Alpha=1.0 here) 45 TableRowBg Table row background (even rows) 46 TableRowBgAlt Table row background (odd rows) 47 TextSelectedBg 48 DragDropTarget Rectangle highlighting a drop target 49 NavHighlight Gamepad/keyboard: current highlighted item 50 NavWindowingHighlight Highlight window when using CTRL+TAB 51 NavWindowingDimBg Darken/colorize entire screen behind the CTRL+TAB window list, when active 52 ModalWindowDimBg Darken/colorize entire screen behind a modal window, when one is active","tags":["Enum"]},{"location":"enums/ImGuiData.html","title":"Enum \"ImGuiData\"","text":"Value Enumerator Comment 0 Label descriptive text of an element 1 Value Used for single value Elements like Text- or Integer-Inputs, Checkboxes, or the currently selected Radiobutton 2 ListValues Used for elements that use a table as their data source like RadioButtons, Comboboxes, Plots, etc. 3 Min min value of a slider input 4 Max max value of a slider input 5 HintText hint text of a text input, or overlay texts used in plots or progressbars 6 ColorValues Color input. 3 values = RGB, 4 values = RGBA","tags":["Enum"]},{"location":"enums/ImGuiElement.html","title":"Enum \"ImGuiElement\"","text":"Value Enumerator Comment 0 Window 1 Menu 2 MenuItem 3 Popup 4 CollapsingHeader 5 TreeNode 6 Separator 7 SeparatorText 8 Text 9 TextWrapped 10 BulletText 11 SameLine used to render the next element in the same line 12 Button 13 SmallButton 14 InputInt 15 InputFloat 16 DragInt 17 DragFloat 18 SliderInt 19 SliderFloat 20 ColorEdit 21 TabBar 22 Tab 23 Checkbox 24 RadioButton 25 Combobox 26 InputText 27 InputTextWithHint 28 InputTextMultiline 29 InputController 30 InputKeyboard 31 PlotLines 32 PlotHistogram","tags":["Enum"]},{"location":"enums/ImGuiNotificationType.html","title":"Enum \"ImGuiNotificationType\"","text":"Value Enumerator Comment 0 INFO 1 SUCCESS 2 WARNING 3 ERROR","tags":["Enum"]},{"location":"enums/ItemAnim.html","title":"Enum \"ItemAnim\"","text":"Value Enumerator Comment 0 CHARGE 1 CHARGE_FULL 2 SHOOT 3 SHOOT_ALT","tags":["Enum"]},{"location":"enums/KnifeSubType.html","title":"Enum \"KnifeSubType\"","text":"Value Enumerator Comment 1 PROJECTILE 4 CLUB_HITBOX","tags":["Enum"]},{"location":"enums/KnifeVariant.html","title":"Enum \"KnifeVariant\"","text":"Value Enumerator Comment 0 MOMS_KNIFE 1 BONE_CLUB 2 BONE_SCYTHE 3 DONKEY_JAWBONE 3 BERSERK_CLUB 4 BAG_OF_CRAFTING 5 SUMPTORIUM 9 NOTCHED_AXE 10 SPIRIT_SWORD 11 TECH_SWORD","tags":["Enum"]},{"location":"enums/Language.html","title":"Enum \"Language\"","text":"Value Enumerator Comment 0 ENGLISH 2 JAPANESE 3 FRENCH 4 SPANISH 5 GERMAN 10 RUSSIAN 11 KOREAN 13 CHINESE 21 KEY","tags":["Enum"]},{"location":"enums/LineCheckMode.html","title":"Enum \"LineCheckMode\"","text":"Value Enumerator Comment 0 ENTITY 1 RAYCAST Similar to ENTITY, and cheaper, but can pass between diagonally adjacent GridEntities 2 EXPLOSION 3 PROJECTILE","tags":["Enum"]},{"location":"enums/MainMenuType.html","title":"Enum \"MainMenuType\"","text":"Value Enumerator Comment 1 TITLE 0 exists but its unusable 2 SAVES 3 GAME the actual menu where all the menus are 4 DAILYRUN 5 CHARACTER 6 SPECIALSEEDS 7 CHALLENGE 8 COLLECTION 9 STATS 10 OPTIONS 11 CONTROLS 12 KEYCONFIG 13 ENDINGS 14 BESTIARY 15 MODCHALLENGES 16 MODS 17 SEED","tags":["Enum"]},{"location":"enums/MinimapState.html","title":"Enum \"MinimapState\"","text":"Value Enumerator Comment 0 NORMAL 1 EXPANDED 2 EXPANDED_OPAQUE","tags":["Enum"]},{"location":"enums/ModCallbacks.html","title":"Enum \"ModCallbacks\"","text":"<p>This is a list of all new callbacks added by REPENTOGON.</p>"},{"location":"enums/ModCallbacks.html#modified-old-callbacks","title":"Modified Old Callbacks","text":""},{"location":"enums/ModCallbacks.html#mc_use_pill","title":"MC_USE_PILL","text":"<p>MC_USE_PILL now passes PillColor as an argument. Accepts no return parameters.</p> ID Name Function Args Optional Args Return Type 10 MC_USE_PILL (PillEffect Effect, EntityPlayer Player, UseFlags Flags, PillColor Color) PillEffect void"},{"location":"enums/ModCallbacks.html#mc_post_pickup_selection","title":"MC_POST_PICKUP_SELECTION","text":"<p>MC_POST_PICKUP_COLLISION now passes the Requested Variant and Requested SubType, as well as RNG. Requested Variant and Requested SubType represents the variant and subtype set when spawning the entity.   </p> <p>A third optional <code>Continue</code> parameter has been added to the return table. If set to <code>true</code> the callback will instead replace the <code>Variant</code> and <code>SubType</code> parameter with the specified values and continue running.</p> <p>These changes aim to make the callback a viable option for handling pickup pools.</p> Usage <p>Internally the game always attempts to randomize the spawned pickup's variant and subtype, even when re-entering an already visited room, however there are checks in place to make sure that randomization only occurs if either of these values are initially set to 0.</p> <p>Therefore, any callback should always check <code>if RequestedVariant == 0 or RequestedSubType == 0</code> before attempting any modification.</p> <p>That is unless the desired effect is something akin to the APRIL FOOLS's \"All nickels are sticky nickels\" effect, which is applied regardless of the afore mentioned restriction.</p> Requested Variant == 0 <p>When Requested Variant is equal to 0 the game will randomize both the Variant and SubType of the pickup. In this case the value of Requested SubType is used as a variant blacklist.  </p> <p>This blacklist are listed in the NullPickupSubType enum.</p> ID Name Function Args Optional Args Return Type 37 MC_POST_PICKUP_SELECTION (EntityPickup Pickup, PickupVariant Variant, int SubType, PickupVariant RequestedVariant, int RequestedSubType, RNG RNG ) - table"},{"location":"enums/ModCallbacks.html#mc_pre_player_collision","title":"MC_PRE_PLAYER_COLLISION","text":"<p>Now optionally accepts returning a table, with any combination of the following fields:</p> <ul> <li>Collide: Set to true to force the entities to physically collide (push each other away), unless the \"Collider\" ignores the collision. Set to false to ignore the physical collision without necessarily skipping on-collision effects.</li> <li>SkipCollisionEffects: Set to true to skip the on-collision code of this entity, such as dealing collision damage. Does not affect the physical collision. Won't skip the on-collision code of the \"Collider\".</li> </ul> ID Name Function Args Optional Args Return Type 33 MC_PRE_PLAYER_COLLISION (EntityPlayer Player, Entity Collider, boolean Low) PlayerVariant boolean or table"},{"location":"enums/ModCallbacks.html#mc_pre_tear_collision","title":"MC_PRE_TEAR_COLLISION","text":"<p>Now optionally accepts returning a table, with any combination of the following fields:</p> <ul> <li>Collide: Set to true to force the entities to physically collide (push each other away), unless the \"Collider\" ignores the collision. Set to false to ignore the physical collision without necessarily skipping on-collision effects.</li> <li>SkipCollisionEffects: Set to true to skip the on-collision code of this entity, such as dealing collision damage. Does not affect the physical collision. Won't skip the on-collision code of the \"Collider\".</li> </ul> ID Name Function Args Optional Args Return Type 42 MC_PRE_TEAR_COLLISION (EntityTear Tear, Entity Collider, boolean Low) TearVariant boolean or table"},{"location":"enums/ModCallbacks.html#mc_pre_familiar_collision","title":"MC_PRE_FAMILIAR_COLLISION","text":"<p>Now optionally accepts returning a table, with any combination of the following fields:</p> <ul> <li>Collide: Set to true to force the entities to physically collide (push each other away), unless the \"Collider\" ignores the collision. Set to false to ignore the physical collision without necessarily skipping on-collision effects.</li> <li>SkipCollisionEffects: Set to true to skip the on-collision code of this entity, such as dealing collision damage. Does not affect the physical collision. Won't skip the on-collision code of the \"Collider\".</li> </ul> <p>For example, you can return <code>{ Collide=true }</code> to make a familiar to collide physically with something (like an enemy, which they don't normally do) without skipping on-collision code (like you would by returning <code>false</code>).</p> ID Name Function Args Optional Args Return Type 26 MC_PRE_FAMILIAR_COLLISION (EntityFamiliar Familiar, Entity Collider, boolean Low) FamiliarVariant boolean or table"},{"location":"enums/ModCallbacks.html#mc_pre_bomb_collision","title":"MC_PRE_BOMB_COLLISION","text":"<p>Now optionally accepts returning a table, with any combination of the following fields:</p> <ul> <li>Collide: Set to true to force the entities to physically collide (push each other away), unless the \"Collider\" ignores the collision. Set to false to ignore the physical collision without necessarily skipping on-collision effects.</li> <li>SkipCollisionEffects: Set to true to skip the on-collision code of this entity, such as dealing collision damage. Does not affect the physical collision. Won't skip the on-collision code of the \"Collider\".</li> </ul> ID Name Function Args Optional Args Return Type 60 MC_PRE_BOMB_COLLISION (EntityBomb Bomb, Entity Collider, boolean Low) BombVariant boolean or table"},{"location":"enums/ModCallbacks.html#mc_pre_pickup_collision","title":"MC_PRE_PICKUP_COLLISION","text":"<p>Now optionally accepts returning a table, with any combination of the following fields:</p> <ul> <li>Collide: Set to true to force the entities to physically collide (push each other away), unless the \"Collider\" ignores the collision. Set to false to ignore the physical collision without necessarily skipping on-collision effects.</li> <li>SkipCollisionEffects: Set to true to skip the on-collision code of this entity, such as dealing collision damage. Does not affect the physical collision. Won't skip the on-collision code of the \"Collider\".</li> </ul> ID Name Function Args Optional Args Return Type 38 MC_PRE_PICKUP_COLLISION (EntityPickup Pickup, Entity Collider, boolean Low) PickupVariant boolean or table"},{"location":"enums/ModCallbacks.html#mc_pre_knife_collision","title":"MC_PRE_KNIFE_COLLISION","text":"<p>Now optionally accepts returning a table, with any combination of the following fields:</p> <ul> <li>Collide: Set to true to force the entities to physically collide (push each other away), unless the \"Collider\" ignores the collision. Set to false to ignore the physical collision without necessarily skipping on-collision effects.</li> <li>SkipCollisionEffects: Set to true to skip the on-collision code of this entity, such as dealing collision damage. Does not affect the physical collision. Won't skip the on-collision code of the \"Collider\".</li> </ul> ID Name Function Args Optional Args Return Type 53 MC_PRE_KNIFE_COLLISION (EntityKnife Knife, Entity Collider, boolean Low) KnifeSubType boolean or table"},{"location":"enums/ModCallbacks.html#mc_pre_projectile_collision","title":"MC_PRE_PROJECTILE_COLLISION","text":"<p>Now optionally accepts returning a table, with any combination of the following fields:</p> <ul> <li>Collide: Set to true to force the entities to physically collide (push each other away), unless the \"Collider\" ignores the collision. Set to false to ignore the physical collision without necessarily skipping on-collision effects.</li> <li>SkipCollisionEffects: Set to true to skip the on-collision code of this entity, such as dealing collision damage. Does not affect the physical collision. Won't skip the on-collision code of the \"Collider\".</li> </ul> ID Name Function Args Optional Args Return Type 46 MC_PRE_PROJECTILE_COLLISION (EntityProjectile Projectile, Entity Collider, boolean Low) ProjectileVariant boolean or table"},{"location":"enums/ModCallbacks.html#mc_pre_npc_collision","title":"MC_PRE_NPC_COLLISION","text":"<p>Now optionally accepts returning a table, with any combination of the following fields:</p> <ul> <li>Collide: Set to true to force the entities to physically collide (push each other away), unless the \"Collider\" ignores the collision. Set to false to ignore the physical collision without necessarily skipping on-collision effects.</li> <li>SkipCollisionEffects: Set to true to skip the on-collision code of this entity, such as dealing collision damage. Does not affect the physical collision. Won't skip the on-collision code of the \"Collider\".</li> </ul> ID Name Function Args Optional Args Return Type 30 MC_PRE_NPC_COLLISION (EntityNPC NPC, Entity Collider, boolean Low) EntityType boolean or table"},{"location":"enums/ModCallbacks.html#mc_entity_take_dmg","title":"MC_ENTITY_TAKE_DMG","text":"<p>Now optionally accepts returning a table, with any combination of the following fields, to override the corresponding argument:</p> <ul> <li>Damage</li> <li>DamageFlags</li> <li>DamageCountdown</li> </ul> <p>Modified values are passed along to the remaining callbacks. Returning false to cancel the damage still skips the remaining callbacks.</p> ID Name Function Args Optional Args Return Type 11 MC_ENTITY_TAKE_DMG (Entity Entity, float Damage, DamageFlags DamageFlags, EntityRef Source, int DamageCountdown) EntityType boolean or table"},{"location":"enums/ModCallbacks.html#new-callbacks","title":"New Callbacks","text":""},{"location":"enums/ModCallbacks.html#mc_pre_add_collectible","title":"MC_PRE_ADD_COLLECTIBLE","text":"<p>Accepts a table of parameters: <code>{Type, Charge, FirstTime, Slot, VarData}</code></p> <p>Alternatively accepts a CollectibleType to change the type without changing any other parameters or a boolean to cancel the addition altogether (false) or force it to happen skipping the following callbacks (true).</p> Example Code <p>This code will transform every collectible into Money = Power once the player picks it up. <pre><code>function mod:myFunction(Type, Charge, FirstTime, Slot, VarData, Player)\n    return CollectibleType.COLLECTIBLE_MONEY_EQUALS_POWER\nend\nmod:AddCallback(ModCallbacks.MC_PRE_ADD_COLLECTIBLE, mod.myFunction)\n</code></pre></p> <p>This code will force active items to be uncharged on pickup. <pre><code>function mod:myFunction(Type, Charge, FirstTime, Slot, VarData, Player)\n    return {Type, 0, FirstTime, Slot, VarData}\nend\nmod:AddCallback(ModCallbacks.MC_PRE_ADD_COLLECTIBLE, mod.myFunction)\n</code></pre></p> ID Name Function Args Optional Args Return Type 1004 MC_PRE_ADD_COLLECTIBLE (CollectibleType Type, int Charge, boolean FirstTime, int Slot, int VarData, EntityPlayer Player) CollectibleType table or CollectibleType"},{"location":"enums/ModCallbacks.html#mc_post_add_collectible","title":"MC_POST_ADD_COLLECTIBLE","text":"<p>Accepts no return parameters.</p> ID Name Function Args Optional Args Return Type 1005 MC_POST_ADD_COLLECTIBLE (CollectibleType Type, int Charge, boolean FirstTime, int Slot, int VarData, EntityPlayer Player) CollectibleType void"},{"location":"enums/ModCallbacks.html#mc_post_backdrop_pre_render_walls","title":"MC_POST_BACKDROP_PRE_RENDER_WALLS","text":"ID Name Function Args Optional Args Return Type 1109 MC_POST_BACKDROP_PRE_RENDER_WALLS void - void"},{"location":"enums/ModCallbacks.html#mc_pre_backdrop_change","title":"MC_PRE_BACKDROP_CHANGE","text":"<p>Accepts an <code>integer</code> to change BackdropType.</p> ID Name Function Args Optional Args Return Type 1141 MC_PRE_BACKDROP_CHANGE (BackdropType Type) - (BackdropType Type)"},{"location":"enums/ModCallbacks.html#mc_pre_backdrop_render_floor","title":"MC_PRE_BACKDROP_RENDER_FLOOR","text":"ID Name Function Args Optional Args Return Type 1107 MC_PRE_BACKDROP_RENDER_FLOOR (ColorModifier ColorModifier) - void"},{"location":"enums/ModCallbacks.html#mc_pre_backdrop_render_walls","title":"MC_PRE_BACKDROP_RENDER_WALLS","text":"ID Name Function Args Optional Args Return Type 1106 MC_PRE_BACKDROP_RENDER_WALLS (ColorModifier ColorModifier) - void"},{"location":"enums/ModCallbacks.html#mc_pre_backdrop_render_water","title":"MC_PRE_BACKDROP_RENDER_WATER","text":"ID Name Function Args Optional Args Return Type 1108 MC_PRE_BACKDROP_RENDER_WATER void - void"},{"location":"enums/ModCallbacks.html#mc_post_bomb_collision","title":"MC_POST_BOMB_COLLISION","text":"<p>Runs after the on-collision code of this entity, assuming it wasn't skipped.</p> ID Name Function Args Optional Args Return Type 1237 MC_POST_BOMB_COLLISION (EntityBomb Bomb, Entity Collider, boolean Low) BombVariant void"},{"location":"enums/ModCallbacks.html#mc_pre_bomb_render","title":"MC_PRE_BOMB_RENDER","text":"<p>Accepts a Vector to modify render offset</p> <p>Alternatively accepts <code>false</code> to cancel rendering</p> Shadows <p>Canceling this callback will not stop rendering of entity shadows. This is being investigated, but in the meantime call SetShadowSize(0) on the entity in MC_POST_UPDATE.</p> ID Name Function Args Optional Args Return Type 1088 MC_PRE_BOMB_RENDER (EntityBomb Bomb, Vector Offset) BombVariant Vector or boolean"},{"location":"enums/ModCallbacks.html#mc_pre_challenge_done","title":"MC_PRE_CHALLENGE_DONE","text":"<p>Called before a challenge is marked as completed.</p> <p>Returning <code>false</code> will prevent further execution of the challenge completion-tracking function.</p> ID Name Function Args Optional Args Return Type 1471 MC_PRE_CHALLENGE_DONE (Challenge, EntityPlayer EntityPlayer) Challenge boolean"},{"location":"enums/ModCallbacks.html#mc_post_challenge_done","title":"MC_POST_CHALLENGE_DONE","text":"<p>Called after a challenge is marked as completed.</p> ID Name Function Args Optional Args Return Type 1472 MC_POST_CHALLENGE_DONE (Challenge) Challenge void"},{"location":"enums/ModCallbacks.html#mc_pre_change_room","title":"MC_PRE_CHANGE_ROOM","text":"<p>Accepts a table of parameters: <code>{TargetRoomIdx, Dimension}</code></p> ID Name Function Args Optional Args Return Type 1061 MC_PRE_CHANGE_ROOM (int TargetRoomIdx, int Dimension) - table"},{"location":"enums/ModCallbacks.html#mc_post_achievement_unlock","title":"MC_POST_ACHIEVEMENT_UNLOCK","text":"<p>Called after an achievement is unlocked.</p> ID Name Function Args Optional Args Return Type 1476 MC_POST_ACHIEVEMENT_UNLOCK (Achievement AchievementID) Achievement void"},{"location":"enums/ModCallbacks.html#mc_pre_completion_event","title":"MC_PRE_COMPLETION_EVENT","text":"<p>Can return a new CompletionType or <code>false</code> to cancel the completion event. Canceling it will prevent all marks and completion event related stuff to trigger for all players.</p> ID Name Function Args Optional Args Return Type 1049 MC_PRE_COMPLETION_EVENT (CompletionType Completion) - CompletionType, boolean"},{"location":"enums/ModCallbacks.html#mc_post_completion_event","title":"MC_POST_COMPLETION_EVENT","text":"<p>Called when a completion event is recorded, such as when defeating an end boss or unlocking a tainted character.</p> ID Name Function Args Optional Args Return Type 1052 MC_POST_COMPLETION_EVENT (CompletionType Completion) - void"},{"location":"enums/ModCallbacks.html#mc_pre_completion_marks_render","title":"MC_PRE_COMPLETION_MARKS_RENDER","text":"<p>Can return <code>false</code> to prevent the completion marks from rendering.</p> ID Name Function Args Optional Args Return Type 1216 MC_PRE_COMPLETION_MARKS_RENDER (Sprite CompletionMarksSprite, Vector RenderPos, Vector RenderScale, int PlayerType) - void"},{"location":"enums/ModCallbacks.html#mc_post_completion_marks_render","title":"MC_POST_COMPLETION_MARKS_RENDER","text":"<p>Accepts no return parameters.</p> ID Name Function Args Optional Args Return Type 1217 MC_POST_COMPLETION_MARKS_RENDER (Sprite CompletionMarksSprite, Vector RenderPos, Vector RenderScale, int PlayerType) - void"},{"location":"enums/ModCallbacks.html#mc_completion_mark_get","title":"MC_COMPLETION_MARK_GET","text":"<p>Can return <code>false</code> to cancel the completion mark.</p> <p>Called when the player gets a completion mark, getting as a parameter the code for the mark in question and the playertype.</p> ID Name Function Args Optional Args Return Type 1047 MC_COMPLETION_MARK_GET (CompletionType Completion, int PlayerType) PlayerType void or false"},{"location":"enums/ModCallbacks.html#mc_post_completion_mark_get","title":"MC_POST_COMPLETION_MARK_GET","text":"<p>Called after the player gets a completion mark, getting as a parameter the code for the mark in question and the playertype.</p> ID Name Function Args Optional Args Return Type 1048 MC_POST_COMPLETION_MARK_GET (CompletionType Completion, int PlayerType) PlayerType void"},{"location":"enums/ModCallbacks.html#mc_console_autocomplete","title":"MC_CONSOLE_AUTOCOMPLETE","text":"<p>This is called whenever a function with the CUSTOM AutocompleteType enum is being entered into the console. Called every time the console input changes.</p> <p>Accepts a table. The table can hold both string values, which will just add the string as a parameter in autocomplete for the command, and a table of two strings which will add the first string as the parameter, and second as a description. Description can be used in autocomplete as well, however pressing TAB will properly autocomplete using the ID, not description (Think the <code>giveitem</code> command, as an example- <code>c1</code> would be The Sad Onion's \"parameter\" and <code>The Sad Onion</code> would be the \"description\", and both work. Pressing TAB will turn the command into <code>give c1</code>.)</p> <p>REPENTOGON handles only showing options relevant for the given input- simply return a table of options, and REPENTOGON will take care of the rest.</p> ID Name Function Args Optional Args Return Type 1120 MC_CONSOLE_AUTOCOMPLETE (string Command, string Params) string Command table"},{"location":"enums/ModCallbacks.html#mc_pre_devil_apply_items","title":"MC_PRE_DEVIL_APPLY_ITEMS","text":"<p>This callback is run when the game starts to tally up traditional items for devil deal calculation. This is called before the stage penalty.</p> <p>Most items that affect devil deal chance perform their changes here.</p> <p>Accepts a <code>float</code> to modify the chance in this step of the calculation.</p> ID Name Function Args Optional Args Return Type 1130 MC_PRE_DEVIL_APPLY_ITEMS (float Chance) - float"},{"location":"enums/ModCallbacks.html#mc_pre_devil_apply_special_items","title":"MC_PRE_DEVIL_APPLY_SPECIAL_ITEMS","text":"<p>Next, the game applies \"special\" items which bypass the stage penalty like Goat Head and Eucharist.</p> <p>Accepts a <code>float</code> to modify the chance in this step of the calculation.</p> ID Name Function Args Optional Args Return Type 1132 MC_PRE_DEVIL_APPLY_SPECIAL_ITEMS (float Chance) - float"},{"location":"enums/ModCallbacks.html#mc_pre_devil_apply_stage_penalty","title":"MC_PRE_DEVIL_APPLY_STAGE_PENALTY","text":"<p>Next, the game calculates stage penalty. If a deal spawned anywhere on the previous two floors, the game decays the resulting chance by either 50% or 25% depending on how many deals have been taken.</p> <p>Important to note that even though the game displays a value of ~66% or ~33% for the 50% and 25% values, respectively, this is because devil chance is not clamped to a value between 0 and 1, and \"100%\" without items generally means a value of ~133%.</p> <p>Accepts a <code>boolean</code>. Return <code>false</code> to bypass the stage penalty.</p> ID Name Function Args Optional Args Return Type 1131 MC_PRE_DEVIL_APPLY_STAGE_PENALTY void - boolean"},{"location":"enums/ModCallbacks.html#mc_post_devil_calculate","title":"MC_POST_DEVIL_CALCULATE","text":"<p>This will override all previous calculation values, ultimately dictating the devil chance.</p> <p>Accepts a <code>float</code> to modify the chance.</p> ID Name Function Args Optional Args Return Type 1133 MC_POST_DEVIL_CALCULATE (float Chance) - float"},{"location":"enums/ModCallbacks.html#mc_pre_effect_render","title":"MC_PRE_EFFECT_RENDER","text":"<p>Accepts a Vector to modify render offset</p> <p>Alternatively accepts <code>false</code> to cancel rendering</p> Shadows <p>Canceling this callback will not stop rendering of entity shadows. This is being investigated, but in the meantime call SetShadowSize(0) on the entity in MC_POST_UPDATE.</p> ID Name Function Args Optional Args Return Type 1087 MC_PRE_EFFECT_RENDER (EntityEffect Effect, Vector Offset) EffectVariant Vector or boolean"},{"location":"enums/ModCallbacks.html#mc_post_entity_take_dmg","title":"MC_POST_ENTITY_TAKE_DMG","text":"<p>Accepts no return parameters.</p> ID Name Function Args Optional Args Return Type 1006 MC_POST_ENTITY_TAKE_DMG (Entity Entity, float Damage, DamageFlags DamageFlags, EntityRef Source, int DamageCountdown) EntityType void"},{"location":"enums/ModCallbacks.html#mc_pre_entity_throw","title":"MC_PRE_ENTITY_THROW","text":"<p>Accepts a Vector which will modify the velocity of the thrown entity.</p> ID Name Function Args Optional Args Return Type 1040 MC_PRE_ENTITY_THROW (EntityPlayer ThrowingPlayer, Entity HeldEntity, Vector Velocity) - Vector"},{"location":"enums/ModCallbacks.html#mc_post_entity_throw","title":"MC_POST_ENTITY_THROW","text":"<p>Accepts no return parameters.</p> ID Name Function Args Optional Args Return Type 1041 MC_POST_ENTITY_THROW (EntityPlayer ThrowingPlayer, Entity ThrownEntity, Vector Velocity) - void"},{"location":"enums/ModCallbacks.html#mc_post_familiar_collision","title":"MC_POST_FAMILIAR_COLLISION","text":"<p>Runs after the on-collision code of this entity, assuming it wasn't skipped.</p> ID Name Function Args Optional Args Return Type 1235 MC_POST_FAMILIAR_COLLISION (EntityFamiliar Familiar, Entity Collider, boolean Low) FamiliarVariant void"},{"location":"enums/ModCallbacks.html#mc_post_familiar_fire_brimstone","title":"MC_POST_FAMILIAR_FIRE_BRIMSTONE","text":"<p>Called when a familiar fires a brimstone laser.</p> <p>Returning any value will have no effect on later callback executions.</p> ID Name Function Args Optional Args Return Type 1261 MC_POST_FAMILIAR_FIRE_BRIMSTONE (EntityLaser Laser) FamiliarVariant void"},{"location":"enums/ModCallbacks.html#mc_post_familiar_fire_projectile","title":"MC_POST_FAMILIAR_FIRE_PROJECTILE","text":"<p>Called when a familiar fires a tear.</p> <p>Returning any value will have no effect on later callback executions.</p> ID Name Function Args Optional Args Return Type 1252 MC_POST_FAMILIAR_FIRE_PROJECTILE (EntityTear Tear) FamiliarVariant void"},{"location":"enums/ModCallbacks.html#mc_post_familiar_fire_tech_laser","title":"MC_POST_FAMILIAR_FIRE_TECH_LASER","text":"<p>Called when a familiar fires a Tech laser.</p> <p>Returning any value will have no effect on later callback executions.</p> ID Name Function Args Optional Args Return Type 1262 MC_POST_FAMILIAR_FIRE_TECH_LASER (EntityLaser Laser) FamiliarVariant void"},{"location":"enums/ModCallbacks.html#mc_pre_familiar_render","title":"MC_PRE_FAMILIAR_RENDER","text":"<p>Accepts a Vector to modify render offset</p> <p>Alternatively accepts <code>false</code> to cancel rendering</p> Shadows <p>Canceling this callback will not stop rendering of entity shadows. This is being investigated, but in the meantime call SetShadowSize(0) on the entity in MC_POST_UPDATE.</p> ID Name Function Args Optional Args Return Type 1080 MC_PRE_FAMILIAR_RENDER (EntityFamiliar Familiar, Vector Offset) FamiliarVariant Vector or boolean"},{"location":"enums/ModCallbacks.html#mc_post_fire_bomb","title":"MC_POST_FIRE_BOMB","text":"<p>Called when the player fires a Dr. Fetus bomb.</p> <p>Returning any value will have no effect on later callback executions.</p> ID Name Function Args Optional Args Return Type 1253 MC_POST_FIRE_BOMB (EntityBomb Bomb) - void"},{"location":"enums/ModCallbacks.html#mc_post_fire_bone_club","title":"MC_POST_FIRE_BONE_CLUB","text":"<p>Called when the player fired The Forgotten's bone club.</p> <p>This is only called when the club is initially spawned, not when swung or charged and shot.</p> <p>Returning any value will have no effect on later callback executions.</p> ID Name Function Args Optional Args Return Type 1254 MC_POST_FIRE_BONE_CLUB (EntityKnife Knife) - void"},{"location":"enums/ModCallbacks.html#mc_post_fire_brimstone_ball","title":"MC_POST_FIRE_BRIMSTONE_BALL","text":"<p>Called when the player fires a brimstone ball.</p> <p>Returning any value will have no effect on later callback executions.</p> ID Name Function Args Optional Args Return Type 1256 MC_POST_FIRE_BRIMSTONE_BALL (EntityEffect Effect) - void"},{"location":"enums/ModCallbacks.html#mc_post_fire_brimstone","title":"MC_POST_FIRE_BRIMSTONE","text":"<p>Called when the player fires a brimstone laser.</p> <p>This is also called for delayed brimstone.</p> <p>Returning any value will have no effect on later callback executions.</p> ID Name Function Args Optional Args Return Type 1255 MC_POST_FIRE_BRIMSTONE (EntityLaser Laser) - void"},{"location":"enums/ModCallbacks.html#mc_post_fire_knife","title":"MC_POST_FIRE_KNIFE","text":"<p>Called when the player fires the knife from Mom's Knife.</p> <p>This is only called when the club is initially spawned, not when charged and shot.</p> <p>Returning any value will have no effect on later callback executions.</p> ID Name Function Args Optional Args Return Type 1257 MC_POST_FIRE_KNIFE (EntityKnife Knife) - void"},{"location":"enums/ModCallbacks.html#mc_post_fire_sword","title":"MC_POST_FIRE_SWORD","text":"<p>Called when the player swings the sword from Spirit Sword.</p> <p>Returning any value will have no effect on later callback executions.</p> ID Name Function Args Optional Args Return Type 1258 MC_POST_FIRE_SWORD (EntityKnife Knife) - void"},{"location":"enums/ModCallbacks.html#mc_post_fire_tech_laser","title":"MC_POST_FIRE_TECH_LASER","text":"<p>Called when the player fires a Tech laser.</p> <p>Returning any value will have no effect on later callback executions.</p> ID Name Function Args Optional Args Return Type 1259 MC_POST_FIRE_TECH_LASER (EntityLaser Laser) - void"},{"location":"enums/ModCallbacks.html#mc_post_fire_tech_x_laser","title":"MC_POST_FIRE_TECH_X_LASER","text":"<p>Called when the player fires a Tech X laser.</p> <p>Returning any value will have no effect on later callback executions.</p> ID Name Function Args Optional Args Return Type 1260 MC_POST_FIRE_TECH_X_LASER (EntityLaser Laser) - void"},{"location":"enums/ModCallbacks.html#mc_get_follower_priority","title":"MC_GET_FOLLOWER_PRIORITY","text":"<p>Accepts FollowerPriority to give familiar priority. Can accept any int.</p> ID Name Function Args Optional Args Return Type 1063 MC_GET_FOLLOWER_PRIORITY (EntityFamiliar Familiar) FamiliarVariant FollowerPriority or int"},{"location":"enums/ModCallbacks.html#mc_pre_get_lighting_alpha","title":"MC_PRE_GET_LIGHTING_ALPHA","text":"<p>Accepts a <code>float</code> to modify the lighting alpha. Generally this is between 0 and 1 but you can technically go higher than this.</p> ID Name Function Args Optional Args Return Type 1150 MC_PRE_GET_LIGHTING_ALPHA (float OriginalAlpha) - float"},{"location":"enums/ModCallbacks.html#mc_get_shop_item_price","title":"MC_GET_SHOP_ITEM_PRICE","text":"<p>Called after the price for a shop item was calculated. Return an integer or PickupPrice to change the price of the item.</p> ID Name Function Args Optional Args Return Type 1066 MC_GET_SHOP_ITEM_PRICE (int PickupVariant, int PickupSubType, int ShopItemID, int Price) int PickupVariant"},{"location":"enums/ModCallbacks.html#mc_pre_grid_entity_decoration_render","title":"MC_PRE_GRID_ENTITY_DECORATION_RENDER","text":"<p>Accepts a Vector to modify render offset or <code>false</code> to cancel rendering.</p> ID Name Function Args Optional Args Return Type 1444 MC_PRE_GRID_ENTITY_DECORATION_RENDER (GridEntityDecoration Decoration, Vector Offset) GridEntityType Vector or boolean"},{"location":"enums/ModCallbacks.html#mc_post_grid_entity_decoration_render","title":"MC_POST_GRID_ENTITY_DECORATION_RENDER","text":"<p>Accepts no return parameters.</p> ID Name Function Args Optional Args Return Type 1445 MC_POST_GRID_ENTITY_DECORATION_RENDER (GridEntityDecoration Decoration) GridEntityType void"},{"location":"enums/ModCallbacks.html#mc_pre_grid_entity_decoration_update","title":"MC_PRE_GRID_ENTITY_DECORATION_UPDATE","text":"<p>Accepts <code>false</code> to cancel the update.</p> ID Name Function Args Optional Args Return Type 1400 MC_PRE_GRID_ENTITY_DECORATION_UPDATE (GridEntityDecoration Decoration) GridEntityType boolean"},{"location":"enums/ModCallbacks.html#mc_post_grid_entity_decoration_update","title":"MC_POST_GRID_ENTITY_DECORATION_UPDATE","text":"<p>Accepts no return parameters.</p> ID Name Function Args Optional Args Return Type 1401 MC_POST_GRID_ENTITY_DECORATION_UPDATE (GridEntityDecoration Decoration) GridEntityType void"},{"location":"enums/ModCallbacks.html#mc_pre_grid_entity_door_render","title":"MC_PRE_GRID_ENTITY_DOOR_RENDER","text":"<p>Accepts a Vector to modify render offset or <code>false</code> to cancel rendering.</p> ID Name Function Args Optional Args Return Type 1446 MC_PRE_GRID_ENTITY_DOOR_RENDER (GridEntityDoor Door, Vector Offset) GridEntityType Vector or boolean"},{"location":"enums/ModCallbacks.html#mc_post_grid_entity_door_render","title":"MC_POST_GRID_ENTITY_DOOR_RENDER","text":"<p>Accepts no return parameters.</p> ID Name Function Args Optional Args Return Type 1447 MC_POST_GRID_ENTITY_DOOR_RENDER (GridEntityDoor Door) GridEntityType void"},{"location":"enums/ModCallbacks.html#mc_pre_grid_entity_door_update","title":"MC_PRE_GRID_ENTITY_DOOR_UPDATE","text":"<p>Accepts <code>false</code> to cancel the update.</p> ID Name Function Args Optional Args Return Type 1402 MC_PRE_GRID_ENTITY_DOOR_UPDATE (GridEntityDoor Door) GridEntityType boolean"},{"location":"enums/ModCallbacks.html#mc_post_grid_entity_door_update","title":"MC_POST_GRID_ENTITY_DOOR_UPDATE","text":"<p>Accepts no return parameters.</p> ID Name Function Args Optional Args Return Type 1403 MC_POST_GRID_ENTITY_DOOR_UPDATE (GridEntityDoor Door) GridEntityType void"},{"location":"enums/ModCallbacks.html#mc_pre_grid_entity_fire_render","title":"MC_PRE_GRID_ENTITY_FIRE_RENDER","text":"<p>Accepts a Vector to modify render offset or <code>false</code> to cancel rendering.</p> Warning <p>Fire grid entities are largely unused, and in most cases you'll want to target the EntityNPC fireplaces.</p> ID Name Function Args Optional Args Return Type 1448 MC_PRE_GRID_ENTITY_FIRE_RENDER (GridEntityFire Fire, Vector Offset) GridEntityType Vector or boolean"},{"location":"enums/ModCallbacks.html#mc_post_grid_entity_fire_render","title":"MC_POST_GRID_ENTITY_FIRE_RENDER","text":"<p>Accepts no return parameters.</p> ID Name Function Args Optional Args Return Type 1449 MC_POST_GRID_ENTITY_FIRE_RENDER (GridEntityFire Fire) GridEntityType void"},{"location":"enums/ModCallbacks.html#mc_pre_grid_entity_fire_update","title":"MC_PRE_GRID_ENTITY_FIRE_UPDATE","text":"<p>Accepts <code>false</code> to cancel the update.</p> Warning <p>Fire grid entities are largely unused, and in most cases you'll want to target the EntityNPC fireplaces.</p> ID Name Function Args Optional Args Return Type 1404 MC_PRE_GRID_ENTITY_FIRE_UPDATE (GridEntityFire Fire) GridEntityType boolean"},{"location":"enums/ModCallbacks.html#mc_post_grid_entity_fire_update","title":"MC_POST_GRID_ENTITY_FIRE_UPDATE","text":"<p>Accepts no return parameters.</p> ID Name Function Args Optional Args Return Type 1405 MC_POST_GRID_ENTITY_FIRE_UPDATE (GridEntityFire Fire) GridEntityType void"},{"location":"enums/ModCallbacks.html#mc_pre_grid_entity_gravity_update","title":"MC_PRE_GRID_ENTITY_GRAVITY_UPDATE","text":"<p>Accepts <code>false</code> to cancel the update.</p> ID Name Function Args Optional Args Return Type 1406 MC_PRE_GRID_ENTITY_GRAVITY_UPDATE (GridEntityGravity Gravity) GridEntityType boolean"},{"location":"enums/ModCallbacks.html#mc_post_grid_entity_gravity_update","title":"MC_POST_GRID_ENTITY_GRAVITY_UPDATE","text":"<p>Accepts no return parameters.</p> ID Name Function Args Optional Args Return Type 1407 MC_POST_GRID_ENTITY_GRAVITY_UPDATE (GridEntityGravity Gravity) GridEntityType void"},{"location":"enums/ModCallbacks.html#mc_pre_grid_entity_lock_render","title":"MC_PRE_GRID_ENTITY_LOCK_RENDER","text":"<p>Accepts a Vector to modify render offset or <code>false</code> to cancel rendering.</p> ID Name Function Args Optional Args Return Type 1450 MC_PRE_GRID_ENTITY_LOCK_RENDER (GridEntityLock Lock, Vector Offset) GridEntityType Vector or boolean"},{"location":"enums/ModCallbacks.html#mc_post_grid_entity_lock_render","title":"MC_POST_GRID_ENTITY_LOCK_RENDER","text":"<p>Accepts no return parameters.</p> ID Name Function Args Optional Args Return Type 1451 MC_POST_GRID_ENTITY_LOCK_RENDER (GridEntityLock Lock) GridEntityType void"},{"location":"enums/ModCallbacks.html#mc_pre_grid_entity_lock_update","title":"MC_PRE_GRID_ENTITY_LOCK_UPDATE","text":"<p>Accepts <code>false</code> to cancel the update.</p> ID Name Function Args Optional Args Return Type 1408 MC_PRE_GRID_ENTITY_LOCK_UPDATE (GridEntityLock Lock) GridEntityType boolean"},{"location":"enums/ModCallbacks.html#mc_post_grid_entity_lock_update","title":"MC_POST_GRID_ENTITY_LOCK_UPDATE","text":"<p>Accepts no return parameters.</p> ID Name Function Args Optional Args Return Type 1409 MC_POST_GRID_ENTITY_LOCK_UPDATE (GridEntityLock Lock) GridEntityType void"},{"location":"enums/ModCallbacks.html#mc_pre_grid_entity_pit_render","title":"MC_PRE_GRID_ENTITY_PIT_RENDER","text":"<p>Accepts a Vector to modify render offset or <code>false</code> to cancel rendering.</p> ID Name Function Args Optional Args Return Type 1454 MC_PRE_GRID_ENTITY_PIT_RENDER (GridEntityPit Pit, Vector Offset) GridEntityType Vector or boolean"},{"location":"enums/ModCallbacks.html#mc_post_grid_entity_pit_render","title":"MC_POST_GRID_ENTITY_PIT_RENDER","text":"<p>Accepts no return parameters.</p> ID Name Function Args Optional Args Return Type 1455 MC_POST_GRID_ENTITY_PIT_RENDER (GridEntityPit Pit) GridEntityType void"},{"location":"enums/ModCallbacks.html#mc_pre_grid_entity_pit_update","title":"MC_PRE_GRID_ENTITY_PIT_UPDATE","text":"<p>Accepts <code>false</code> to cancel the update.</p> ID Name Function Args Optional Args Return Type 1410 MC_PRE_GRID_ENTITY_PIT_UPDATE (GridEntityPit Pit) GridEntityType boolean"},{"location":"enums/ModCallbacks.html#mc_post_grid_entity_pit_update","title":"MC_POST_GRID_ENTITY_PIT_UPDATE","text":"<p>Accepts no return parameters.</p> ID Name Function Args Optional Args Return Type 1411 MC_POST_GRID_ENTITY_PIT_UPDATE (GridEntityPit Pit) GridEntityType void"},{"location":"enums/ModCallbacks.html#mc_pre_grid_entity_poop_render","title":"MC_PRE_GRID_ENTITY_POOP_RENDER","text":"<p>Accepts a Vector to modify render offset or <code>false</code> to cancel rendering.</p> Warning <p>This callback does not include the EntityNPC poops used by Tainted ???.</p> ID Name Function Args Optional Args Return Type 1456 MC_PRE_GRID_ENTITY_POOP_RENDER (GridEntityPoop Poop, Vector Offset) GridEntityType Vector or boolean"},{"location":"enums/ModCallbacks.html#mc_post_grid_entity_poop_render","title":"MC_POST_GRID_ENTITY_POOP_RENDER","text":"<p>Accepts no return parameters.</p> ID Name Function Args Optional Args Return Type 1457 MC_POST_GRID_ENTITY_POOP_RENDER (GridEntityPoop Poop) GridEntityType void"},{"location":"enums/ModCallbacks.html#mc_pre_grid_entity_poop_update","title":"MC_PRE_GRID_ENTITY_POOP_UPDATE","text":"<p>Accepts <code>false</code> to cancel the update.</p> ID Name Function Args Optional Args Return Type 1412 MC_PRE_GRID_ENTITY_POOP_UPDATE (GridEntityPoop Poop) GridEntityType boolean"},{"location":"enums/ModCallbacks.html#mc_post_grid_entity_poop_update","title":"MC_POST_GRID_ENTITY_POOP_UPDATE","text":"<p>Accepts no return parameters.</p> ID Name Function Args Optional Args Return Type 1413 MC_POST_GRID_ENTITY_POOP_UPDATE (GridEntityPoop Poop) GridEntityType void"},{"location":"enums/ModCallbacks.html#mc_pre_grid_entity_pressureplate_render","title":"MC_PRE_GRID_ENTITY_PRESSUREPLATE_RENDER","text":"<p>Accepts a Vector to modify render offset or <code>false</code> to cancel rendering.</p> ID Name Function Args Optional Args Return Type 1460 MC_PRE_GRID_ENTITY_PRESSUREPLATE_RENDER (GridEntityPressurePlate PressurePlate, Vector Offset) GridEntityType Vector or boolean"},{"location":"enums/ModCallbacks.html#mc_post_grid_entity_pressureplate_render","title":"MC_POST_GRID_ENTITY_PRESSUREPLATE_RENDER","text":"<p>Accepts no return parameters.</p> ID Name Function Args Optional Args Return Type 1461 MC_POST_GRID_ENTITY_PRESSUREPLATE_RENDER (GridEntityPressurePlate PressurePlate) GridEntityType void"},{"location":"enums/ModCallbacks.html#mc_pre_grid_entity_pressureplate_update","title":"MC_PRE_GRID_ENTITY_PRESSUREPLATE_UPDATE","text":"<p>Accepts <code>false</code> to cancel the update.</p> ID Name Function Args Optional Args Return Type 1414 MC_PRE_GRID_ENTITY_PRESSUREPLATE_UPDATE (GridEntityPressurePlate PressurePlate) GridEntityType boolean"},{"location":"enums/ModCallbacks.html#mc_post_grid_entity_pressureplate_update","title":"MC_POST_GRID_ENTITY_PRESSUREPLATE_UPDATE","text":"<p>Accepts no return parameters.</p> ID Name Function Args Optional Args Return Type 1415 MC_POST_GRID_ENTITY_PRESSUREPLATE_UPDATE (GridEntityPressurePlate PressurePlate) GridEntityType void"},{"location":"enums/ModCallbacks.html#mc_pre_grid_entity_rock_render","title":"MC_PRE_GRID_ENTITY_ROCK_RENDER","text":"<p>Accepts a Vector to modify render offset or <code>false</code> to cancel rendering.</p> ID Name Function Args Optional Args Return Type 1458 MC_PRE_GRID_ENTITY_ROCK_RENDER (GridEntityRock Rock, Vector Offset) GridEntityType Vector or boolean"},{"location":"enums/ModCallbacks.html#mc_post_grid_entity_rock_render","title":"MC_POST_GRID_ENTITY_ROCK_RENDER","text":"<p>Accepts no return parameters.</p> ID Name Function Args Optional Args Return Type 1459 MC_POST_GRID_ENTITY_ROCK_RENDER (GridEntityRock Rock) GridEntityType void"},{"location":"enums/ModCallbacks.html#mc_pre_grid_entity_rock_update","title":"MC_PRE_GRID_ENTITY_ROCK_UPDATE","text":"<p>Accepts <code>false</code> to cancel the update.</p> ID Name Function Args Optional Args Return Type 1416 MC_PRE_GRID_ENTITY_ROCK_UPDATE (GridEntityRock Rock) GridEntityType boolean"},{"location":"enums/ModCallbacks.html#mc_post_grid_entity_rock_update","title":"MC_POST_GRID_ENTITY_ROCK_UPDATE","text":"<p>Accepts no return parameters.</p> ID Name Function Args Optional Args Return Type 1417 MC_POST_GRID_ENTITY_ROCK_UPDATE (GridEntityRock Rock) GridEntityType void"},{"location":"enums/ModCallbacks.html#mc_pre_grid_entity_spawn","title":"MC_PRE_GRID_ENTITY_SPAWN","text":"<p>This is called when a GridEntity is spawned outside of Room initialization.</p> <p>Accepts <code>false</code> to cancel spawning the grid, a table of <code>{Type, Variant, Vardata, SpawnSeed}</code> to modify it, or a GridEntityDesc to override it entirely.</p> Warning <p><code>Desc</code> will in most cases be <code>nil</code>. The exceptions to this are the poops spawned by Mole npcs, grids spawned by TurnGold, or lua-made spawns called with the new <code>SpawnGridEntity(int GridIndex, GridEntityDesc Descriptor)</code> override.</p> ID Name Function Args Optional Args Return Type 1100 MC_PRE_GRID_ENTITY_SPAWN (GridEntityType Type, int Variant, int VarData, int GridIdx, int SpawnSeed, GridEntityDesc Desc) GridEntityType Type boolean, table, or GridEntityDesc"},{"location":"enums/ModCallbacks.html#mc_post_grid_entity_spawn","title":"MC_POST_GRID_ENTITY_SPAWN","text":"<p>Accepts no return parameters.</p> ID Name Function Args Optional Args Return Type 1101 MC_POST_GRID_ENTITY_SPAWN (GridEntity Grid) GridEntityType Type void"},{"location":"enums/ModCallbacks.html#mc_pre_grid_entity_spikes_render","title":"MC_PRE_GRID_ENTITY_SPIKES_RENDER","text":"<p>Accepts a Vector to modify render offset or <code>false</code> to cancel rendering.</p> ID Name Function Args Optional Args Return Type 1432 MC_PRE_GRID_ENTITY_SPIKES_RENDER (GridEntitySpikes Grid, Vector Offset) GridEntityType Vector or boolean"},{"location":"enums/ModCallbacks.html#mc_post_grid_entity_spikes_render","title":"MC_POST_GRID_ENTITY_SPIKES_RENDER","text":"<p>Accepts no return parameters.</p> ID Name Function Args Optional Args Return Type 1433 MC_POST_GRID_ENTITY_SPIKES_RENDER (GridEntitySpikes Grid) GridEntityType void"},{"location":"enums/ModCallbacks.html#mc_pre_grid_entity_spikes_update","title":"MC_PRE_GRID_ENTITY_SPIKES_UPDATE","text":"<p>Accepts <code>false</code> to cancel the update.</p> ID Name Function Args Optional Args Return Type 1418 MC_PRE_GRID_ENTITY_SPIKES_UPDATE (GridEntitySpikes Spikes) GridEntityType boolean"},{"location":"enums/ModCallbacks.html#mc_post_grid_entity_spikes_update","title":"MC_POST_GRID_ENTITY_SPIKES_UPDATE","text":"<p>Accepts no return parameters.</p> ID Name Function Args Optional Args Return Type 1419 MC_POST_GRID_ENTITY_SPIKES_UPDATE (GridEntitySpikes Spikes) GridEntityType void"},{"location":"enums/ModCallbacks.html#mc_pre_grid_entity_staircase_render","title":"MC_PRE_GRID_ENTITY_STAIRCASE_RENDER","text":"<p>Accepts a Vector to modify render offset or <code>false</code> to cancel rendering.</p> ID Name Function Args Optional Args Return Type 1440 MC_PRE_GRID_ENTITY_STAIRCASE_RENDER (GridEntityStairs Staircase, Vector Offset) GridEntityType Vector or boolean"},{"location":"enums/ModCallbacks.html#mc_post_grid_entity_staircase_render","title":"MC_POST_GRID_ENTITY_STAIRCASE_RENDER","text":"<p>Accepts no return parameters.</p> ID Name Function Args Optional Args Return Type 1441 MC_POST_GRID_ENTITY_STAIRCASE_RENDER (GridEntityStairs Staircase) GridEntityType void"},{"location":"enums/ModCallbacks.html#mc_pre_grid_entity_staircase_update","title":"MC_PRE_GRID_ENTITY_STAIRCASE_UPDATE","text":"<p>Accepts <code>false</code> to cancel the update.</p> ID Name Function Args Optional Args Return Type 1420 MC_PRE_GRID_ENTITY_STAIRCASE_UPDATE (GridEntityStairs Staircase) GridEntityType boolean"},{"location":"enums/ModCallbacks.html#mc_post_grid_entity_staircase_update","title":"MC_POST_GRID_ENTITY_STAIRCASE_UPDATE","text":"<p>Accepts no return parameters.</p> ID Name Function Args Optional Args Return Type 1421 MC_POST_GRID_ENTITY_STAIRCASE_UPDATE (GridEntityStairs Staircase) GridEntityType void"},{"location":"enums/ModCallbacks.html#mc_pre_grid_entity_statue_update","title":"MC_PRE_GRID_ENTITY_STATUE_UPDATE","text":"<p>Accepts <code>false</code> to cancel the update.</p> ID Name Function Args Optional Args Return Type 1422 MC_PRE_GRID_ENTITY_STATUE_UPDATE (GridEntityStatue Statue) GridEntityType boolean"},{"location":"enums/ModCallbacks.html#mc_post_grid_entity_statue_update","title":"MC_POST_GRID_ENTITY_STATUE_UPDATE","text":"<p>Accepts no return parameters.</p> ID Name Function Args Optional Args Return Type 1423 MC_POST_GRID_ENTITY_STATUE_UPDATE (GridEntityStatue Statue) GridEntityType void"},{"location":"enums/ModCallbacks.html#mc_pre_grid_entity_teleporter_render","title":"MC_PRE_GRID_ENTITY_TELEPORTER_RENDER","text":"<p>Accepts a Vector to modify render offset or <code>false</code> to cancel rendering.</p> ID Name Function Args Optional Args Return Type 1452 MC_PRE_GRID_ENTITY_TELEPORTER_RENDER (GridEntityTeleporter Teleporter, Vector Offset) GridEntityType Vector or boolean"},{"location":"enums/ModCallbacks.html#mc_post_grid_entity_teleporter_render","title":"MC_POST_GRID_ENTITY_TELEPORTER_RENDER","text":"<p>Accepts no return parameters.</p> ID Name Function Args Optional Args Return Type 1453 MC_POST_GRID_ENTITY_TELEPORTER_RENDER (GridEntityTeleporter Teleporter) GridEntityType void"},{"location":"enums/ModCallbacks.html#mc_pre_grid_entity_teleporter_update","title":"MC_PRE_GRID_ENTITY_TELEPORTER_UPDATE","text":"<p>Accepts <code>false</code> to cancel the update.</p> ID Name Function Args Optional Args Return Type 1424 MC_PRE_GRID_ENTITY_TELEPORTER_UPDATE (GridEntityTeleporter Teleporter) GridEntityType boolean"},{"location":"enums/ModCallbacks.html#mc_post_grid_entity_teleporter_update","title":"MC_POST_GRID_ENTITY_TELEPORTER_UPDATE","text":"<p>Accepts no return parameters.</p> ID Name Function Args Optional Args Return Type 1425 MC_POST_GRID_ENTITY_TELEPORTER_UPDATE (GridEntityTeleporter Teleporter) GridEntityType void"},{"location":"enums/ModCallbacks.html#mc_pre_grid_entity_tnt_render","title":"MC_PRE_GRID_ENTITY_TNT_RENDER","text":"<p>Accepts a Vector to modify render offset or <code>false</code> to cancel rendering.</p> ID Name Function Args Optional Args Return Type 1436 MC_PRE_GRID_ENTITY_TNT_RENDER (GridEntityTNT TNT, Vector Offset) GridEntityType Vector or boolean"},{"location":"enums/ModCallbacks.html#mc_post_grid_entity_tnt_render","title":"MC_POST_GRID_ENTITY_TNT_RENDER","text":"<p>Accepts no return parameters.</p> ID Name Function Args Optional Args Return Type 1437 MC_POST_GRID_ENTITY_TNT_RENDER (GridEntityTNT TNT) GridEntityType void"},{"location":"enums/ModCallbacks.html#mc_pre_grid_entity_tnt_update","title":"MC_PRE_GRID_ENTITY_TNT_UPDATE","text":"<p>Accepts <code>false</code> to cancel the update.</p> ID Name Function Args Optional Args Return Type 1430 MC_PRE_GRID_ENTITY_TNT_UPDATE (GridEntityTNT TNT) GridEntityType boolean"},{"location":"enums/ModCallbacks.html#mc_post_grid_entity_tnt_update","title":"MC_POST_GRID_ENTITY_TNT_UPDATE","text":"<p>Accepts no return parameters.</p> ID Name Function Args Optional Args Return Type 1431 MC_POST_GRID_ENTITY_TNT_UPDATE (GridEntityTNT TNT) GridEntityType void"},{"location":"enums/ModCallbacks.html#mc_pre_grid_entity_trapdoor_render","title":"MC_PRE_GRID_ENTITY_TRAPDOOR_RENDER","text":"<p>Accepts a Vector to modify render offset or <code>false</code> to cancel rendering.</p> ID Name Function Args Optional Args Return Type 1438 MC_PRE_GRID_ENTITY_TRAPDOOR_RENDER (GridEntityTrapDoor TrapDoor, Vector Offset) GridEntityType Vector or boolean"},{"location":"enums/ModCallbacks.html#mc_post_grid_entity_trapdoor_render","title":"MC_POST_GRID_ENTITY_TRAPDOOR_RENDER","text":"<p>Accepts no return parameters.</p> ID Name Function Args Optional Args Return Type 1439 MC_POST_GRID_ENTITY_TRAPDOOR_RENDER (GridEntityTrapDoor TrapDoor) GridEntityType void"},{"location":"enums/ModCallbacks.html#mc_pre_grid_entity_trapdoor_update","title":"MC_PRE_GRID_ENTITY_TRAPDOOR_UPDATE","text":"<p>Accepts <code>false</code> to cancel the update.</p> ID Name Function Args Optional Args Return Type 1426 MC_PRE_GRID_ENTITY_TRAPDOOR_UPDATE (GridEntityTrapDoor TrapDoor) GridEntityType boolean"},{"location":"enums/ModCallbacks.html#mc_post_grid_entity_trapdoor_update","title":"MC_POST_GRID_ENTITY_TRAPDOOR_UPDATE","text":"<p>Accepts no return parameters.</p> ID Name Function Args Optional Args Return Type 1427 MC_POST_GRID_ENTITY_TRAPDOOR_UPDATE (GridEntityTrapDoor TrapDoor) GridEntityType void"},{"location":"enums/ModCallbacks.html#mc_pre_grid_entity_wall_render","title":"MC_PRE_GRID_ENTITY_WALL_RENDER","text":"<p>Accepts a Vector to modify render offset or <code>false</code> to cancel rendering.</p> ID Name Function Args Optional Args Return Type 1462 MC_PRE_GRID_ENTITY_WALL_RENDER (GridEntityWall Wall, Vector Offset) GridEntityType Vector or boolean"},{"location":"enums/ModCallbacks.html#mc_post_grid_entity_wall_render","title":"MC_POST_GRID_ENTITY_WALL_RENDER","text":"<p>Accepts no return parameters.</p> ID Name Function Args Optional Args Return Type 1463 MC_POST_GRID_ENTITY_WALL_RENDER (GridEntityWall Wall) GridEntityType void"},{"location":"enums/ModCallbacks.html#mc_pre_grid_entity_web_render","title":"MC_PRE_GRID_ENTITY_WEB_RENDER","text":"<p>Accepts a Vector to modify render offset or <code>false</code> to cancel rendering.</p> ID Name Function Args Optional Args Return Type 1434 MC_PRE_GRID_ENTITY_WEB_RENDER (GridEntityWeb Web, Vector Offset) GridEntityType Vector or boolean"},{"location":"enums/ModCallbacks.html#mc_post_grid_entity_web_render","title":"MC_POST_GRID_ENTITY_WEB_RENDER","text":"<p>Accepts no return parameters.</p> ID Name Function Args Optional Args Return Type 1435 MC_POST_GRID_ENTITY_WEB_RENDER (GridEntityWeb Web) GridEntityType void"},{"location":"enums/ModCallbacks.html#mc_pre_grid_entity_web_update","title":"MC_PRE_GRID_ENTITY_WEB_UPDATE","text":"<p>Accepts <code>false</code> to cancel the update.</p> ID Name Function Args Optional Args Return Type 1428 MC_PRE_GRID_ENTITY_WEB_UPDATE (GridEntityWeb Web) GridEntityType boolean"},{"location":"enums/ModCallbacks.html#mc_post_grid_entity_web_update","title":"MC_POST_GRID_ENTITY_WEB_UPDATE","text":"<p>Accepts no return parameters.</p> ID Name Function Args Optional Args Return Type 1429 MC_POST_GRID_ENTITY_WEB_UPDATE (GridEntityWeb Web) GridEntityType void"},{"location":"enums/ModCallbacks.html#mc_grid_hurt_damage","title":"MC_GRID_HURT_DAMAGE","text":"<p>Called before a GridEntity attempts to inflict damage on an entity.</p> <p>Return false if the entity or player should ignore the damage.</p> Bug <p>The float DamageAmount (the intended damage amount to non-player entities) is currently bugged and always appears to be 0 - will be fixed in a future update.</p> ID Name Function Args Optional Args Return Type 1012 MC_GRID_HURT_DAMAGE (GridEntity GridEntity, Entity Entity, int PlayerDamageAmount, DamageFlags DamageFlags, float DamageAmount, boolean IgnoreGridCollisionClass) GridEntityType boolean"},{"location":"enums/ModCallbacks.html#mc_post_grid_hurt_damage","title":"MC_POST_GRID_HURT_DAMAGE","text":"<p>Called after a GridEntity attempts to inflict damage on an entity. Note that this does not guarantee that the entity actually took the damage (for example, if a player is currently invincible).</p> <p>Accepts no return parameters.</p> Bug <p>The float DamageAmount (the intended damage amount to non-player entities) is currently bugged and always appears to be 0 - will be fixed in a future update.</p> ID Name Function Args Optional Args Return Type 1013 MC_POST_GRID_HURT_DAMAGE (GridEntity GridEntity, Entity Entity, int PlayerDamageAmount, DamageFlags DamageFlags, float DamageAmount, boolean IgnoreGridCollisionClass) GridEntityType void"},{"location":"enums/ModCallbacks.html#mc_post_grid_rock_destroy","title":"MC_POST_GRID_ROCK_DESTROY","text":"<p>Accepts no return parameters.</p> ID Name Function Args Optional Args Return Type 1011 MC_POST_GRID_ROCK_DESTROY (GridEntityRock Rock, GridEntityType Type, boolean Immediate) GridEntityType void"},{"location":"enums/ModCallbacks.html#mc_hud_render","title":"MC_HUD_RENDER","text":"<p>Accepts no return parameters.</p> ID Name Function Args Optional Args Return Type 1022 MC_HUD_RENDER void - void"},{"location":"enums/ModCallbacks.html#mc_post_hud_render","title":"MC_POST_HUD_RENDER","text":"<p>Accepts no return parameters.</p> ID Name Function Args Optional Args Return Type 1024 MC_POST_HUD_RENDER void - void"},{"location":"enums/ModCallbacks.html#mc_hud_update","title":"MC_HUD_UPDATE","text":"<p>Accepts no return parameters.</p> ID Name Function Args Optional Args Return Type 1020 MC_HUD_UPDATE void - void"},{"location":"enums/ModCallbacks.html#mc_post_hud_update","title":"MC_POST_HUD_UPDATE","text":"<p>Accepts no return parameters.</p> ID Name Function Args Optional Args Return Type 1021 MC_POST_HUD_UPDATE void - void"},{"location":"enums/ModCallbacks.html#mc_is_persistent_room_entity","title":"MC_IS_PERSISTENT_ROOM_ENTITY","text":"<p>Returning <code>true</code> allows entity to respawn.</p> ID Name Function Args Optional Args Return Type 1263 MC_IS_PERSISTENT_ROOM_ENTITY (EntityType Type, int Variant) - boolean"},{"location":"enums/ModCallbacks.html#mc_pre_item_overlay_show","title":"MC_PRE_ITEM_OVERLAY_SHOW","text":"<p>Accepts an integer to change Giantbook</p> <p>Alternatively accepts <code>true</code> to cancel item overlay show</p> ID Name Function Args Optional Args Return Type 1076 MC_PRE_ITEM_OVERLAY_SHOW (Giantbook GiantbookID, int Delay, EntityPlayer Player) Giantbook Giantbook or boolean"},{"location":"enums/ModCallbacks.html#mc_post_item_overlay_show","title":"MC_POST_ITEM_OVERLAY_SHOW","text":"<p>Accepts no return parameters.</p> ID Name Function Args Optional Args Return Type 1134 MC_POST_ITEM_OVERLAY_SHOW (Giantbook GiantbookID, int Delay, EntityPlayer Player) Giantbook void"},{"location":"enums/ModCallbacks.html#mc_post_item_overlay_update","title":"MC_POST_ITEM_OVERLAY_UPDATE","text":"<p>Accepts no return parameters.</p> ID Name Function Args Optional Args Return Type 1075 MC_POST_ITEM_OVERLAY_UPDATE void Giantbook void"},{"location":"enums/ModCallbacks.html#mc_post_knife_collision","title":"MC_POST_KNIFE_COLLISION","text":"<p>Runs after the on-collision code of this entity, assuming it wasn't skipped.</p> ID Name Function Args Optional Args Return Type 1243 MC_POST_KNIFE_COLLISION (EntityKnife Knife, Entity Collider, boolean Low) KnifeSubType void"},{"location":"enums/ModCallbacks.html#mc_pre_knife_render","title":"MC_PRE_KNIFE_RENDER","text":"<p>Accepts a Vector to modify render offset</p> <p>Alternatively accepts <code>false</code> to cancel rendering</p> Shadows <p>Canceling this callback will not stop rendering of entity shadows. This is being investigated, but in the meantime call SetShadowSize(0) on the entity in MC_POST_UPDATE.</p> ID Name Function Args Optional Args Return Type 1086 MC_PRE_KNIFE_RENDER (EntityKnife Knife, Vector Offset) KnifeVariant Vector or boolean"},{"location":"enums/ModCallbacks.html#mc_pre_laser_collision","title":"MC_PRE_LASER_COLLISION","text":"<p>Runs right before a laser hits an entity. Return true to ignore the collision.</p> ID Name Function Args Optional Args Return Type 1248 MC_PRE_LASER_COLLISION (EntityLaser Laser, Entity Collider) LaserVariant boolean"},{"location":"enums/ModCallbacks.html#mc_post_laser_collision","title":"MC_POST_LASER_COLLISION","text":"<p>Runs after a laser hits an entity.</p> ID Name Function Args Optional Args Return Type 1249 MC_POST_LASER_COLLISION (EntityLaser Laser, Entity Collider) LaserVariant void"},{"location":"enums/ModCallbacks.html#mc_pre_level_init","title":"MC_PRE_LEVEL_INIT","text":"<p>Accepts no return parameters.</p> ID Name Function Args Optional Args Return Type 1060 MC_PRE_LEVEL_INIT void - void"},{"location":"enums/ModCallbacks.html#mc_post_level_layout_generated","title":"MC_POST_LEVEL_LAYOUT_GENERATED","text":"ID Name Function Args Optional Args Return Type 1099 MC_POST_LEVEL_LAYOUT_GENERATED (LevelGenerator LevelGenerator) - void"},{"location":"enums/ModCallbacks.html#mc_pre_level_place_room","title":"MC_PRE_LEVEL_PLACE_ROOM","text":"<p>Return a room config to replace the room that will be placed</p> Warning <p>The new room shape must be the same, and the new available door slots must be compatible with the original room doors.</p> ID Name Function Args Optional Args Return Type 1137 MC_PRE_LEVEL_PLACE_ROOM (LevelGeneratorRoom Slot, RoomConfigRoom RoomConfig, int Seed) - RoomConfigRoom Config"},{"location":"enums/ModCallbacks.html#mc_pre_level_select","title":"MC_PRE_LEVEL_SELECT","text":"<p>This callback is fired when the game selects which level (also known as stage) to load, usually when the player enters a trapdoor. The callback accepts two parameters:</p> <ul> <li>Level: the level selected by the game, as defined in the LevelStage enumeration.</li> <li>Type: the type of the level selected by the game, as defined in the StageType enumeration.</li> </ul> <p>This callback can return either nothing or a table. </p> <ul> <li>Nothing: let the game continue with the level stage / stage type pair it selected;</li> <li>Table: must contain two fields (anonymous). The first field is the desired level stage, second field is the desired stage type.</li> </ul> <p>If you return a table, Repentogon will check that the values fall in the allowed ranges for the level stage and the stage type.</p> Value ranges <p>Remember that the range of level types is not the same between normal / hard on one side and greed / greedier on the other. </p> <p>Also remember that since Repentance the stage type value 3 is deprecated.</p> ID Name Function Args Optional Args Return Type 1104 MC_PRE_LEVEL_SELECT (LevelStage Level, StageType Type) - void"},{"location":"enums/ModCallbacks.html#mc_main_menu_render","title":"MC_MAIN_MENU_RENDER","text":"<p>Accepts no return parameters.</p> ID Name Function Args Optional Args Return Type 1023 MC_MAIN_MENU_RENDER void - void"},{"location":"enums/ModCallbacks.html#mc_pre_mega_satan_ending","title":"MC_PRE_MEGA_SATAN_ENDING","text":"<p>Called right before Mega Satan forcibly ends the game. </p> <ul> <li>Accepts <code>true</code> to suppress the ending, guaranteeing a portal to the Void while retaining the completion mark for this character. </li> <li><code>false</code> or <code>nil</code> will have no effect. I might look into making <code>false</code> guarantee an ending?</li> </ul> ID Name Function Args Optional Args Return Type 1201 MC_PRE_MEGA_SATAN_ENDING void - boolean"},{"location":"enums/ModCallbacks.html#mc_menu_input_action","title":"MC_MENU_INPUT_ACTION","text":"<p>Same as MC_INPUT_ACTION, but only works in the main menu.</p> ID Name Function Args Optional Args Return Type 1464 MC_MENU_INPUT_ACTION (Entity, InputHook, ButtonAction) InputHook boolean or float"},{"location":"enums/ModCallbacks.html#mc_post_mods_loaded","title":"MC_POST_MODS_LOADED","text":"<p>Called after all Lua scripts have been loaded. Ideal for running code that is expected to run after all mods are initialized, but without the need for load order idiocy!</p> <p>Accepts no return parameters.</p> ID Name Function Args Optional Args Return Type 1210 MC_POST_MODS_LOADED void - void"},{"location":"enums/ModCallbacks.html#mc_pre_music_layer_toggle","title":"MC_PRE_MUSIC_LAYER_TOGGLE","text":"<p>Accepts a music layer ID (enum pending) to change the layer, or a boolean to change the state of the layer: <code>true</code> to keep it running, <code>false</code> to stop it.</p> <p><code>CurrentState</code> returns <code>true</code> if the layer is going to be enabled, and <code>false</code> if it is going to be disabled.</p> ID Name Function Args Optional Args Return Type 1035 MC_PRE_MUSIC_LAYER_TOGGLE (int ID, boolean CurrentState) int int or boolean"},{"location":"enums/ModCallbacks.html#mc_pre_music_play_jingle","title":"MC_PRE_MUSIC_PLAY_JINGLE","text":"<p>Accepts a Music to change the track</p> <p>Alternatively accepts <code>false</code> to cancel the track</p> ID Name Function Args Optional Args Return Type 1094 MC_PRE_MUSIC_PLAY_JINGLE (Music MusicID) Music Music or boolean"},{"location":"enums/ModCallbacks.html#mc_pre_music_play","title":"MC_PRE_MUSIC_PLAY","text":"<p>Accepts a table of parameters: <code>{ID, Volume OR FadeRate}</code></p> <p>Alternatively accepts a Music to change the track without changing volume or fade rate</p> <p>Alternatively accepts <code>false</code> to cancel the track</p> Volume vs. FadeRate <p>This callback is called for both MusicManager::Play and MusicManager::Crossfade! <code>IsFade</code> is provided to distinguish the two.</p> Example Code <p>This code will replace all music track with the flooded caves theme (for better or for worse). <pre><code>function mod:myFunction(ID, Volume, IsFade)\n    return Music.MUSIC_FLOODED_CAVES\nend\nmod:AddCallback(ModCallbacks.MC_PRE_MUSIC_PLAY, mod.myFunction)\n</code></pre></p> ID Name Function Args Optional Args Return Type 1034 MC_PRE_MUSIC_PLAY (int ID, float Volume OR float FadeRate, boolean IsFade) Music table or Music or boolean"},{"location":"enums/ModCallbacks.html#mc_pre_m_morph_active","title":"MC_PRE_M_MORPH_ACTIVE","text":"<p>This callback triggers when an active gets rerolled by 'M (trinket id 138) and allows for overriding its behavior.</p> <ul> <li>Accepts a CollectibleType to override the rerolled item id or <code>false</code> to prevent the active from rerolling entirely.</li> </ul> ID Name Function Args Optional Args Return Type 1190 MC_PRE_M_MORPH_ACTIVE (EntityPlayer Player, CollectibleType Collectible) - CollectibleType"},{"location":"enums/ModCallbacks.html#mc_pre_new_room","title":"MC_PRE_NEW_ROOM","text":"<p>Accepts no return parameters.</p> Warning <p>While this provides a Room object, and the room object is perfectly fine, the callback fires BEFORE THE ROOM IS FULLY INITIALIZED, so operations surrounding the Room object stuff should be considered unstable and unreliable, used at your own discretion, some seemindly friendly functions like GetCenterPos are already known to cause problems when used within this callback, so, again, try to move Room object stuff to other callbacks that happen after this one.</p> ID Name Function Args Optional Args Return Type 1200 MC_PRE_NEW_ROOM (Room Room, RoomDescriptor Descriptor) - void"},{"location":"enums/ModCallbacks.html#mc_post_nightmare_scene_render","title":"MC_POST_NIGHTMARE_SCENE_RENDER","text":"<p>Accepts no return parameters.</p> ID Name Function Args Optional Args Return Type 1102 MC_POST_NIGHTMARE_SCENE_RENDER void - void"},{"location":"enums/ModCallbacks.html#mc_post_nightmare_scene_show","title":"MC_POST_NIGHTMARE_SCENE_SHOW","text":"<p>Accepts no return parameters.</p> ID Name Function Args Optional Args Return Type 1103 MC_POST_NIGHTMARE_SCENE_SHOW (boolean Unknown) - void"},{"location":"enums/ModCallbacks.html#mc_post_npc_collision","title":"MC_POST_NPC_COLLISION","text":"<p>Runs after the on-collision code of this entity, assuming it wasn't skipped.</p> ID Name Function Args Optional Args Return Type 1247 MC_POST_NPC_COLLISION (EntityNPC NPC, Entity Collider, boolean Low) EntityType void"},{"location":"enums/ModCallbacks.html#mc_pre_npc_morph","title":"MC_PRE_NPC_MORPH","text":"<p>Accepts a table of parameters: <code>{EntityType, Variant, SubType, Championid}</code> or just <code>{EntityType, Variant, SubType}</code>. </p> <p>Returning <code>false</code> cancels the morph.</p> ID Name Function Args Optional Args Return Type 1212 MC_PRE_NPC_MORPH (EntityNPC NPC, int EntityType, int Variant, int SubType, int Championid) - table or boolean"},{"location":"enums/ModCallbacks.html#mc_post_npc_morph","title":"MC_POST_NPC_MORPH","text":"<p>Runs after the Morph already happened.</p> ID Name Function Args Optional Args Return Type 1214 MC_POST_NPC_MORPH (EntityNPC NPC, int PreviousType, int PreviousVariant, int PreviousSubType) - void"},{"location":"enums/ModCallbacks.html#mc_npc_pick_target","title":"MC_NPC_PICK_TARGET","text":"<p>Called whenever an EntityNPC selects its target, such as when EntityNPC:GetPlayerTarget() is called.</p> <p>Return an entity to make the NPC target that entity instead.</p> ID Name Function Args Optional Args Return Type 1222 MC_NPC_PICK_TARGET (EntityNPC NPC, Entity CurrentTarget) EntityType Entity"},{"location":"enums/ModCallbacks.html#mc_post_npc_dark_red_champion_regen","title":"MC_POST_NPC_DARK_RED_CHAMPION_REGEN","text":"<p>Runs right after a dark red champion regenerates out of the goo form.</p> ID Name Function Args Optional Args Return Type 1223 MC_POST_NPC_DARK_RED_CHAMPION_REGEN (EntityNPC NPC) EntityType void"},{"location":"enums/ModCallbacks.html#mc_evaluate_custom_cache","title":"MC_EVALUATE_CUSTOM_CACHE","text":"<p>Called when a custom cache is evaluated (see items.xml). Return a number to modify the value. Modified values are passed onto the next callback.</p> <p>The initial value is always 0. The most recent result can be obtained at any time using <code>player:GetCustomCacheValue(\"mycustomcache\")</code></p> ID Name Function Args Optional Args Return Type 1224 MC_EVALUATE_CUSTOM_CACHE (EntityPlayer Player, CustomCacheTag string, float Value) string CustomCacheTag void"},{"location":"enums/ModCallbacks.html#mc_evaluate_familiar_multiplier","title":"MC_EVALUATE_FAMILIAR_MULTIPLIER","text":"<p>Called when a familiar's cached multiplier needs to be re-evaluated. Return a number to modify the multiplier. Modified values are passed to the next callback.</p> <p>Effects such as BFFs or Hive Mind have already been applied at this point.</p> <p>Note that the result of this callback is cached, so the callback only runs when needed. It will be triggered if an item with the <code>familiarmultiplier</code> \"customcache\" is added/removed (see items.xml) or if <code>familiar:InvalidateCachedMultiplier()</code> is called.</p> ID Name Function Args Optional Args Return Type 1225 MC_EVALUATE_FAMILIAR_MULTIPLIER (EntityFamiliar Familiar, float Mult, EntityPlayer Player) FamiliarVariant void"},{"location":"enums/ModCallbacks.html#mc_pre_npc_render","title":"MC_PRE_NPC_RENDER","text":"<p>Accepts a Vector to modify render offset</p> <p>Alternatively accepts <code>false</code> to cancel rendering</p> Shadows <p>Canceling this callback will not stop rendering of entity shadows. This is being investigated, but in the meantime call SetShadowSize(0) on the entity in MC_POST_UPDATE.</p> ID Name Function Args Optional Args Return Type 1081 MC_PRE_NPC_RENDER (EntityNPC NPC, Vector Offset) EntityType Vector or boolean"},{"location":"enums/ModCallbacks.html#mc_pre_npc_split","title":"MC_PRE_NPC_SPLIT","text":"<p>Called when the game is about to decide whether or not an EntityNPC can be split, ie the Meat Cleaver effect.</p> <p>Return <code>true</code> to prevent the split, <code>false</code> to allow it even if blacklisted, or <code>nil</code> to continue default behavior.</p> ID Name Function Args Optional Args Return Type 1191 MC_PRE_NPC_SPLIT (EntityNPC NPC, boolean IsBlacklisted) EntityType boolean"},{"location":"enums/ModCallbacks.html#mc_pre_opengl_render","title":"MC_PRE_OPENGL_RENDER","text":"<p>Gets called right before the Manager::Render() function gets called.</p> ID Name Function Args Optional Args Return Type 1136 MC_PRE_OPENGL_RENDER (VertexBuffer, int shaderId, RenderContext) - ?"},{"location":"enums/ModCallbacks.html#mc_pre_pause_screen_render","title":"MC_PRE_PAUSE_SCREEN_RENDER","text":"<p>Can return <code>false</code> to prevent the pause screen from rendering. Doing so will also prevent the screen from darkening.</p> ID Name Function Args Optional Args Return Type 1218 MC_PRE_PAUSE_SCREEN_RENDER (Sprite PauseBody, Sprite PauseStats) - boolean"},{"location":"enums/ModCallbacks.html#mc_post_pause_screen_render","title":"MC_POST_PAUSE_SCREEN_RENDER","text":"<p>Accepts no return parameters.</p> ID Name Function Args Optional Args Return Type 1219 MC_POST_PAUSE_SCREEN_RENDER (Sprite PauseBody, Sprite PauseStats) - void"},{"location":"enums/ModCallbacks.html#mc_post_pickup_collision","title":"MC_POST_PICKUP_COLLISION","text":"<p>Runs after the on-collision code of this entity, assuming it wasn't skipped.</p> ID Name Function Args Optional Args Return Type 1239 MC_POST_PICKUP_COLLISION (EntityPickup Pickup, Entity Collider, boolean Low) PickupVariant void"},{"location":"enums/ModCallbacks.html#mc_pre_pickup_composted","title":"MC_PRE_PICKUP_COMPOSTED","text":"<p>This callback is called when a pickup is consumed with the compost active.  Accepts <code>false</code> to cancel the pickup getting consumed.</p> ID Name Function Args Optional Args Return Type 1267 MC_PRE_PICKUP_VOIDED (EntityPickup Pickup) PickupVariant boolean"},{"location":"enums/ModCallbacks.html#mc_pickup_get_coin_value","title":"MC_PICKUP_GET_COIN_VALUE","text":"<p>Accepts <code>int</code> CoinValue to modify the amount of coins a coin can give you on pickup.</p> ID Name Function Args Optional Args Return Type 1250 MC_PICKUP_GET_COIN_VALUE (EntityPickup Pickup) CoinSubType int CoinValue"},{"location":"enums/ModCallbacks.html#mc_pre_pickup_morph","title":"MC_PRE_PICKUP_MORPH","text":"<p>Accepts a table of parameters: <code>{EntityType, Variant, SubType, KeepPrice, KeepSeed, IgnoreModifiers}</code> or just <code>{EntityType, Variant, SubType}</code>. </p> <p>Returning <code>false</code> cancels the morph.</p> ID Name Function Args Optional Args Return Type 1213 MC_PRE_PICKUP_MORPH (EntityPickup Pickup, int EntityType, int Variant, int SubType, boolean KeepPrice, boolean KeepSeed, boolean IgnoreModifiers) - table or boolean"},{"location":"enums/ModCallbacks.html#mc_post_pickup_morph","title":"MC_POST_PICKUP_MORPH","text":"<p>Runs after the morph already happened.</p> ID Name Function Args Optional Args Return Type 1215 MC_POST_PICKUP_MORPH (EntityPickup Pickup, int PreviousType, int PreviousVariant, int SubType, boolean KeptPrice, boolean KeptSeed, boolean IgnoredModifiers) - void"},{"location":"enums/ModCallbacks.html#mc_pre_pickup_render","title":"MC_PRE_PICKUP_RENDER","text":"<p>Accepts a Vector to modify render offset</p> <p>Alternatively accepts <code>false</code> to cancel rendering</p> Shadows <p>Canceling this callback will not stop rendering of entity shadows. This is being investigated, but in the meantime call SetShadowSize(0) on the entity in MC_POST_UPDATE.</p> ID Name Function Args Optional Args Return Type 1083 MC_PRE_PICKUP_RENDER (EntityPickup Pickup, Vector Offset) PickupVariant Vector or boolean"},{"location":"enums/ModCallbacks.html#mc_post_pickup_shop_purchase","title":"MC_POST_PICKUP_SHOP_PURCHASE","text":"<p>Accepts no return parameters.</p> ID Name Function Args Optional Args Return Type 1062 MC_POST_PICKUP_SHOP_PURCHASE (EntityPickup Pickup, EntityPlayer Player, int MoneySpent) PickupVariant void"},{"location":"enums/ModCallbacks.html#mc_pre_pickup_voided_abyss","title":"MC_PRE_PICKUP_VOIDED_ABYSS","text":"<p>This callback is called when a pickup is consumed with the abyss active.  Accepts <code>false</code> to cancel the pickup getting consumed.</p> ID Name Function Args Optional Args Return Type 1266 MC_PRE_PICKUP_VOIDED_ABYSS (EntityPickup Pickup) PickupVariant boolean"},{"location":"enums/ModCallbacks.html#mc_pre_pickup_voided","title":"MC_PRE_PICKUP_VOIDED","text":"<p>This callback is called when a pickup is consumed with the void active or black rune. The <code>IsBlackRune</code> parameter indicates the source. If black rune is used, the callback gets fired both for pedestal items and for small pickups that turn into flies. Accepts <code>false</code> to cancel the pickup getting consumed.</p> ID Name Function Args Optional Args Return Type 1265 MC_PRE_PICKUP_VOIDED (EntityPickup Pickup, boolean IsBlackRune) PickupVariant boolean"},{"location":"enums/ModCallbacks.html#mc_pre_planetarium_apply_items","title":"MC_PRE_PLANETARIUM_APPLY_ITEMS","text":"<p>After checking the amount of treasure rooms entered, the game applies flat item chances. This is where Crystal Ball, Magic 8 Ball and Sausage's chances get added, as well as Telescope Lens's additional 15% chance.</p> <p>If you're looking to add an item like Telescope Lens which modifies the base chance, have a look at MC_PRE_PLANETARIUM_APPLY_TELESCOPE_LENS instead.</p> <p>Accepts a <code>float</code> to modify the chance in this step of the calculation.</p> ID Name Function Args Optional Args Return Type 1113 MC_PRE_PLANETARIUM_APPLY_ITEMS (float Chance) - float"},{"location":"enums/ModCallbacks.html#mc_pre_planetarium_apply_planetarium_penalty","title":"MC_PRE_PLANETARIUM_APPLY_PLANETARIUM_PENALTY","text":"<p>After ensuring the stage is valid, the game then checks if a planetarium has been entered before. If so, the chance will be locked at 1% (10% with Telescope Lens).</p> <p>If you're looking to add an item like Telescope Lens which modifies the base chance, have a look at MC_PRE_PLANETARIUM_APPLY_TELESCOPE_LENS instead.</p> <p>Accepts a <code>boolean</code>. Return <code>false</code> to bypass the planetarium enter penalty.</p> ID Name Function Args Optional Args Return Type 1111 MC_PRE_PLANETARIUM_APPLY_PLANETARIUM_PENALTY void - boolean"},{"location":"enums/ModCallbacks.html#mc_pre_planetarium_apply_stage_penalty","title":"MC_PRE_PLANETARIUM_APPLY_STAGE_PENALTY","text":"<p>This callback is run at the start of planetarium calculation. Before running calculation, the game first checks if the current floor is valid to spawn a planetarium. If the current floor is invalid, all further calculation (and thus, all further callbacks) will be canceled.</p> <p>By default, planetariums cannot spawn past Depths II (Womb II with Telescope Lens).</p> <p>This callback can be used, for example, to add custom planetarium spawn rules on custom floors, or to add new items like Telescope Lens which can augment the rules.</p> <p>Accepts a <code>boolean</code>. Return <code>false</code> to bypass the planetarium stage penalty.</p> ID Name Function Args Optional Args Return Type 1110 MC_PRE_PLANETARIUM_APPLY_STAGE_PENALTY void - boolean"},{"location":"enums/ModCallbacks.html#mc_pre_planetarium_apply_telescope_lens","title":"MC_PRE_PLANETARIUM_APPLY_TELESCOPE_LENS","text":"<p>Finally, after checking all of the above, Telescope Lens adds an additional 9% chance to the base chance, bringing the base generation chance to 10%.</p> <p>Accepts a <code>float</code> to modify the chance in this step of the calculation.</p> ID Name Function Args Optional Args Return Type 1114 MC_PRE_PLANETARIUM_APPLY_TELESCOPE_LENS (float Chance) - float"},{"location":"enums/ModCallbacks.html#mc_pre_planetarium_apply_treasure_penalty","title":"MC_PRE_PLANETARIUM_APPLY_TREASURE_PENALTY","text":"<p>After ensuring planetariums haven't been entered before, the game then checks how many treasure rooms have been entered. If the amount of treasure rooms entered is greater than or equal to the current stage number, the chance will be locked at 1% (10% with Telescope Lens).</p> <p>If you're looking to add an item like Telescope Lens which modifies the base chance, have a look at MC_PRE_PLANETARIUM_APPLY_TELESCOPE_LENS instead.</p> <p>Accepts a <code>boolean</code>. Return <code>false</code> to bypass the planetarium treasure room penalty entirely, meaning the game will act as if no treasure rooms have been entered.</p> <p>Alternatively accepts an <code>int</code> to modify how many treasure rooms the game will believe has been entered.</p> ID Name Function Args Optional Args Return Type 1112 MC_PRE_PLANETARIUM_APPLY_TREASURE_PENALTY (int TreasureRoomsVisited) - boolean or int"},{"location":"enums/ModCallbacks.html#mc_post_planetarium_calculate","title":"MC_POST_PLANETARIUM_CALCULATE","text":"<p>This will override all previous calculation values, ultimately dictating the planetarium chance.</p> <p>Accepts a <code>float</code> to modify the chance.</p> ID Name Function Args Optional Args Return Type 1115 MC_POST_PLANETARIUM_CALCULATE (float Chance) - float"},{"location":"enums/ModCallbacks.html#mc_pre_playerhud_render_active_item","title":"MC_PRE_PLAYERHUD_RENDER_ACTIVE_ITEM","text":"<p>Accepts <code>true</code> to cancel rendering.</p> ID Name Function Args Optional Args Return Type 1119 MC_PRE_PLAYERHUD_RENDER_ACTIVE_ITEM (EntityPlayer Player, ActiveSlot Slot, Vector Offset, float Alpha, float Scale, Vector ChargeBarOffset) - boolean"},{"location":"enums/ModCallbacks.html#mc_post_playerhud_render_active_item","title":"MC_POST_PLAYERHUD_RENDER_ACTIVE_ITEM","text":"ID Name Function Args Optional Args Return Type 1079 MC_POST_PLAYERHUD_RENDER_ACTIVE_ITEM (EntityPlayer Player, ActiveSlot Slot, Vector Offset, float Alpha, float Scale, Vector ChargeBarOffset) - void"},{"location":"enums/ModCallbacks.html#mc_pre_playerhud_render_hearts","title":"MC_PRE_PLAYERHUD_RENDER_HEARTS","text":"<p>Return <code>true</code> to cancel hearts HUD rendering.</p> ID Name Function Args Optional Args Return Type 1118 MC_PRE_PLAYERHUD_RENDER_HEARTS (Vector Offset, Sprite HeartsSprite, Vector Position, float SpriteScale, EntityPlayer Player) - boolean"},{"location":"enums/ModCallbacks.html#mc_post_playerhud_render_hearts","title":"MC_POST_PLAYERHUD_RENDER_HEARTS","text":"ID Name Function Args Optional Args Return Type 1091 MC_POST_PLAYERHUD_RENDER_HEARTS (Vector Offset, Sprite HeartsSprite, Vector Position, float SpriteScale, EntityPlayer Player) - void"},{"location":"enums/ModCallbacks.html#mc_pre_playerhud_trinket_render","title":"MC_PRE_PLAYERHUD_TRINKET_RENDER","text":"<p>Accepts returning a table, with any combination of the following fields:</p> <ul> <li>Position - Alters trinket position.</li> <li>Scale - Alters trinket scale.</li> <li>CropOffset - Alters the crop on the sprite on its spritesheet. Allows alternate sprites for the same trinket rendered this way, such as Monkey Paw.</li> </ul> <p>Alternative accepts <code>true</code>, which cancels trinket rendering.</p> ID Name Function Args Optional Args Return Type 1264 MC_PRE_PLAYERHUD_TRINKET_RENDER (int Slot, Vector Position, float Scale, EntityPlayer Player, Vector CropOffset) int Slot table or boolean"},{"location":"enums/ModCallbacks.html#mc_pre_player_apply_innate_collectible_num","title":"MC_PRE_PLAYER_APPLY_INNATE_COLLECTIBLE_NUM","text":"ID Name Function Args Optional Args Return Type 1092 MC_PRE_PLAYER_APPLY_INNATE_COLLECTIBLE_NUM (int ModCount, EntityPlayer Player, CollectibleType Type, boolean OnlyCountTrueItems) - int"},{"location":"enums/ModCallbacks.html#mc_post_player_collision","title":"MC_POST_PLAYER_COLLISION","text":"<p>Runs after the on-collision code of this entity, assuming it wasn't skipped.</p> ID Name Function Args Optional Args Return Type 1231 MC_POST_PLAYER_COLLISION (EntityPlayer Player, Entity Collider, boolean Low) PlayerVariant void"},{"location":"enums/ModCallbacks.html#mc_player_get_active_max_charge","title":"MC_PLAYER_GET_ACTIVE_MAX_CHARGE","text":"<p>Accepts an integer to change chargebar for the active item.</p> ID Name Function Args Optional Args Return Type 1072 MC_PLAYER_GET_ACTIVE_MAX_CHARGE (CollectibleType Collectible, EntityPlayer Player, int VarData, int CurrentMaxCharge) CollectibleType int"},{"location":"enums/ModCallbacks.html#mc_player_get_active_min_usable_charge","title":"MC_PLAYER_GET_ACTIVE_MIN_USABLE_CHARGE","text":"<p>Accepts an integer to change the minimum charge to use the active item. If the item currently has the minimum amount of charge, it'll also show the white outline.</p> ID Name Function Args Optional Args Return Type 1073 MC_PLAYER_GET_ACTIVE_MIN_USABLE_CHARGE (ActiveSlot Slot, EntityPlayer Player, int CurrentMinUsableCharge) CollectibleType int"},{"location":"enums/ModCallbacks.html#mc_player_get_health_type","title":"MC_PLAYER_GET_HEALTH_TYPE","text":"<p>Accepts an HealthType to change health type for the character.</p> ID Name Function Args Optional Args Return Type 1067 MC_PLAYER_GET_HEALTH_TYPE (EntityPlayer Player) PlayerType HealthType"},{"location":"enums/ModCallbacks.html#mc_player_get_heart_limit","title":"MC_PLAYER_GET_HEART_LIMIT","text":"<p>Accepts an override <code>integer</code> for heart limit.</p> - <p>You can set the limit to any arbitrary amount but the game can only render up to 4 lines of hearts in the HUD. However, even if they're not visible, the hearts still work properly.</p> ID Name Function Args Optional Args Return Type 1074 MC_PLAYER_GET_HEART_LIMIT (EntityPlayer Player, int HeartLimit, boolean IsKeeper) PlayerType int"},{"location":"enums/ModCallbacks.html#mc_post_player_get_multi_shot_params","title":"MC_POST_PLAYER_GET_MULTI_SHOT_PARAMS","text":"<p>Return a MultiShotParams object to change the properties of the players shooting behavior in regards to the MultiShotParams object properties.</p> ID Name Function Args Optional Args Return Type 1251 MC_POST_PLAYER_GET_MULTI_SHOT_PARAMS (EntityPlayer Player) PlayerType MultiShotParams"},{"location":"enums/ModCallbacks.html#mc_player_init_post_level_init_stats","title":"MC_PLAYER_INIT_POST_LEVEL_INIT_STATS","text":"<p>Accepts no return parameters.</p> ID Name Function Args Optional Args Return Type 1042 MC_PLAYER_INIT_POST_LEVEL_INIT_STATS (EntityPlayer Player) PlayerType void"},{"location":"enums/ModCallbacks.html#mc_player_init_pre_level_init_stats","title":"MC_PLAYER_INIT_PRE_LEVEL_INIT_STATS","text":"<p>Accepts no return parameters.</p> ID Name Function Args Optional Args Return Type 1127 MC_PLAYER_INIT_PRE_LEVEL_INIT_STATS (EntityPlayer Player) PlayerType void"},{"location":"enums/ModCallbacks.html#mc_post_force_add_pill_effect","title":"MC_POST_FORCE_ADD_PILL_EFFECT","text":"<p>Accepts no return parameters.</p> ID Name Function Args Optional Args Return Type 1129 MC_POST_FORCE_ADD_PILL_EFFECT PillEffect, PillColor - void"},{"location":"enums/ModCallbacks.html#mc_post_player_new_level","title":"MC_POST_PLAYER_NEW_LEVEL","text":"ID Name Function Args Optional Args Return Type 1078 MC_POST_PLAYER_NEW_LEVEL (EntityPlayer Player) PlayerType void"},{"location":"enums/ModCallbacks.html#mc_post_player_new_room_temp_effects","title":"MC_POST_PLAYER_NEW_ROOM_TEMP_EFFECTS","text":"ID Name Function Args Optional Args Return Type 1077 MC_POST_PLAYER_NEW_ROOM_TEMP_EFFECTS (EntityPlayer Player) PlayerType void"},{"location":"enums/ModCallbacks.html#mc_pre_player_render","title":"MC_PRE_PLAYER_RENDER","text":"<p>Accepts a Vector to modify render offset</p> <p>Alternatively accepts <code>false</code> to cancel rendering</p> Shadows <p>Canceling this callback will not stop rendering of entity shadows. This is being investigated, but in the meantime call SetShadowSize(0) on the entity in MC_POST_UPDATE.</p> ID Name Function Args Optional Args Return Type 1082 MC_PRE_PLAYER_RENDER (EntityPlayer Player, Vector Offset) PlayerVariant Vector or boolean"},{"location":"enums/ModCallbacks.html#mc_pre_player_take_dmg","title":"MC_PRE_PLAYER_TAKE_DMG","text":"<p>Runs earlier than MC_ENTITY_TAKE_DMG, and even if the player is considered invincible or has Holy Mantles.</p> <p>Only accepts returning false to cancel the damage. Good for giving the player invincibility that takes precedence over other damage negation effects, such as Holy Mantle.</p> ID Name Function Args Optional Args Return Type 1008 MC_PRE_PLAYER_TAKE_DMG (EntityPlayer Player, float Damage, DamageFlags DamageFlags, EntityRef Source, int DamageCountdown) PlayerVariant boolean"},{"location":"enums/ModCallbacks.html#mc_pre_player_add_hearts","title":"MC_PRE_PLAYER_ADD_HEARTS","text":"<p>Runs before Add(...)Hearts functions, allows returning a value to change the given amount of health. Functions that include an argument (e.g. ignoreKeeper for AddMaxHearts) provide the value using OptionalArg.</p> ID Name Function Args Optional Args Return Type 1009 MC_PRE_PLAYER_ADD_HEARTS (EntityPlayer Player, int Amount, AddHealthType AddHealthType, boolean OptionalArg) AddHealthType int"},{"location":"enums/ModCallbacks.html#mc_post_player_add_hearts","title":"MC_POST_PLAYER_ADD_HEARTS","text":"<p>Runs after Add(...)Hearts functions and MC_PRE_PLAYER_ADD_HEARTS callback. Functions that include an argument (e.g. ignoreKeeper for AddMaxHearts) provide the value using OptionalArg.</p> ID Name Function Args Optional Args Return Type 1010 MC_POST_PLAYER_ADD_HEARTS (EntityPlayer Player, int Amount, AddHealthType AddHealthType, boolean OptionalArg) AddHealthType void"},{"location":"enums/ModCallbacks.html#mc_pre_player_trigger_room_clear","title":"MC_PRE_PLAYER_TRIGGER_ROOM_CLEAR","text":"<p>Accepts <code>false</code> to cancel trigger effects.</p> ID Name Function Args Optional Args Return Type 1069 MC_PRE_PLAYER_TRIGGER_ROOM_CLEAR (EntityPlayer Player) PlayerVariant boolean"},{"location":"enums/ModCallbacks.html#mc_pre_player_use_bomb","title":"MC_PRE_PLAYER_USE_BOMB","text":"<p>Return <code>false</code> to stop the player from using a bomb.</p> ID Name Function Args Optional Args Return Type 1020 MC_PRE_PLAYER_USE_BOMB (EntityPlayer Player) PlayerVariant boolean"},{"location":"enums/ModCallbacks.html#mc_post_player_use_bomb","title":"MC_POST_PLAYER_USE_BOMB","text":"ID Name Function Args Optional Args Return Type 1021 MC_POST_PLAYER_USE_BOMB (EntityPlayer Player, EntityBomb Bomb) PlayerVariant void"},{"location":"enums/ModCallbacks.html#mc_post_projectile_collision","title":"MC_POST_PROJECTILE_COLLISION","text":"<p>Runs after the on-collision code of this entity, assuming it wasn't skipped.</p> ID Name Function Args Optional Args Return Type 1245 MC_POST_PROJECTILE_COLLISION (EntityProjectile Projectile, Entity Collider, boolean Low) ProjectileVariant void"},{"location":"enums/ModCallbacks.html#mc_pre_projectile_render","title":"MC_PRE_PROJECTILE_RENDER","text":"<p>Accepts a Vector to modify render offset</p> <p>Alternatively accepts <code>false</code> to cancel rendering</p> Shadows <p>Canceling this callback will not stop rendering of entity shadows. This is being investigated, but in the meantime call SetShadowSize(0) on the entity in MC_POST_UPDATE.</p> ID Name Function Args Optional Args Return Type 1085 MC_PRE_PROJECTILE_RENDER (EntityProjectile Projectile, Vector Offset) ProjectileVariant Vector or boolean"},{"location":"enums/ModCallbacks.html#mc_pre_render_custom_character_menu","title":"MC_PRE_RENDER_CUSTOM_CHARACTER_MENU","text":"<p>Accepts no return parameters.</p> Execution informations <p>This callback only triggers when a custom character is selected, it doesn't trigger on regular characters.</p> ID Name Function Args Optional Args Return Type 1333 MC_PRE_RENDER_CUSTOM_CHARACTER_MENU (PlayerType PlayerType, Vector RenderPos, Sprite DefaultSprite) PlayerType void"},{"location":"enums/ModCallbacks.html#mc_pre_render_entity_lighting","title":"MC_PRE_RENDER_ENTITY_LIGHTING","text":"<p>Accepts an override Vector for Offset.</p> <p>Alternatively accepts <code>false</code> to stop the rendering.</p> ID Name Function Args Optional Args Return Type 1152 MC_PRE_RENDER_ENTITY_LIGHTING (Entity Entity, Vector Offset) EntityType Vector or boolean"},{"location":"enums/ModCallbacks.html#mc_pre_render_grid_lighting","title":"MC_PRE_RENDER_GRID_LIGHTING","text":"<p>Accepts an override Vector for Offset.</p> <p>Alternatively accepts <code>false</code> to stop the rendering.</p> ID Name Function Args Optional Args Return Type 1151 MC_PRE_RENDER_GRID_LIGHTING (GridEntity GridEntity, Vector Offset) GridEntityType Vector or boolean"},{"location":"enums/ModCallbacks.html#mc_pre_render_player_body","title":"MC_PRE_RENDER_PLAYER_BODY","text":"<p>Accepts an override <code>vector</code> for RenderPos.</p> <p>Alternatively accepts a <code>false</code> to stop the rendering.</p> ID Name Function Args Optional Args Return Type 1039 MC_PRE_RENDER_PLAYER_BODY (EntityPlayer player, Vector RenderPos) PlayerType Vector or boolean"},{"location":"enums/ModCallbacks.html#mc_pre_render_player_head","title":"MC_PRE_RENDER_PLAYER_HEAD","text":"<p>Accepts an override Vector for RenderPos.</p> <p>Alternatively accepts a <code>false</code> to stop the rendering.</p> ID Name Function Args Optional Args Return Type 1038 MC_PRE_RENDER_PLAYER_HEAD (EntityPlayer player, Vector RenderPos) PlayerType Vector or boolean"},{"location":"enums/ModCallbacks.html#mc_pre_render","title":"MC_PRE_RENDER","text":"<p>Gets called right before the Manager::Render() function gets called.</p> ID Name Function Args Optional Args Return Type 1135 MC_PRE_RENDER void - void"},{"location":"enums/ModCallbacks.html#mc_pre_replace_spritesheet","title":"MC_PRE_REPLACE_SPRITESHEET","text":"<p>Accepts a table of parameters: <code>{int LayerID, string PNGFilename}</code></p> ID Name Function Args Optional Args Return Type 1116 MC_PRE_REPLACE_SPRITESHEET (int LayerID, string PNGFilename) string ANM2Filename table"},{"location":"enums/ModCallbacks.html#mc_post_replace_spritesheet","title":"MC_POST_REPLACE_SPRITESHEET","text":"<p>Accepts no return parameters.</p> ID Name Function Args Optional Args Return Type 1117 MC_POST_REPLACE_SPRITESHEET (int LayerID, string PNGFilename) string ANM2Filename void"},{"location":"enums/ModCallbacks.html#mc_pre_restock_shop","title":"MC_PRE_RESTOCK_SHOP","text":"<p>Accepts <code>false</code> to cancel the restock, blocking shop rerolls from restock machines or restocks from Restock altogether.</p> Partial <p>This callback is called for both Room::ShopRestockFull and Room::ShopRestockPartial! <code>Partial</code> is provided to distinguish the two.</p> ID Name Function Args Optional Args Return Type 1070 MC_PRE_RESTOCK_SHOP (boolean Partial) - void"},{"location":"enums/ModCallbacks.html#mc_post_restock_shop","title":"MC_POST_RESTOCK_SHOP","text":"<p>Accepts no return parameters.</p> Partial <p>This callback is called for both Room::ShopRestockFull and Room::ShopRestockPartial! <code>Partial</code> is provided to distinguish the two.</p> ID Name Function Args Optional Args Return Type 1071 MC_POST_RESTOCK_SHOP (boolean Partial) - void"},{"location":"enums/ModCallbacks.html#mc_pre_room_exit","title":"MC_PRE_ROOM_EXIT","text":"<p>Accepts no return parameters.</p> NewLevel <p>NewLevel returns <code>true</code> when entering a new level or when exiting a run.</p> ID Name Function Args Optional Args Return Type 1043 MC_PRE_ROOM_EXIT (EntityPlayer Player, boolean NewLevel) - void"},{"location":"enums/ModCallbacks.html#mc_pre_room_grid_entity_spawn","title":"MC_PRE_ROOM_GRID_ENTITY_SPAWN","text":"<p>This is called during Room initiization when GridEntities from the layout are being spawned.</p> <p>Accepts <code>false</code> to cancel spawning the grid or a table of <code>{Type, Variant, Vardata, SpawnSeed}</code> to modify it.</p> Warning <p>This does not fire for random decorations spawned by the game! Use <code>MC_PRE_GRID_ENTITY_SPAWN</code> for these.</p> ID Name Function Args Optional Args Return Type 1192 MC_PRE_ROOM_GRID_ENTITY_SPAWN (GridEntityType Type, int Variant, int VarData, int GridIdx, int SpawnSeed) GridEntityType Type boolean or table"},{"location":"enums/ModCallbacks.html#mc_pre_room_trigger_clear","title":"MC_PRE_ROOM_TRIGGER_CLEAR","text":"<p>Accepts no return parameters.</p> ID Name Function Args Optional Args Return Type 1068 MC_PRE_ROOM_TRIGGER_CLEAR (boolean PlaySound) - void"},{"location":"enums/ModCallbacks.html#mc_post_saveslot_load","title":"MC_POST_SAVESLOT_LOAD","text":"<p>This is called wheenver a saveslot is loaded by the game.</p> <p>This is the callback you should use to handle savedata loads, ideally, from normal Mod::LoadData to Repentogon Marks/Achievement checks, since it's the callback that triggers when those are loaded.</p> <p>The first parameter is the slot you should care about, the 2nd parameter (isslotselected) indicates if the slot that is being loaded has actually been selected from the save menu screen (you can limit your save handling to when this is true if you want to get fancy), and the 3rd parameter(rawslot) is the actual saveslot the game uses (not the one the api uses since it can be 0!).</p> Warning <p>This callback is called many times before a run is started, either from changing saveslots naturally or because the game doesnt give a damn, so code accounting for that, clearing previous data when necessary. The 3rd param is actually only useful to check for the 0 slot state, which is the one the game defaults to before the actual slot is loaded by the player. When on this state, the moddata and the gamedata WONT BE IN SYNC (moddata is slot 1, while vanilla game data is 3)</p> ID Name Function Args Optional Args Return Type 1470 MC_POST_SAVESLOT_LOAD (int saveslot, boolean isslotselected, int rawslot) void -"},{"location":"enums/ModCallbacks.html#mc_pre_sfx_play","title":"MC_PRE_SFX_PLAY","text":"<p>Accepts a table of parameters: <code>{ID, Volume, FrameDelay, Loop, Pitch, Pan}</code></p> <p>Alternatively accepts <code>false</code> to cancel the sound.</p> Example Code <p>This code will forcibly loop every sound (for better or worse). <pre><code>function mod:myFunction(ID, Volume, FrameDelay, Loop, Pitch, Pan)\n    return {ID, Volume, FrameDelay, true, Pitch, Pan}\nend\nmod:AddCallback(ModCallbacks.MC_PRE_SFX_PLAY, mod.myFunction)\n</code></pre></p> ID Name Function Args Optional Args Return Type 1030 MC_PRE_SFX_PLAY (int ID, float Volume, int FrameDelay, boolean Loop, float Pitch, float Pan) SoundEffect table or boolean"},{"location":"enums/ModCallbacks.html#mc_post_sfx_play","title":"MC_POST_SFX_PLAY","text":"<p>Accepts no return parameters.</p> ID Name Function Args Optional Args Return Type 1031 MC_POST_SFX_PLAY (int ID, float Volume, int FrameDelay, boolean Loop, float Pitch, float Pan) SoundEffect void"},{"location":"enums/ModCallbacks.html#mc_pre_slot_collision","title":"MC_PRE_SLOT_COLLISION","text":"<p>Just like the collision callbacks in the vanilla API, the Low value is true if the entity collided with the collider first, and false if the opposite is true.</p> <p>Return <code>true</code> to ignore collision, <code>false</code> to collide but not execute internal code.</p> <p>Also accepts returning a table, with any combination of the following fields:</p> <ul> <li>Collide: Set to true to force the entities to physically collide (push each other away), unless the \"Collider\" ignores the collision. Set to false to ignore the physical collision without necessarily skipping on-collision effects.</li> <li>SkipCollisionEffects: Set to true to skip the on-collision code of this entity. Does not affect the physical collision. Won't skip the on-collision code of the \"Collider\".</li> </ul> ID Name Function Args Optional Args Return Type 1240 MC_PRE_SLOT_COLLISION (EntitySlot, Entity Collider, boolean Low) SlotVariant boolean"},{"location":"enums/ModCallbacks.html#mc_post_slot_collision","title":"MC_POST_SLOT_COLLISION","text":"<p>Runs after the on-collision code of this entity, assuming it wasn't skipped.</p> ID Name Function Args Optional Args Return Type 1241 MC_POST_SLOT_COLLISION (EntitySlot, Entity Collider, boolean Low) SlotVariant void"},{"location":"enums/ModCallbacks.html#mc_pre_slot_create_explosion_drops","title":"MC_PRE_SLOT_CREATE_EXPLOSION_DROPS","text":"<p>Return <code>false</code> to stop explosions from dropping the standard consumables. This is useful, for example, to allow custom slots to drop their own loot on explosion.</p> ID Name Function Args Optional Args Return Type 1123 MC_PRE_SLOT_CREATE_EXPLOSION_DROPS (EntitySlot) SlotVariant boolean"},{"location":"enums/ModCallbacks.html#mc_post_slot_create_explosion_drops","title":"MC_POST_SLOT_CREATE_EXPLOSION_DROPS","text":"<p>Accepts no return parameters.</p> ID Name Function Args Optional Args Return Type 1124 MC_POST_SLOT_CREATE_EXPLOSION_DROPS (EntitySlot) SlotVariant void"},{"location":"enums/ModCallbacks.html#mc_post_slot_init","title":"MC_POST_SLOT_INIT","text":"<p>Accepts no return parameters.</p> ID Name Function Args Optional Args Return Type 1121 MC_POST_SLOT_INIT (EntitySlot) SlotVariant void"},{"location":"enums/ModCallbacks.html#mc_pre_slot_render","title":"MC_PRE_SLOT_RENDER","text":"<p>Accepts a Vector to modify render offset</p> <p>Alternatively accepts <code>false</code> to cancel rendering</p> Shadows <p>Canceling this callback will not stop rendering of entity shadows. This is being investigated, but in the meantime call SetShadowSize(0) on the entity in MC_POST_UPDATE.</p> ID Name Function Args Optional Args Return Type 1089 MC_PRE_SLOT_RENDER (EntitySlot Slot, Vector Offset) SlotVariant Vector or boolean"},{"location":"enums/ModCallbacks.html#mc_post_slot_render","title":"MC_POST_SLOT_RENDER","text":"<p>Accepts no return parameters.</p> ID Name Function Args Optional Args Return Type 1090 MC_POST_SLOT_RENDER (EntitySlot Slot, Vector Offset) SlotVariant void"},{"location":"enums/ModCallbacks.html#mc_pre_slot_set_prize_collectible","title":"MC_PRE_SLOT_SET_PRIZE_COLLECTIBLE","text":"<p>Used by Shell Game, Hell Game, and Crane Game.</p> <p>Accepts a CollectibleType to override what the game will pay out with.</p> ID Name Function Args Optional Args Return Type 1125 MC_PRE_SLOT_SET_PRIZE_COLLECTIBLE (EntitySlot, CollectibleType Type) SlotVariant CollectibleType"},{"location":"enums/ModCallbacks.html#mc_post_slot_set_prize_collectible","title":"MC_POST_SLOT_SET_PRIZE_COLLECTIBLE","text":"<p>Accepts no return parameters.</p> ID Name Function Args Optional Args Return Type 1126 MC_POST_SLOT_SET_PRIZE_COLLECTIBLE (EntitySlot, CollectibleType Type) SlotVariant void"},{"location":"enums/ModCallbacks.html#mc_pre_slot_update","title":"MC_PRE_SLOT_UPDATE","text":"<p>Called before this entity is updated.</p> <p>Return <code>true</code> if the internal AI should be ignored, <code>false</code> or <code>nil</code>/nothing otherwise.</p> ID Name Function Args Optional Args Return Type 1169 MC_PRE_SLOT_UPDATE (EntitySlot Slot) SlotVariant boolean"},{"location":"enums/ModCallbacks.html#mc_post_slot_update","title":"MC_POST_SLOT_UPDATE","text":"<p>Accepts no return parameters.</p> ID Name Function Args Optional Args Return Type 1122 MC_POST_SLOT_UPDATE (EntitySlot) SlotVariant void"},{"location":"enums/ModCallbacks.html#mc_post_tear_collision","title":"MC_POST_TEAR_COLLISION","text":"<p>Runs after the on-collision code of this entity, assuming it wasn't skipped.</p> ID Name Function Args Optional Args Return Type 1233 MC_POST_TEAR_COLLISION (EntityTear Tear, Entity Collider, boolean Low) TearVariant void"},{"location":"enums/ModCallbacks.html#mc_pre_tear_render","title":"MC_PRE_TEAR_RENDER","text":"<p>Accepts a Vector to modify render offset</p> <p>Alternatively accepts <code>false</code> to cancel rendering</p> Shadows <p>Canceling this callback will not stop rendering of entity shadows. This is being investigated, but in the meantime call SetShadowSize(0) on the entity in MC_POST_UPDATE.</p> ID Name Function Args Optional Args Return Type 1084 MC_PRE_TEAR_RENDER (EntityTear Tear, Vector Offset) TearVariant Vector or boolean"},{"location":"enums/ModCallbacks.html#mc_post_trigger_collectible_removed","title":"MC_POST_TRIGGER_COLLECTIBLE_REMOVED","text":"<p>Accepts no return parameters.</p> ID Name Function Args Optional Args Return Type 1095 MC_POST_TRIGGER_COLLECTIBLE_REMOVED (EntityPlayer Player, CollectibleType Type) CollectibleType void"},{"location":"enums/ModCallbacks.html#mc_pre_trigger_player_death","title":"MC_PRE_TRIGGER_PLAYER_DEATH","text":"<p>Fires right before the game over screen, but BEFORE the game checks for vanilla revive effects like 1UP.</p> <p>Return <code>false</code> or call <code>player:Revive()</code> to cancel the death, reviving the player in-place with half a heart. This will also prevent later callbacks from running.</p> Warning <p>Returning false or calling <code>player:Revive()</code> may remove the current run's ability to save. This occurs because the game immediately deletes the save file during the death animation if there's no pending revives, and this callback doesn't fire fast enough to register a revive on death as it occurs right before the game over screen.</p> <p>In order to prevent this, only attempt to revive the player if they have an item or effect with REPENTOGON's \"revive\" customtag, which allows the item/effect to count as an extra life on the HUD and prevents the game from deleting the run save upon player death. See the page on items.xml for more information and some example XML/code.</p> ID Name Function Args Optional Args Return Type 1050 MC_PRE_TRIGGER_PLAYER_DEATH (EntityPlayer Player) - boolean"},{"location":"enums/ModCallbacks.html#mc_trigger_player_death_post_check_revives","title":"MC_TRIGGER_PLAYER_DEATH_POST_CHECK_REVIVES","text":"<p>Fires right before the game over screen, but AFTER the game checks for vanilla revive effects like 1UP.</p> <p>Return <code>false</code> or call <code>player:Revive()</code> to cancel the death, reviving the player in-place with half a heart. This will also prevent later callbacks from running.</p> Warning <p>Returning false or calling <code>player:Revive()</code> may remove the current run's ability to save. This occurs because the game immediately deletes the save file during the death animation if there's no pending revives, and this callback doesn't fire fast enough to register a revive on death as it occurs right before the game over screen.</p> <p>In order to prevent this, only attempt to revive the player if they have an item or effect with REPENTOGON's \"revive\" customtag, which allows the item/effect to count as an extra life on the HUD and prevents the game from deleting the run save upon player death. See the page on items.xml for more information and some example XML/code.</p> ID Name Function Args Optional Args Return Type 1051 MC_TRIGGER_PLAYER_DEATH_POST_CHECK_REVIVES (EntityPlayer Player) - boolean"},{"location":"enums/ModCallbacks.html#mc_pre_player_revive","title":"MC_PRE_PLAYER_REVIVE","text":"<p>Called before the player revives.</p> <p>Return <code>false</code> to cancel it.\"</p> ID Name Function Args Optional Args Return Type 1481 MC_PRE_PLAYER_REVIVE (EntityPlayer Player) PlayerType boolean"},{"location":"enums/ModCallbacks.html#mc_post_player_revive","title":"MC_POST_PLAYER_REVIVE","text":"<p>Called after the player revives, assuming it wasn't cancelled.</p> ID Name Function Args Optional Args Return Type 1482 MC_POST_PLAYER_REVIVE (EntityPlayer Player) PlayerType void"},{"location":"enums/ModCallbacks.html#mc_post_trigger_trinket_added","title":"MC_POST_TRIGGER_TRINKET_ADDED","text":"<p>Accepts no return parameters.</p> ID Name Function Args Optional Args Return Type 1096 MC_POST_TRIGGER_TRINKET_ADDED (EntityPlayer Player, TrinketType Type, boolean FirstTimePickingUp) TrinketType void"},{"location":"enums/ModCallbacks.html#mc_post_trigger_trinket_removed","title":"MC_POST_TRIGGER_TRINKET_REMOVED","text":"<p>Accepts no return parameters.</p> ID Name Function Args Optional Args Return Type 1097 MC_POST_TRIGGER_TRINKET_REMOVED (EntityPlayer Player, TrinketType Type) TrinketType void"},{"location":"enums/ModCallbacks.html#mc_post_trigger_weapon_fired","title":"MC_POST_TRIGGER_WEAPON_FIRED","text":"<p>Accepts no return parameters.</p> ID Name Function Args Optional Args Return Type 1098 MC_POST_TRIGGER_WEAPON_FIRED (Vector FireDirection, int FireAmount, Entity Owner, Weapon Weapon) WeaponType void"},{"location":"enums/ModCallbacks.html#mc_pre_use_card","title":"MC_PRE_USE_CARD","text":"<p>Accepts <code>true</code> to cancel card use.</p> ID Name Function Args Optional Args Return Type 1064 MC_PRE_USE_CARD (Card ID, EntityPlayer Player, int UseFlag) - boolean"},{"location":"enums/ModCallbacks.html#mc_pre_use_pill","title":"MC_PRE_USE_PILL","text":"<p>Accepts <code>true</code> to cancel pill use.</p> ID Name Function Args Optional Args Return Type 1065 MC_PRE_USE_PILL (PillEffect ID, PillColor PillColor, EntityPlayer Player, int UseFlag) - boolean"},{"location":"enums/ModCallbacks.html#mc_post_weapon_fire","title":"MC_POST_WEAPON_FIRE","text":"<p>Accepts no return parameters.</p> ID Name Function Args Optional Args Return Type 1105 MC_POST_WEAPON_FIRE (Weapon Weapon, Vector FireDirection, boolean IsShooting, boolean IsInterpolated) WeaponType void"},{"location":"enums/ModCallbacks.html#mc_pre_pickup_get_loot_list","title":"MC_PRE_PICKUP_GET_LOOT_LIST","text":"<p>Called before the pickup determines its loot content. Accepts a LootList to change loot content.</p> ID Name Function Args Optional Args Return Type 1333 MC_PRE_PICKUP_GET_LOOT_LIST (EntityPickup Pickup, boolean ShouldAdvance) - LootList"},{"location":"enums/ModCallbacks.html#mc_pre_pickup_update_ghost_pickups","title":"MC_PRE_PICKUP_UPDATE_GHOST_PICKUPS","text":"<p>Called before a ghost pickup of the loot content is applied to the pickup. Return <code>true</code> to apply pickup ghost to your pickup entity, <code>false</code> to cancel it.</p> ID Name Function Args Optional Args Return Type 1334 MC_PRE_PICKUP_UPDATE_GHOST_PICKUPS (EntityPickup Pickup) PickupVariant boolean"},{"location":"enums/ModCallbacks.html#mc_post_player_trigger_effect_removed","title":"MC_POST_PLAYER_TRIGGER_EFFECT_REMOVED","text":"<p>Called after the player's <code>ItemConfigItem</code> TemporaryEffect is removed.</p> ID Name Function Args Optional Args Return Type 1268 MC_POST_PLAYER_TRIGGER_EFFECT_REMOVED (EntityPlayer Player, ItemConfigItem) - void"},{"location":"enums/ModCallbacks.html#mc_post_room_trigger_effect_removed","title":"MC_POST_ROOM_TRIGGER_EFFECT_REMOVED","text":"<p>Called after the room's TemporaryEffects is removed.</p> <p>Room has its own TemporaryEffects that are accessed through Room::GetEffects()</p> ID Name Function Args Optional Args Return Type 1269 MC_POST_ROOM_TRIGGER_EFFECT_REMOVED (ItemConfigItem) - void"},{"location":"enums/ModCallbacks.html#mc_pre_player_grid_collision","title":"MC_PRE_PLAYER_GRID_COLLISION","text":"<p>Called before this entity collides with a GridEntity or other solid grid tile.</p> <p>Return <code>true</code> to ignore collision.</p> Warning <p><code>GridEntity</code> can be nil, as entities may collide with \"empty\" grid indexes if the GridPath value is &gt;= 1000.</p> ID Name Function Args Optional Args Return Type 1171 MC_PRE_PLAYER_GRID_COLLISION (EntityPlayer Player, int GridIndex, GridEntity GridEntity) PlayerVariant boolean"},{"location":"enums/ModCallbacks.html#mc_player_grid_collision","title":"MC_PLAYER_GRID_COLLISION","text":"<p>Called when this entity collides with the grid, assuming it wasn't skipped.</p> Warning <p><code>GridEntity</code> can be nil, as entities may collide with \"empty\" grid indexes if the GridPath value is &gt;= 1000.</p> ID Name Function Args Optional Args Return Type 1172 MC_PLAYER_GRID_COLLISION (EntityPlayer Player, int GridIndex, GridEntity GridEntity) PlayerVariant boolean"},{"location":"enums/ModCallbacks.html#mc_pre_tear_grid_collision","title":"MC_PRE_TEAR_GRID_COLLISION","text":"<p>Called before this entity collides with a GridEntity or other solid grid tile.</p> <p>Return <code>true</code> to ignore collision.</p> Warning <p><code>GridEntity</code> can be nil, as entities may collide with \"empty\" grid indexes if the GridPath value is &gt;= 1000.</p> ID Name Function Args Optional Args Return Type 1173 MC_PRE_TEAR_GRID_COLLISION (EntityTear Tear, int GridIndex, GridEntity GridEntity) TearVariant boolean"},{"location":"enums/ModCallbacks.html#mc_tear_grid_collision","title":"MC_TEAR_GRID_COLLISION","text":"<p>Called when this entity collides with the grid, assuming it wasn't skipped.</p> Warning <p><code>GridEntity</code> can be nil, as entities may collide with \"empty\" grid indexes if the GridPath value is &gt;= 1000.</p> ID Name Function Args Optional Args Return Type 1174 MC_TEAR_GRID_COLLISION (EntityTear Tear, int GridIndex, GridEntity GridEntity) TearVariant boolean"},{"location":"enums/ModCallbacks.html#mc_pre_familiar_grid_collision","title":"MC_PRE_FAMILIAR_GRID_COLLISION","text":"<p>Called before this entity collides with a GridEntity or other solid grid tile.</p> <p>Return <code>true</code> to ignore collision.</p> Warning <p><code>GridEntity</code> can be nil, as entities may collide with \"empty\" grid indexes if the GridPath value is &gt;= 1000.</p> ID Name Function Args Optional Args Return Type 1175 MC_PRE_FAMILIAR_GRID_COLLISION (EntityFamiliar Familiar, int GridIndex, GridEntity GridEntity) FamiliarVariant boolean"},{"location":"enums/ModCallbacks.html#mc_familiar_grid_collision","title":"MC_FAMILIAR_GRID_COLLISION","text":"<p>Called when this entity collides with the grid, assuming it wasn't skipped.</p> Warning <p><code>GridEntity</code> can be nil, as entities may collide with \"empty\" grid indexes if the GridPath value is &gt;= 1000.</p> ID Name Function Args Optional Args Return Type 1176 MC_FAMILIAR_GRID_COLLISION (EntityFamiliar Familiar, int GridIndex, GridEntity GridEntity) FamiliarVariant boolean"},{"location":"enums/ModCallbacks.html#mc_pre_bomb_grid_collision","title":"MC_PRE_BOMB_GRID_COLLISION","text":"<p>Called before this entity collides with a GridEntity or other solid grid tile.</p> <p>Return <code>true</code> to ignore collision.</p> Warning <p><code>GridEntity</code> can be nil, as entities may collide with \"empty\" grid indexes if the GridPath value is &gt;= 1000.</p> ID Name Function Args Optional Args Return Type 1177 MC_PRE_BOMB_GRID_COLLISION (EntityBomb Bomb, int GridIndex, GridEntity GridEntity) BombVariant boolean"},{"location":"enums/ModCallbacks.html#mc_bomb_grid_collision","title":"MC_BOMB_GRID_COLLISION","text":"<p>Called when this entity collides with the grid, assuming it wasn't skipped.</p> Warning <p><code>GridEntity</code> can be nil, as entities may collide with \"empty\" grid indexes if the GridPath value is &gt;= 1000.</p> ID Name Function Args Optional Args Return Type 1178 MC_BOMB_GRID_COLLISION (EntityBomb Bomb, int GridIndex, GridEntity GridEntity) BombVariant boolean"},{"location":"enums/ModCallbacks.html#mc_pre_pickup_grid_collision","title":"MC_PRE_PICKUP_GRID_COLLISION","text":"<p>Called before this entity collides with a GridEntity or other solid grid tile.</p> <p>Return <code>true</code> to ignore collision.</p> Warning <p><code>GridEntity</code> can be nil, as entities may collide with \"empty\" grid indexes if the GridPath value is &gt;= 1000.</p> ID Name Function Args Optional Args Return Type 1179 MC_PRE_PICKUP_GRID_COLLISION (EntityPickup Pickup, int GridIndex, GridEntity GridEntity) PickupVariant boolean"},{"location":"enums/ModCallbacks.html#mc_pickup_grid_collision","title":"MC_PICKUP_GRID_COLLISION","text":"<p>Called when this entity collides with the grid, assuming it wasn't skipped.</p> Warning <p><code>GridEntity</code> can be nil, as entities may collide with \"empty\" grid indexes if the GridPath value is &gt;= 1000.</p> ID Name Function Args Optional Args Return Type 1180 MC_PICKUP_GRID_COLLISION (EntityPickup Pickup, int GridIndex, GridEntity GridEntity) PickupVariant boolean"},{"location":"enums/ModCallbacks.html#mc_pre_projectile_grid_collision","title":"MC_PRE_PROJECTILE_GRID_COLLISION","text":"<p>Called before this entity collides with a GridEntity or other solid grid tile.</p> <p>Return <code>true</code> to ignore collision.</p> Warning <p><code>GridEntity</code> can be nil, as entities may collide with \"empty\" grid indexes if the GridPath value is &gt;= 1000.</p> ID Name Function Args Optional Args Return Type 1181 MC_PRE_PROJECTILE_GRID_COLLISION (EntityProjectile Projectile, int GridIndex, GridEntity GridEntity) ProjectileVariant boolean"},{"location":"enums/ModCallbacks.html#mc_projectile_grid_collision","title":"MC_PROJECTILE_GRID_COLLISION","text":"<p>Called when this entity collides with the grid, assuming it wasn't skipped.</p> Warning <p><code>GridEntity</code> can be nil, as entities may collide with \"empty\" grid indexes if the GridPath value is &gt;= 1000.</p> ID Name Function Args Optional Args Return Type 1182 MC_PROJECTILE_GRID_COLLISION (EntityProjectile Projectile, int GridIndex, GridEntity GridEntity) ProjectileVariant boolean"},{"location":"enums/ModCallbacks.html#mc_pre_npc_grid_collision","title":"MC_PRE_NPC_GRID_COLLISION","text":"<p>Called before this entity collides with a GridEntity or other solid grid tile.</p> <p>Return <code>true</code> to ignore collision.</p> Warning <p><code>GridEntity</code> can be nil, as entities may collide with \"empty\" grid indexes if the GridPath value is &gt;= 1000.</p> ID Name Function Args Optional Args Return Type 1183 MC_PRE_NPC_GRID_COLLISION (EntityNPC NPC, int GridIndex, GridEntity GridEntity) EntityType boolean"},{"location":"enums/ModCallbacks.html#mc_npc_grid_collision","title":"MC_NPC_GRID_COLLISION","text":"<p>Called when this entity collides with the grid, assuming it wasn't skipped.</p> Warning <p><code>GridEntity</code> can be nil, as entities may collide with \"empty\" grid indexes if the GridPath value is &gt;= 1000.</p> ID Name Function Args Optional Args Return Type 1184 MC_NPC_GRID_COLLISION (EntityNPC NPC, int GridIndex, GridEntity GridEntity) EntityType boolean"},{"location":"enums/ModCallbacks.html#mc_post_projectile_death","title":"MC_POST_PROJECTILE_DEATH","text":"ID Name Function Args Optional Args Return Type 1032 MC_POST_PROJECTILE_DEATH (EntityProjectile Projectile) ProjectileVariant void"},{"location":"enums/ModCallbacks.html#mc_post_tear_death","title":"MC_POST_TEAR_DEATH","text":"ID Name Function Args Optional Args Return Type 1033 MC_POST_TEAR_DEATH (EntityTear Tear) TearVariant void"},{"location":"enums/ModCallbacks.html#mc_post_boss_intro_show","title":"MC_POST_BOSS_INTRO_SHOW","text":"<p>Accepts no return parameters.</p> <p>Called right after the boss intro is initialized. <code>BossID2</code> is for Double Trouble.</p> ID Name Function Args Optional Args Return Type 1270 MC_POST_BOSS_INTRO_SHOW (BossType BossID1, BossType BossID2) - void"},{"location":"enums/ModCallbacks.html#mc_post_room_transition_update","title":"MC_POST_ROOM_TRANSITION_UPDATE","text":"ID Name Function Args Optional Args Return Type 1271 MC_POST_ROOM_TRANSITION_UPDATE void int TransitionMode void"},{"location":"enums/ModCallbacks.html#mc_post_room_transition_render","title":"MC_POST_ROOM_TRANSITION_RENDER","text":"ID Name Function Args Optional Args Return Type 1272 MC_POST_ROOM_TRANSITION_RENDER void int TransitionMode void"},{"location":"enums/ModCallbacks.html#mc_pre_player_add_costume","title":"MC_PRE_PLAYER_ADD_COSTUME","text":"<p>Called before the costume is added to the player. Return ItemConfigItem to replace the costume or <code>true</code> to cancel adding it entirely.</p> ID Name Function Args Optional Args Return Type 1281 MC_PRE_PLAYER_ADD_COSTUME (ItemConfigItem ItemConfig, EntityPlayer Player, boolean ItemStateOnly) - ItemConfigItem ItemConfig or boolean"},{"location":"enums/ModCallbacks.html#mc_pre_player_remove_costume","title":"MC_PRE_PLAYER_REMOVE_COSTUME","text":"<p>Called before the costume is added to the player. Return <code>true</code> to cancel the removal.</p> ID Name Function Args Optional Args Return Type 1282 MC_PRE_PLAYER_ADD_COSTUME (ItemConfigItem ItemConfig, EntityPlayer Player, boolean ItemStateOnly) - boolean"},{"location":"enums/ModCallbacks.html#mc_post_player_add_costume","title":"MC_POST_PLAYER_ADD_COSTUME","text":"<p>Called after the costume is added to the player, assuming it wasn't skipped.</p> ID Name Function Args Optional Args Return Type 1283 MC_POST_PLAYER_ADD_COSTUME (ItemConfigItem ItemConfig, EntityPlayer Player, boolean ItemStateOnly) - void"},{"location":"enums/ModCallbacks.html#mc_post_player_remove_costume","title":"MC_POST_PLAYER_REMOVE_COSTUME","text":"<p>Called after the costume is added to the player, assuming it wasn't skipped.</p> ID Name Function Args Optional Args Return Type 1284 MC_POST_PLAYER_ADD_COSTUME (ItemConfigItem ItemConfig, EntityPlayer Player, boolean ItemStateOnly) - void"},{"location":"enums/ModCallbacks.html#mc_pre_player_update","title":"MC_PRE_PLAYER_UPDATE","text":"<p>Called before this entity is updated.</p> <p>Return <code>true</code> if the internal AI should be ignored, <code>false</code> or <code>nil</code>/nothing otherwise.</p> ID Name Function Args Optional Args Return Type 1160 MC_PRE_PLAYER_UPDATE (EntityPlayer Player) PlayerVariant boolean"},{"location":"enums/ModCallbacks.html#mc_pre_tear_update","title":"MC_PRE_TEAR_UPDATE","text":"<p>Called before this entity is updated.</p> <p>Return <code>true</code> if the internal AI should be ignored, <code>false</code> or <code>nil</code>/nothing otherwise.</p> ID Name Function Args Optional Args Return Type 1161 MC_PRE_TEAR_UPDATE (EntityTear Tear) TearVariant boolean"},{"location":"enums/ModCallbacks.html#mc_pre_familiar_update","title":"MC_PRE_FAMILIAR_UPDATE","text":"<p>Called before this entity is updated.</p> <p>Return <code>true</code> if the internal AI should be ignored, <code>false</code> or <code>nil</code>/nothing otherwise.</p> ID Name Function Args Optional Args Return Type 1162 MC_PRE_FAMILIAR_UPDATE (EntityFamiliar Familiar) FamiliarVariant boolean"},{"location":"enums/ModCallbacks.html#mc_pre_bomb_update","title":"MC_PRE_BOMB_UPDATE","text":"<p>Called before this entity is updated.</p> <p>Return <code>true</code> if the internal AI should be ignored, <code>false</code> or <code>nil</code>/nothing otherwise.</p> ID Name Function Args Optional Args Return Type 1163 MC_PRE_BOMB_UPDATE (EntityBomb Bomb) BombVariant boolean"},{"location":"enums/ModCallbacks.html#mc_pre_pickup_update","title":"MC_PRE_PICKUP_UPDATE","text":"<p>Called before this entity is updated.</p> <p>Return <code>true</code> if the internal AI should be ignored, <code>false</code> or <code>nil</code>/nothing otherwise.</p> ID Name Function Args Optional Args Return Type 1164 MC_PRE_PICKUP_UPDATE (EntityPickup Pickup) PickupVariant boolean"},{"location":"enums/ModCallbacks.html#mc_pre_knife_update","title":"MC_PRE_KNIFE_UPDATE","text":"<p>Called before this entity is updated.</p> <p>Return <code>true</code> if the internal AI should be ignored, <code>false</code> or <code>nil</code>/nothing otherwise.</p> ID Name Function Args Optional Args Return Type 1165 MC_PRE_KNIFE_UPDATE (EntityKnife Knife) KnifeSubType boolean"},{"location":"enums/ModCallbacks.html#mc_pre_projectile_update","title":"MC_PRE_PROJECTILE_UPDATE","text":"<p>Called before this entity is updated.</p> <p>Return <code>true</code> if the internal AI should be ignored, <code>false</code> or <code>nil</code>/nothing otherwise.</p> ID Name Function Args Optional Args Return Type 1166 MC_PRE_PROJECTILE_UPDATE (EntityProjectile Projectile) ProjectileVariant boolean"},{"location":"enums/ModCallbacks.html#mc_pre_laser_update","title":"MC_PRE_LASER_UPDATE","text":"<p>Called before this entity is updated.</p> <p>Return <code>true</code> if the internal AI should be ignored, <code>false</code> or <code>nil</code>/nothing otherwise.</p> ID Name Function Args Optional Args Return Type 1167 MC_PRE_LASER_UPDATE (EntityLaser Laser) LaserVariant boolean"},{"location":"enums/ModCallbacks.html#mc_pre_effect_update","title":"MC_PRE_EFFECT_UPDATE","text":"<p>Called before this entity is updated.</p> <p>Return <code>true</code> if the internal AI should be ignored, <code>false</code> or <code>nil</code>/nothing otherwise.</p> ID Name Function Args Optional Args Return Type 1168 MC_PRE_EFFECT_UPDATE (EntityEffect Effect) EffectVariant boolean"},{"location":"enums/ModCallbacks.html#mc_pre_fortune_display","title":"MC_PRE_FORTUNE_DISPLAY","text":"<p>Called before a fortune is displayed.</p> <p>Return <code>false</code> to cancel showing the fortune.</p> ID Name Function Args Optional Args Return Type 1483 MC_PRE_FORTUNE_DISPLAY void - boolean"},{"location":"enums/ModCallbacks.html#mc_pre_item_text_display","title":"MC_PRE_ITEM_TEXT_DISPLAY","text":"<p>Called before an item text is displayed.</p> <p><code>IsSticky</code> is <code>true</code> is if the item text stays on screen for an indefinite amount of time, namely when holding down the map key. <code>IsCurseDisplay</code> is <code>true</code> if the text is for displaying a curse.</p> <p>Return <code>false</code> to cancel showing the item text.</p> ID Name Function Args Optional Args Return Type 1484 MC_PRE_ITEM_TEXT_DISPLAY (string Title, string Subtitle, boolean IsSticky, boolean IsCurseDisplay) - boolean"},{"location":"enums/ModCallbacks.html#mc_pre_get_random_room_index","title":"MC_PRE_GET_RANDOM_ROOM_INDEX","text":"<p>Called when the game wishes to get a random available room index on the floor.</p> <p>Return an integer to override the target room index.</p> ID Name Function Args Optional Args Return Type 1290 MC_PRE_GET_RANDOM_ROOM_INDEX (int RoomIndex, bool IAmErrorRoom, int Seed) - int"},{"location":"enums/ModCallbacks.html#mc_pre_glowing_hourglass_save","title":"MC_PRE_GLOWING_HOURGLASS_SAVE","text":"<p>Called after the Glowing Hourglass state is saved.</p> ID Name Function Args Optional Args Return Type 1302 MC_PRE_GLOWING_HOURGLASS_SAVE (int Slot) - void"},{"location":"enums/ModCallbacks.html#mc_post_glowing_hourglass_save","title":"MC_POST_GLOWING_HOURGLASS_SAVE","text":"<p>Called after the Glowing Hourglass state is saved.</p> ID Name Function Args Optional Args Return Type 1300 MC_POST_GLOWING_HOURGLASS_SAVE (int Slot) - void"},{"location":"enums/ModCallbacks.html#mc_pre_glowing_hourglass_load","title":"MC_PRE_GLOWING_HOURGLASS_LOAD","text":"<p>Called after the Glowing Hourglass state is loaded.</p> ID Name Function Args Optional Args Return Type 1303 MC_PRE_GLOWING_HOURGLASS_LOAD (int Slot) - void"},{"location":"enums/ModCallbacks.html#mc_post_glowing_hourglass_load","title":"MC_POST_GLOWING_HOURGLASS_LOAD","text":"<p>Called after the Glowing Hourglass state is loaded.</p> ID Name Function Args Optional Args Return Type 1301 MC_POST_GLOWING_HOURGLASS_LOAD (int Slot) - void"},{"location":"enums/ModCallbacks.html#mc_pre_player_add_card","title":"MC_PRE_PLAYER_ADD_CARD","text":"<p>Called before a card gets added to the player's inventory.</p> <p>Return Card to change the card being added or <code>false</code> to cancel adding it entirely.</p> ID Name Function Args Optional Args Return Type 1350 MC_PRE_PLAYER_ADD_CARD (EntityPlayer Player, Card CardID, PillCardSlot Slot) Card boolean or int"},{"location":"enums/ModCallbacks.html#mc_post_player_add_card","title":"MC_POST_PLAYER_ADD_CARD","text":"<p>Called after a card gets added to the player's inventory.</p> ID Name Function Args Optional Args Return Type 1351 MC_POST_PLAYER_ADD_CARD (EntityPlayer Player, Card CardID, PillCardSlot Slot) Card void"},{"location":"enums/ModCallbacks.html#mc_pre_player_add_pill","title":"MC_PRE_PLAYER_ADD_PILL","text":"<p>Called before a pill gets added to the player's inventory.</p> <p>Return PillColor to change the pill being added or <code>false</code> to cancel adding it entirely.</p> ID Name Function Args Optional Args Return Type 1352 MC_PRE_PLAYER_ADD_PILL (EntityPlayer Player, PillColor PillColor, PillCardSlot Slot) PillColor boolean or int"},{"location":"enums/ModCallbacks.html#mc_post_player_add_pill","title":"MC_POST_PLAYER_ADD_PILL","text":"<p>Called after a pill gets added to the player's inventory.</p> ID Name Function Args Optional Args Return Type 1353 MC_POST_PLAYER_ADD_PILL (EntityPlayer Player, PillColor PillColor, PillCardSlot Slot) PillColor void"},{"location":"enums/ModCallbacks.html#mc_post_player_remove_card","title":"MC_POST_PLAYER_REMOVE_CARD","text":"<p>Called after a card gets removed from the player's inventory by any means (dropped, direct removal, use, etc).</p> ID Name Function Args Optional Args Return Type 1354 MC_POST_PLAYER_REMOVE_CARD (EntityPlayer Player, Card CardID, PillCardSlot Slot) Card void"},{"location":"enums/ModCallbacks.html#mc_post_player_remove_pill","title":"MC_POST_PLAYER_REMOVE_PILL","text":"<p>Called after a pill gets removed from the player's inventory by any means (dropped, direct removal, use, etc).</p> ID Name Function Args Optional Args Return Type 1355 MC_POST_PLAYER_REMOVE_PILL (EntityPlayer Player, PillColor CardID, PillCardSlot Slot) PillColor void"},{"location":"enums/ModCallbacks.html#mc_pre_player_collect_card","title":"MC_PRE_PLAYER_COLLECT_CARD","text":"<p>Called before a player picks up a card off the ground.</p> <p>Return <code>false</code> to prevent the card from being picked up.</p> ID Name Function Args Optional Args Return Type 1356 MC_PRE_PLAYER_COLLECT_CARD (EntityPlayer Player, EntityPickup Pickup) Card boolean"},{"location":"enums/ModCallbacks.html#mc_post_player_collect_card","title":"MC_POST_PLAYER_COLLECT_CARD","text":"<p>Called after a player picks up a card off the ground.</p> ID Name Function Args Optional Args Return Type 1357 MC_POST_PLAYER_COLLECT_CARD (EntityPlayer Player, EntityPickup Pickup) Card void"},{"location":"enums/ModCallbacks.html#mc_pre_player_collect_pill","title":"MC_PRE_PLAYER_COLLECT_PILL","text":"<p>Called before a player picks up a pill off the ground.</p> <p>Return <code>false</code> to prevent the pill from being picked up.</p> ID Name Function Args Optional Args Return Type 1358 MC_PRE_PLAYER_COLLECT_PILL (EntityPlayer Player, EntityPickup Pickup) PillColor boolean"},{"location":"enums/ModCallbacks.html#mc_post_player_collect_pill","title":"MC_POST_PLAYER_COLLECT_PILL","text":"<p>Called after a player picks up a pill off the ground.</p> ID Name Function Args Optional Args Return Type 1359 MC_POST_PLAYER_COLLECT_PILL (EntityPlayer Player, EntityPickup Pickup) PillColor void"},{"location":"enums/ModCallbacks.html#mc_post_player_drop_card","title":"MC_POST_PLAYER_DROP_CARD","text":"<p>Called after a player drops a card onto the ground from their inventory.</p> ID Name Function Args Optional Args Return Type 1360 MC_POST_PLAYER_DROP_CARD (EntityPlayer Player, EntityPickup Pickup, PillCardSlot Slot) Card void"},{"location":"enums/ModCallbacks.html#mc_post_player_drop_pill","title":"MC_POST_PLAYER_DROP_PILL","text":"<p>Called after a player drops a pill onto the ground from their inventory.</p> ID Name Function Args Optional Args Return Type 1361 MC_POST_PLAYER_DROP_PILL (EntityPlayer Player, EntityPickup Pickup, PillCardSlot Slot) PillColor void"},{"location":"enums/ModCallbacks.html#mc_pre_player_give_birth_cambion","title":"MC_PRE_PLAYER_GIVE_BIRTH_CAMBION","text":"<p>Called before Cambion Conception spawns a familiar after the player takes damage.</p> <p>Return <code>false</code> to prevent the familiar from being added.</p> <p>Note that if you cancel this, the game will not attempt to spawn another familiar until the next requisite amount of damage, and canceling the spawning here still counts towards Cambion Conception's usual limit of 4 familiar spawns.</p> ID Name Function Args Optional Args Return Type 1474 MC_PRE_PLAYER_GIVE_BIRTH_CAMBION (EntityPlayer Player, ConceptionFamiliarFlag) ConceptionFamiliarFlag boolean"},{"location":"enums/ModCallbacks.html#mc_pre_player_give_birth_immaculate","title":"MC_PRE_PLAYER_GIVE_BIRTH_IMMACULATE","text":"<p>Called before Immaculate Conception spawns a familiar after the player takes damage.</p> <p>Return <code>false</code> to prevent the familiar from being added.</p> <p>Note that if you cancel this, the game will not attempt to spawn another familiar until another 15 hearts are collected. Unlike Cambion Conception, Immaculate Conception will not stop attempting to spawn familiars until all available vanilla familiars have been granted.</p> ID Name Function Args Optional Args Return Type 1475 MC_PRE_PLAYER_GIVE_BIRTH_IMMACULATE (EntityPlayer Player, ConceptionFamiliarFlag) ConceptionFamiliarFlag boolean"},{"location":"enums/MouseButton.html","title":"Enum \"MouseButton\"","text":"Value Enumerator Comment 0 LEFT 1 RIGHT 2 SCROLLWHEEL 3 BACK Located on the side of some mice 4 FORWARD Located on the side of some mice","tags":["Enum"]},{"location":"enums/NullPickupSubType.html","title":"Enum \"NullPickupSubType\"","text":"Value Enumerator Comment 0 ANY 1 NO_COLLECTIBLE_CHEST 2 NO_COLLECTIBLE 3 NO_COLLECTIBLE_CHEST_COIN 3 GREED_MODE_ANY 4 NO_COLLECTIBLE_TRINKET_CHEST","tags":["Enum"]},{"location":"enums/PauseMenuStates.html","title":"Enum \"PauseMenuStates\"","text":"Value Enumerator Comment 0 CLOSED 1 OPEN 2 OPTIONS","tags":["Enum"]},{"location":"enums/PedestalType.html","title":"Enum \"PedestalType\"","text":"Value Enumerator Comment 0 DEFAULT 1 FORTUNE_TELLING_MACHINE 2 BLOOD_DONATION_MACHINE 3 SLOT_MACHINE 4 GOLDEN_CHEST 5 RED_CHEST 6 STONE_CHEST 7 SPIKED_CHEST 8 ETERNAL_CHEST 9 MOMS_DRESSING_TABLE 10 CHEST 11 MOMS_CHEST 12 OLD_CHEST 13 WOODEN_CHEST 14 MEGA_CHEST 15 CONFESSIONAL 16 GOLDEN_CHEST_COIN_SLOT 17 ETERNAL_CHEST_COIN_SLOT 18 OLD_CHEST_COIN_SLOT 19 MEGA_CHEST_COIN_SLOT","tags":["Enum"]},{"location":"enums/PillCardSlot.html","title":"Enum \"PillCardSlot\"","text":"Value Enumerator Comment 0 PRIMARY 1 SECONDARY 2 TERTIARY Offset by 2 of: Pocket Item, Dice Bag Item, Pillcard (Otherwise unused) 3 QUATERNARY Offset by Pocket Item and Dice Bag Item and Pillcard (Otherwise unused)","tags":["Enum"]},{"location":"enums/PlayerVariant.html","title":"Enum \"PlayerVariant\"","text":"Value Enumerator Comment 0 PLAYER 1 FOUND_SOUL 1 CO_OP_BABY","tags":["Enum"]},{"location":"enums/PocketItemType.html","title":"Enum \"PocketItemType\"","text":"Value Enumerator Comment 0 PILL 1 CARD 2 ACTIVE_ITEM","tags":["Enum"]},{"location":"enums/PressurePlateVariant.html","title":"Enum \"PressurePlateVariant\"","text":"Value Enumerator Comment 0 ROOM_CLEAR 1 REWARD 2 GREED_MODE 3 MINES_PUZZLE 3 RAIL_PLATE 9 KILL_SWITCH 10 EVENT_GROUP_0 10 EVENT_0 11 EVENT_GROUP_1 11 EVENT_1 12 EVENT_GROUP_2 12 EVENT_2 13 EVENT_GROUP_3 13 EVENT_3","tags":["Enum"]},{"location":"enums/ProceduralEffectActionType.html","title":"Enum \"ProceduralEffectActionType\"","text":"Value Enumerator Comment 0 USE_ACTIVE_ITEM 1 ADD_TEMPRORY_EFFECT 2 CONVERT_ENTITIES 3 AREA_DAMAGE 4 SPAWN_ENTITY 5 FART","tags":["Enum"]},{"location":"enums/ProceduralEffectConditionType.html","title":"Enum \"ProceduralEffectConditionType\"","text":"Value Enumerator Comment 0 ACTIVE 1 TEAR_FIRE 2 ENEMY_HIT 3 ENEMY_KILL 4 DAMAGE_TAKEN 5 ROOM_CLEAR 6 ENTITY_SPAWN 7 PICKUP_COLLECTED 8 CHAIN trigger if previous <code>ProceduralEffect</code> is triggered (or dropped by chance).","tags":["Enum"]},{"location":"enums/ProjectileMode.html","title":"Enum \"ProjectileMode\"","text":"Value Enumerator Comment 0 SINGLE 1 SPREAD_TWO 2 SPREAD_THREE 3 SPREAD_THREE_NO_INHERITANCE 4 SPREAD_FOUR 5 SPREAD_FIVE 6 PLUS 7 CROSS 8 CIRCLE_EIGHT 9 CIRCLE_CUSTOM","tags":["Enum"]},{"location":"enums/PurityState.html","title":"Enum \"PurityState\"","text":"Value Enumerator Comment 0 RED Attack stat 1 BLUE Fire rate stat 2 YELLOW Speed stat 3 ORANGE Range stat","tags":["Enum"]},{"location":"enums/RetractingSpikesVariant.html","title":"Enum \"RetractingSpikesVariant\"","text":"Value Enumerator Comment 0 NORMAL 1 DOWN_1 2 DOWN_2 3 DOWN_3 4 DOWN_4 5 DOWN_5 6 UP_1 7 UP_2 8 UP_3 9 UP_4 10 UP_5","tags":["Enum"]},{"location":"enums/RoomSubType.html","title":"Enum \"RoomSubType\"","text":"Value Enumerator Comment 0 NULL 0 SHOP_LEVEL_1 1 SHOP_LEVEL_2 2 SHOP_LEVEL_3 3 SHOP_LEVEL_4 4 SHOP_LEVEL_5 10 SHOP_RARE_GOOD 11 SHOP_RARE_BAD 100 SHOP_KEEPER_LEVEL_1 101 SHOP_KEEPER_LEVEL_2 102 SHOP_KEEPER_LEVEL_3 103 SHOP_KEEPER_LEVEL_4 104 SHOP_KEEPER_LEVEL_5 110 SHOP_KEEPER_RARE_GOOD 111 SHOP_KEEPER_RARE_BAD 1 TREASURE_NORMAL 1 TREASURE_OPTIONS 2 TREASURE_PAY_TO_PLAY 3 TREASURE_PAY_TO_PLAY_OPTIONS 34 TREASURE_KNIFE_PIECE 0 MINIBOSS_SLOTH 1 MINIBOSS_LUST 2 MINIBOSS_WRATH 3 MINIBOSS_GLUTTONY 4 MINIBOSS_GREED 5 MINIBOSS_ENVY 6 MINIBOSS_PRIDE 7 MINIBOSS_SUPER_SLOTH 8 MINIBOSS_SUPER_LUST 9 MINIBOSS_SUPER_WRATH 10 MINIBOSS_SUPER_GLUTTONY 11 MINIBOSS_SUPER_GREED 12 MINIBOSS_SUPER_ENVY 13 MINIBOSS_SUPER_PRIDE 14 MINIBOSS_ULTRA_PRIDE 15 MINIBOSS_KRAMPUS 0 CHALLENGE_NORMAL 1 CHALLENGE_BOSS 10 CHALLENGE_WAVE 11 CHALLENGE_WAVE_BOSS 12 CHALLENGE_WAVE_GIDEON 0 LIBRARY_LEVEL_1 1 LIBRARY_LEVEL_2 2 LIBRARY_LEVEL_3 3 LIBRARY_LEVEL_4 4 LIBRARY_LEVEL_5 0 CRAWLSPACE_NORMAL 1 CRAWLSPACE_GIDEON 2 CRAWLSPACE_ROTGUT 2 CRAWLSPACE_GUS 3 CRAWLSPACE_ROTGUT_2 3 CRAWLSPACE_ROTGUT_HEART 4 CRAWLSPACE_BEAST 1 SECRET_EXIT_DOWNPOUR 2 SECRET_EXIT_MINES 3 SECRET_EXIT_MAUSOLEUM 1 DOWNPOUR_WHITE_FIRE 34 DOWNPOUR_MIRROR 1 MINES_YELLOW_BUTTON 10 MINES_MINESHAFT_ENTRANCE 11 MINESHAFT_LOBBY 20 MINESHAFT_KNIFE_PIECE 30 MINESHAFT_ROOM 31 MINESHAFT_ROOM_BACKWARDS 0 ASCENT_EXIT 1 ASCENT_BASEMENT 4 ASCENT_CAVES 7 ASCENT_DEPTHS 27 ASCENT_DOWNPOUR 29 ASCENT_MINES 31 ASCENT_MAUSOLEUM 0 HOME_ISAACS_BEDROOM 1 HOME_HALLWAY 2 HOME_MOMS_BEDROOM 3 HOME_LIVING_ROOM 10 HOME_CLOSET_PICKUPS 11 HOME_CLOSET_TAINTED 33 DEATH_CERTIFICATE_ENTRANCE 34 DEATH_CERTIFICATE_NORMAL 0 ARCADE_NORMAL 1 ARCADE_CAIN 0 CURSE_NORMAL 1 CURSE_VOODOO_HEAD 0 DEVIL_NORMAL 1 DEVIL_NUMBER_MAGNET 0 ANGEL_NORMAL 1 ANGEL_STAIRWAY 0 ISAACS_BEDROOM_NORMAL 99 ISAACS_BEDROOM_GENESIS 0 DEPTHS_NORMAL 1 DEPTHS_FOOL_ROOM 1 DEPTHS_MARKED_SKULL","tags":["Enum"]},{"location":"enums/ShaderType.html","title":"Enum \"Renderer.ShaderType\"","text":"Value Enumerator Comment 0 SHADER_COLOR_OFFSET 1 SHADER_PIXELATION 2 SHADER_BLOOM 3 SHADER_COLOR_CORRECTION 4 SHADER_HQ4X 5 SHADER_SHOCKWAVE 6 SHADER_OLDTV 7 SHADER_WATER 8 SHADER_HALLUCINATION 9 SHADER_COLOR_MOD 10 SHADER_COLOR_OFFSET_CHAMPION 11 SHADER_WATER_V2 12 SHADER_BACKGROUND 13 SHADER_WATER_OVERLAY 14 SHADER_UNK 15 SHADER_COLOR_OFFSET_DOGMA 16 SHADER_COLOR_OFFSET_GOLD 17 SHADER_DIZZY 18 SHADER_HEAT_WAVE 19 SHADER_MIRROR","tags":["Enum"]},{"location":"enums/SlotVariant.html","title":"Enum \"SlotVariant\"","text":"Value Enumerator Comment 1 SLOT_MACHINE 2 BLOOD_DONATION_MACHINE 2 TEMPERANCE_MACHINE 3 FORTUNE_TELLING_MACHINE 4 BEGGAR 5 DEVIL_BEGGAR 6 SHELL_GAME 7 KEY_MASTER 8 DONATION_MACHINE 9 BOMB_BUM 10 SHOP_RESTOCK_MACHINE 11 GREED_DONATION_MACHINE 12 MOMS_DRESSING_TABLE 13 BATTERY_BUM 14 HOME_CLOSET_PLAYER 15 HELL_GAME 16 CRANE_GAME 17 CONFESSIONAL 18 ROTTEN_BEGGAR","tags":["Enum"]},{"location":"enums/SpecialQuest.html","title":"Enum \"SpecialQuest\"","text":"Value Enumerator Comment -1 DISABLED 0 DEFAULT 1 MIRROR 2 MINESHAFT","tags":["Enum"]},{"location":"enums/StbGridType.html","title":"Enum \"StbGridType\"","text":"Value Enumerator Comment 0 DECORATION 1000 ROCK 1001 BOMB_ROCK 1002 ALT_ROCK 1003 MARKED_ROCK 1003 TINTED_ROCK 1008 ALT_ROCK_MARKED 1008 MARKED_SKULL 1009 EVENT_ROCK 1010 SPIKE_ROCK 1011 FOOLS_GOLD_ROCK 1300 TNT 1490 RED_POOP 1494 RAINBOW_POOP 1495 CHUNKY_POOP 1495 CORN_POOP 1496 GOLDEN_POOP 1497 BLACK_POOP 1498 HOLY_POOP 1498 WHITE_POOP 1499 GIANT_POOP 1500 POOP 1501 CHARMING_POOP 1900 BLOCK 1901 PILLAR 1901 TALL_BLOCK 1930 SPIKES 1931 RETRACTING_SPIKES 1940 COBWEB 1999 INVISIBLE_BLOCK 3000 PIT 3002 BUTTON_RAIL 3002 EVENT_RAIL 3009 EVENT_PIT 4000 KEY_BLOCK 4000 LOCK 4500 PRESSURE_PLATE 4500 BUTTON 5000 DEVIL_STATUE 5001 ANGEL_STATUE 6000 RAIL 6001 RAIL_PIT 6100 TELEPORTER 9000 TRAP_DOOR 9000 LEVEL_EXIT 9100 CRAWLSPACE 9100 STAIRCASE 10000 GRAVITY","tags":["Enum"]},{"location":"enums/StbPoopSubType.html","title":"Enum \"StbPoopSubType\"","text":"Value Enumerator Comment 0 NORMAL 1 NON_REPLACEABLE","tags":["Enum"]},{"location":"enums/StbRailVariant.html","title":"Enum \"StbRailVariant\"","text":"Value Enumerator Comment 0 HORIZONTAL 1 VERTICAL 2 DOWN_TO_RIGHT 3 DOWN_TO_LEFT 4 UP_TO_RIGHT 5 UP_TO_LEFT 6 CROSSROAD 6 JUNCTION 7 END_LEFT 8 END_RIGHT 9 END_UP 10 END_DOWN 16 HORIZONTAL_CART_LEFT 32 HORIZONTAL_CART_RIGHT 17 VERTICAL_CART_UP 33 VERTICAL_CART_DOWN 80 MINESHAFT_HORIZONTAL_1 96 MINESHAFT_HORIZONTAL_2 112 MINESHAFT_HORIZONTAL_3 81 MINESHAFT_VERTICAL_1 97 MINESHAFT_VERTICAL_2 113 MINESHAFT_VERTICAL_3 82 MINESHAFT_DOWN_TO_RIGHT_1 98 MINESHAFT_DOWN_TO_RIGHT_2 83 MINESHAFT_DOWN_TO_LEFT_1 99 MINESHAFT_DOWN_TO_LEFT_2 84 MINESHAFT_UP_TO_RIGHT_1 100 MINESHAFT_UP_TO_RIGHT_2 85 MINESHAFT_UP_TO_LEFT_1 101 MINESHAFT_UP_TO_LEFT_2","tags":["Enum"]},{"location":"enums/StbRockSubType.html","title":"Enum \"StbRockSubType\"","text":"Value Enumerator Comment 0 NORMAL 1 NON_REPLACEABLE","tags":["Enum"]},{"location":"enums/StbTeleporterSubType.html","title":"Enum \"StbTeleporterSubType\"","text":"Value Enumerator Comment 0 ACTIVE 1 INNACTIVE","tags":["Enum"]},{"location":"enums/StbType.html","title":"Enum \"StbType\"","text":"Value Enumerator Comment 0 SPECIAL_ROOMS 1 BASEMENT 2 CELLAR 3 BURNING_BASEMENT 4 CAVES 5 CATACOMBS 6 FLOODED_CAVES 7 DEPTHS 8 NECROPOLIS 9 DANK_DEPTHS 10 WOMB 11 UTERO 12 SCARRED_WOMB 13 BLUE_WOMB 14 SHEOL 15 CATHEDRAL 16 DARK_ROOM 17 CHEST 26 THE_VOID 26 VOID 27 DOWNPOUR 28 DROSS 29 MINES 30 ASHPIT 31 MAUSOLEUM 32 GEHENNA 33 CORPSE 34 MORTIS 35 HOME 36 ASCENT","tags":["Enum"]},{"location":"enums/TaintedMarksGroup.html","title":"Enum \"TaintedMarksGroup\"","text":"Value Enumerator Comment 0 BOTH 1 SOULSTONE 2 POLAROID_NEGATIVE","tags":["Enum"]},{"location":"enums/TeleporterVariant.html","title":"Enum \"TeleporterVariant\"","text":"Value Enumerator Comment 0 SQUARE 1 MOON 2 RHOMBUS 2 DIAMOND 3 M 3 HAGALAZ 4 PENTAGRAM 5 CROSS 6 TRIANGLE","tags":["Enum"]},{"location":"enums/WeaponModifier.html","title":"Enum \"WeaponModifier\"","text":"Bitset Calculator Value Enumerator Comment 1 &lt;&lt; 0 CHOCOLATE_MILK 1 &lt;&lt; 1 CURSED_EYE 1 &lt;&lt; 2 BRIMSTONE 1 &lt;&lt; 3 MONSTROS_LUNG 1 &lt;&lt; 4 LUDOVICO_TECHNIQUE 1 &lt;&lt; 5 ANTI_GRAVITY 1 &lt;&lt; 6 TRACTOR_BEAM 1 &lt;&lt; 7 SOY_MILK 1 &lt;&lt; 7 ALMOND_MILK 1 &lt;&lt; 8 NEPTUNUS 1 &lt;&lt; 9 AZAZELS_SNEEZE 1 &lt;&lt; 11 C_SECTION 1 &lt;&lt; 30 FAMILIAR 1 &lt;&lt; 31 BONE","tags":["Enum"]},{"location":"enums/WispSubType.html","title":"Enum \"WispSubType\"","text":"Value Enumerator Comment 65536 SPECIAL_FLAG 65536 NOTCHED_AXE_COAL 0 | SPECIAL_FLAG 65537 NOTCHED_AXE_IRON 1 | SPECIAL_FLAG 65538 NOTCHED_AXE_GOLD etc 65539 NOTCHED_AXE_DIAMON 65540 NOTCHED_AXE_REDSTONE 65541 JAR_OF_FLIES_1 65542 JAR_OF_FLIES_2 65543 JAR_OF_FLIES_3 65544 JAR_OF_FLIES_4 65545 JAR_OF_FLIES_5 65546 FRIENDLY_BALL_NORMAL 65547 FRIENDLY_BALL_EXPLOSIVE 65548 FRIENDLY_BALL_HOMING 65549 FRIENDLY_BALL_BRIMSTONE 65550 DELIRIOUS_MONSTRO 65551 DELIRIOUS_DUKE 65552 DELIRIOUS_LOKI 65553 DELIRIOUS_HAUNT 65554 LEMEGETON_VIRTUE","tags":["Enum"]},{"location":"enums/XMLNode.html","title":"Enum \"XMLNode\"","text":"Value Enumerator Comment 0 MOD 1 ENTITY 2 PLAYER 3 ITEM 4 TRINKET 5 PILL 6 CARD 7 MUSIC 8 SOUND 9 CHALLENGE 10 ITEMPOOL 11 NIGHTMARE 12 COSTUME 13 NULLCOSTUME 14 WISP 15 WISPCOLOR 16 CURSE 17 LOCUST 18 LOCUSTCOLOR 19 BOMBCOSTUME 20 CRAFTINGRECIPE 21 BOSSPOOL 22 BOSSPORTRAIT 23 CUTSCENE 24 STAGE 25 BACKDROP 26 ACHIEVEMENT 27 GIANTBOOK 28 BOSSRUSHWAVE 29 PLAYERFORM 30 NULLITEM 31 BOSSCOLOR","tags":["Enum"]},{"location":"examples/Beams.html","title":"Beams Example","text":"<p>Beams are used internally for rendering cords, such as Gello's umbilical cord. Note that this only handles rendering and not physics.</p> <p>Beams are best demonstrated by looking at the Ball and Chain enemies found in Gehenna, which have a chain that dynamically moves and stretches depending on how far away the spiked ball is from where it is chained.</p> <p>Beams are comprised of any number of Points.</p>"},{"location":"examples/Beams.html#code","title":"Code","text":"<p>You can download the full mod and its assets by clicking here.</p> Video Demonstration <p> A laser Beam of death incinerating enemies. </p> Example <pre><code>local mod = RegisterMod(\"Repentogon Beam Example\", 1)\n\n-- Some constants.\nlocal DAMAGE_MULTIPLIER = 0.01\nlocal ITEM_ID = Isaac.GetItemIdByName(\"Life-Drain Gem\")\n\n-- First make a sprite.\nlocal sprite = Sprite()\nsprite:Load(\"gfx/chain_beam.anm2\", true)\nsprite:Play(\"Idle\", true)\n\n-- Handles the beam and damaging of the closest enemy to the player.\nfunction mod:HandleLifeSteam(player)\n    local data = player:GetData()\n\n    -- Check if the player has our item, first.\n    if not player:HasCollectible(ITEM_ID) then\n        return\n    end\n\n    -- Get the beam stored in player:GetData(), or create one if it doesn't exist.\n    local beam = data.LifeStealBeam\n    if not beam then\n        -- Create the beam. We don't need to use the overlay here.\n        data.LifeStealBeam = Beam(sprite, \"chain\", false, false)\n        beam = data.LifeStealBeam\n    end\n\n    -- Get the closest enemy\n    local closestDistance, closestEnemy\n    for _, enemy in ipairs(Isaac.GetRoomEntities()) do\n        if enemy:IsActiveEnemy() and enemy:IsVulnerableEnemy() then\n            local distanceToPlayer = enemy.Position:Distance(player.Position)\n            if not closestDistance or closestDistance &gt; distanceToPlayer then\n                closestEnemy = enemy:ToNPC()\n                closestDistance = distanceToPlayer\n            end\n        end\n    end\n\n    -- If there's no enemy in the room, end the function early.\n    if not closestEnemy then\n        return\n    end\n\n    -- Deal damage every frame.\n    closestEnemy:TakeDamage(player.Damage * DAMAGE_MULTIPLIER, 0, EntityRef(player), 0)\n\n    -- Render the beam. The position is in screen coordinates.\n    -- The second argument, SpritesheetCoordinate, is what the Y position of the spritesheet is by the time this Point is reached.\n    -- So for example, two points of 0 and 64 SpritesheetCoordinate will render the sprite starting from y0 to 64.\n    -- An additional Point with a SpritesheetCoordinate of 0 will draw it in reverse from y64 to y0.\n    -- Width is an optional third argument that is a multiplier used to determine the width of the Beam.\n    beam:Add(Isaac.WorldToScreen(player.Position), 0)\n    beam:Add(Isaac.WorldToScreen(closestEnemy.Position), 64) -- 64 is the height of the spritesheet.\n\n    -- Render the beam. By default, this will clear all points.\n    beam:Render()\nend\n\nmod:AddCallback(ModCallbacks.MC_POST_PLAYER_RENDER, mod.HandleLifeSteam)\n</code></pre>"},{"location":"examples/Capsules.html","title":"Capsules Example","text":"<p>Capsules are used by the game for collision detection. All entities have a collision capsule whose shape is defined by their XML markup. Additionally, you can use a null layer frame's size and position in a sprite's animation to generate a null capsule.</p> <p>Null layers are added in the sprite's .anm2 file by setting the type to \"Null\" when adding a layer. The size and relative position of the null layer is dependant on the position and scale of the frame.</p> <p>You can use Entity:GetNullCapsule() to generate a capsule of the current frame in a specified null layer.</p>"},{"location":"examples/Capsules.html#code","title":"Code","text":"<p>You can download the full mod and its assets by clicking here.</p> Video Demonstration <p> An example of a capsule hitbox using a large lead pipe. </p> Example <pre><code>local exampleMod = RegisterMod(\"Repentogon Null Capsule Example\", 1)\nlocal sfx = SFXManager()\n\n-- Setup some constants.\nlocal PIPE_ITEM_ID = Isaac.GetItemIdByName(\"Swinging Pipe\")\nlocal PIPE_EFFECT_ID = Isaac.GetEntityVariantByName(\"Pipe Swing\")\nlocal DAMAGE_MULTIPLIER = 2.5\n\n---@param player EntityPlayer\nfunction exampleMod:ActivatePipeItem(_, _, player, flags)\n    -- Don't run a second time for Car Battery, because it would be strange for an item like this.\n    if flags &amp; UseFlag.USE_CARBATTERY == UseFlag.USE_CARBATTERY then\n        return\n    end\n\n    -- Spawn the pipe effect. We will be checking for things to damage in the update callback.\n    local effect = Isaac.Spawn(EntityType.ENTITY_EFFECT, PIPE_EFFECT_ID, 0, player.Position, Vector.Zero, player):ToEffect()\n    effect:FollowParent(player)\n\n    -- Sound effects.\n    sfx:Play(SoundEffect.SOUND_SWORD_SPIN)\nend\n\n-- Connect the callback, only for our item.\nexampleMod:AddCallback(ModCallbacks.MC_USE_ITEM, exampleMod.ActivatePipeItem, PIPE_ITEM_ID)\n\n-- Now, let's handle capsules.\n-- Capsules are our hitboxes.\n---@param pipe EntityEffect\nfunction exampleMod:PipeEffectUpdate(pipe)\n    local sprite = pipe:GetSprite()\n    local player = pipe.Parent:ToPlayer()\n    local data = pipe:GetData()\n\n    -- We are going to use this table as a way to make sure enemies are only hurt once in a swing.\n    -- This line will either set the hit blacklist to itself, or create one if it doesn't exist.\n    data.HitBlacklist = data.HitBlacklist or {}\n\n    -- Handle removing the pipe when the spin is done.\n    if sprite:IsFinished(\"Spin\") then\n        pipe:Remove()\n        return\n    end\n\n    -- We're doing a for loop before because the effect is based off of Spirit Sword's anm2.\n    -- Spirit Sword's anm2 has two hitboxes with the same name with a different number at the ending, so we use a for loop to avoid repeating code.\n    for i = 1, 2 do\n        -- Get the \"null capsule\", which is the hitbox defined by the null layer in the anm2.\n        local capsule = pipe:GetNullCapsule(\"Hit\" .. i)\n\n        -- Search for all enemies within the capsule.\n        for _, enemy in ipairs(Isaac.FindInCapsule(capsule, EntityPartition.ENEMY)) do\n            -- Make sure it can be hurt.\n            if enemy:IsVulnerableEnemy()\n            and enemy:IsActiveEnemy()\n            and not data.HitBlacklist[GetPtrHash(enemy)] then\n                -- Now hurt it.\n                enemy:TakeDamage(player.Damage * DAMAGE_MULTIPLIER, 0, EntityRef(player), 0)\n\n                -- Add it to the blacklist, so it can't be hurt again.\n                data.HitBlacklist[GetPtrHash(enemy)] = true\n\n                -- Do some fancy effects, while we're at it.\n                enemy:BloodExplode()\n                enemy:MakeBloodPoof(enemy.Position, nil, 0.5)\n                sfx:Play(SoundEffect.SOUND_DEATH_BURST_LARGE)\n            end\n        end\n    end\nend\n\n-- Connect the callback, only for our effect.\nexampleMod:AddCallback(ModCallbacks.MC_POST_EFFECT_UPDATE, exampleMod.PipeEffectUpdate, PIPE_EFFECT_ID)\n</code></pre>"},{"location":"examples/ColorModifiers.html","title":"Color Modifier Example","text":"<p>The ColorModifier class allows us to alter the color correction applied onto the game. This is used by items such as Astral Projection.</p> <p>You can use Game:SetColorModifier() to apply a modifier, and Room:UpdateColorModifier() to set the color modifier back to what is defined in the room's FXParams, which are the values defined in fxlayers.xml by default.</p>"},{"location":"examples/ColorModifiers.html#code","title":"Code","text":"<p>You can download the full mod and its assets by clicking here.</p> Video Demonstration <p> A brief, red color correction whenever the player is damaged. </p> Example <pre><code>local mod = RegisterMod(\"Repentogon Color Modifiers\", 1)\nlocal game = Game()\n\nlocal RED_LENGTH = 3\n\n-- Make our red color modifier.\nlocal redModifier = ColorModifier(1, 0, 0, 0.33, 0, 2)\n\n-- Add a red color modifier when the player is hurt.\nfunction mod:OnPlayerHurt()\n    -- Set the red effect. \"lerp\" stands for linear interpolation, and means it'll \"fade\" to our color modifier from the current one.\n    game:SetColorModifier(redModifier, true, 0.3)\n\n    -- Fade back to normal after RED_LENGTH frames.\n    Isaac.CreateTimer(function ()\n        -- Set's the color modifier back to what was specified in \"fxparams.xml\".\n        game:GetRoom():UpdateColorModifier(true, true, 0.05)\n    end, RED_LENGTH, 1, false)\nend\n\nmod:AddCallback(ModCallbacks.MC_ENTITY_TAKE_DMG, mod.OnPlayerHurt, EntityType.ENTITY_PLAYER)\n</code></pre>"},{"location":"examples/DealChance.html","title":"Altering Deal Chance Example","text":"<p>There are four callbacks that allow us to manipulate devil and angel chances.</p> <p>MC_PRE_DEVIL_APPLY_ITEMS is run when most items that effect deal chance modify the calculation. It's called before the stage penalty is applied. If a deal has spawned anywhere on the previous two floors, the game decays the resulting deal chance by a stage penalty of either 25% or 50%, depending on how many deals have been taken.</p> <p>It's important to note that even though they game displays a value of ~33% or ~66% for the 25% and 50% values respectively, devil chance is not clamped to a value between 0 and 1, and \"100%\" chance without items generally means a value of around ~133%.</p> <p>Return a <code>float</code> to modify the chance in this step of the calculation.</p> <p>MC_PRE_DEVIL_APPLY_STAGE_PENALTY allows you to return <code>false</code> to bypass the stage penalty.</p> <p>MC_PRE_DEVIL_APPLY_SPECIAL_ITEMS is where the game applies modifications that bypass the stage penalty, for items such as Goat Head and Eucharist. Return a <code>float</code> to modify the chance in this step of the calculation.</p> <p>MC_POST_DEVIL_CALCULATE is called after the deal chance has been calculated. You can return a <code>float</code> here to override the calculated chance.</p> <p>The following example mod adds an item that will randomize the deal chance on MC_PRE_DEVIL_APPLY_SPECIAL_ITEMS while in an uncleared boss room, and keeps that chance applied after the room is cleared.</p>"},{"location":"examples/DealChance.html#code","title":"Code","text":"<p>You can download the full mod and its assets by clicking here.</p> Video Demonstration <p> The devil deal chance is randomized every frame while fighting Baby Plum. </p> Example <pre><code>local mod = RegisterMod(\"Repentogon Devil Chance\", 1)\nlocal game = Game()\n\n-- The item \"Dark Spellcasting Tome\" will set the devil deal chance to\n-- a random percentage every frame while in an uncleared boss room.\nlocal ITEM_ID = Isaac.GetItemIdByName(\"Dark Spellcasting Tome\")\n\n-- Store the random chance that will be set when the boss room is cleared.\nlocal modifiedChance = 0\n\n-- There's four callbacks for devil chance that are applied at different times.\n-- The one we're using is MC_PRE_DEVIL_APPLY_SPECIAL_ITEMS.\n-- This is where the game applies chances that bypass the stage penalty, such as Goat Head and Eucharist.\n-- There's also MC_PRE_DEVIL_APPLY_ITEMS, which is where most items apply their modified chance.\n\n-- If in a boss room and it isn't cleared, set the chance to something random.\nfunction mod:RandomizeDevilChance()\n    -- Check if we should actually do the item's effects.\n    -- We need the RNG for later so we'll check if the following variable is nil.\n    local firstPlayer = PlayerManager.FirstCollectibleOwner(ITEM_ID)\n    if firstPlayer then\n        local room = game:GetRoom()\n\n        -- Only do this in a boss room.\n        if room:GetType() == RoomType.ROOM_BOSS then\n            -- Check if in a boss room and if isn't clear, and randomize if so.\n            if not room:IsClear() then\n                local rng = firstPlayer:GetCollectibleRNG(ITEM_ID)\n\n                -- Random chance between 0% and 100%.\n                modifiedChance = rng:RandomFloat()\n            end\n\n            return modifiedChance\n        end\n    end\nend\n\nmod:AddCallback(ModCallbacks.MC_PRE_DEVIL_APPLY_SPECIAL_ITEMS, mod.RandomizeDevilChance)\n</code></pre>"},{"location":"examples/ImGuiMenu.html","title":"Custom ImGui Menu","text":"<p>The ImGui class allows us to create custom menus for our mods. This can be used to create configuration menus, and also to hold useful information while debugging.</p> <p>ImGui menus are found in the top bar when pressing the Debug Console button, which is <code>~</code> by default.</p> <p>For a very thorough and generic usage example, please see the ImGui Lua Test Menu, which can also be found in game.</p>"},{"location":"examples/ImGuiMenu.html#code","title":"Code","text":"<p>You can download the full mod and its assets by clicking here.</p> Video Demonstration <p> The menu created by the example mod. </p> Example <pre><code>local mod = RegisterMod(\"Repentogon ImGui\", 1)\nlocal sfx = SFXManager()\nlocal game = Game()\n\n-- We'll use this later.\nlocal notificationText = \"What do you want to shout...\"\n\n-- This example mod demonstrates many general applications for ImGui.\n-- For a very thorough and generic usage example, please see the ImGui Lua Test Menu:\n-- https://github.com/TeamREPENTOGON/REPENTOGON/blob/main/repentogon/resources/scripts/repentogon_tests/test_imgui.lua\n\n-- Create a menu, which is a tab that appears in the top bar after pressing the debug console button.\n-- The element id should be something unique. There can only be one element per ID.\n-- This \"\\u{f0c3}\" represents a unicode character. The font used for ImGui is powered by fontawesome.com, so it has many emojis you can use.\n-- Find an emoji, then click on it and find the Unicode representation at the top right.\n-- https://fontawesome.com/search?m=free&amp;o=r\nImGui.CreateMenu(\"ExampleMenu\", \"\\u{f0c3} ImGui Example\")\n\n-- To add a button under the dropdown for the menu, we need to use the generic AddElement function.\n-- This can be used to add any element, or you can use the dedicated function for the type of element if there is one.\nImGui.AddElement(\"ExampleMenu\", \"ExampleMenuMainWindowButton\", ImGuiElement.MenuItem, \"\\u{f005} Fun Menu\")\n\n-- Create Fun Menu. This will hold some buttons and sliders that we will make do fun things.\nImGui.CreateWindow(\"ExampleMenuFunMenu\", \"\\u{f005} Fun Menu\")\n\n-- Link it to ExampleMenuMainWindowButton, the button we made earlier.\n-- It'll now open or close when that button is pressed.\nImGui.LinkWindowToElement(\"ExampleMenuFunMenu\", \"ExampleMenuMainWindowButton\")\n\n-- The fun menu will have four things:\n    -- A progress bar showing how close we are to missing Boss Rush.\n    -- A that updates some text.\n    -- A text input and button to cause a notification to appear.\n    -- A button that plays a funny sound (SoundEffect.SOUND_DERP).\n\n-- First, add a progress bar showing how close we are to missing Boss Rush.\n-- The code controlling the value of it as at the bottom of this file.\nImGui.AddProgressBar(\n    \"ExampleMenuFunMenu\",\n    \"ExampleMenuBossRushProgress\",\n    \"Boss Rush deadline!\",\n    0\n)\n\n-- Add that slider.\nImGui.AddSliderInteger(\n    \"ExampleMenuFunMenu\",\n    \"ExampleMenuHpSlider\",\n    \"Cool slider\", -- Slider label.\n    function (newValue) -- Function ran whenever the slider is changed.\n        print(newValue)\n    end,\n    50, -- Default value\n    0, -- Minimum value\n    100, -- Maximum value\n    \"Coolness factor: %d%\" -- Number label formatting. So, at default, the label will say \"Coolness factor: 50\"\n)\n\n-- Add the text input and notification.\nImGui.AddInputText(\n    \"ExampleMenuFunMenu\",\n    \"ExampleMenuNotificationInput\",\n    \"\", -- We'll use the hint text to indicate what this does instead of a label.\n    function (newValue) -- Function ran whenever the text input is updated.\n        notificationText = newValue\n    end,\n    \"\", -- Default value.\n    \"What do you want to shout...\" -- Hint text; This is the text that will appear when there is no user-inputted text in the box.\n)\n\n-- By default, ImGui elements are on separate lines.\n-- Add a \"SameLine\" element to make the next element appear on the same line.\nImGui.AddElement(\n    \"ExampleMenuFunMenu\",\n    \"\", -- No element id needed since we're never gonna need to reference this later. We're allowed to add multiple elements to an empty id.\n    ImGuiElement.SameLine\n)\n\nImGui.AddButton(\n    \"ExampleMenuFunMenu\",\n    \"ExampleMenuNotificationButton\",\n    \"\\u{f0a1}\", -- Since this button will be small, we'll just put an emoji to indicate what it does.\n    function (clickCount)\n        -- Send a notification of type INFO with a lifetime of 5000 (in milliseconds).\n        ImGui.PushNotification(notificationText, ImGuiNotificationType.INFO, 5000)\n    end,\n    true -- It'll be a small button.\n)\n\n-- Let's also add a help marker to indicator what the button does.\n-- Help markers look like: (?) and can be hovered over with your mouse to display a box of text.\n\nImGui.SetHelpmarker(\"ExampleMenuNotificationButton\", \"Send a notification with the text of your choice using this fashionable button!\")\n\n-- Finally, make a button that plays a funny sound.\nImGui.AddButton(\n    \"ExampleMenuFunMenu\",\n    \"ExampleMenuFunnyButton\",\n    \"Funny button!\", -- Button label.\n    function (clickCount)\n        sfx:Play(SoundEffect.SOUND_DERP, 1, 0, false, math.random(50, 150)/100) -- A random pitch is pretty funny...\n    end,\n    false -- Normal sized button.\n)\n\n-- Update the progress bar\nmod:AddCallback(ModCallbacks.MC_POST_UPDATE, function ()\n    ImGui.UpdateData(\"ExampleMenuBossRushProgress\", ImGuiData.Value, game.TimeCounter / game.BossRushParTime)\nend)\n</code></pre>"},{"location":"examples/WeightedOutcomes.html","title":"Weighted Outcomes Example","text":"<p>The WeightedOutcomePicker class allows choosing a random outcome from a weighted list using an RNG object.</p> <p>A weighted chance system is commonly used by games to determine loot tables and other things where some items in a list of possible outcomes should have a lower chance than others. An outcome's chance to be chosen is determined by its weight divided by the sum of the weight of all outcomes.</p> <p>The weight of each outcome don't have to add up to 100. The following code snippet adds up to each outcome having a 50% chance to chosen. 50 (weight) divided by sum of the weight of all outcomes (100) is 0.5 (50%). <pre><code>local weightedOutcomePicker = WeightedOutcomePicker()\n\n-- Each outcome has a 50% chance to be chosen. (50 / 100)\nweightedOutcomePicker:AddOutcomeWeight(10, 50)\nweightedOutcomePicker:AddOutcomeWeight(20, 50)\n</code></pre></p> <p>Meanwhile, this code snippet has each outcome having a 33% chance to be chosen. 50 (weight) divided by sum of the weight of all outcomes (150) is 0.33 (33%). <pre><code>local weightedOutcomePicker = WeightedOutcomePicker()\n\n-- Each outcome has a 33% chance to be chosen. (50 / 150)\nweightedOutcomePicker:AddOutcomeWeight(10, 50)\nweightedOutcomePicker:AddOutcomeWeight(20, 50)\nweightedOutcomePicker:AddOutcomeWeight(30, 50)\n</code></pre></p> <p>The follow example mod adds a new chest variant that only gives blue items, and uses a WeightedOutcomePicker filled with collectible types to make stronger items more rare.</p>"},{"location":"examples/WeightedOutcomes.html#code","title":"Code","text":"<p>You can download the full mod and its assets by clicking here.</p> Video Demonstration <p> A blue chest giving blue items. </p> Example <pre><code>local mod = RegisterMod(\"Repentogon Custom Chest Example\", 1)\nlocal sfx = SFXManager()\n\nlocal BLUE_CHEST_SUBTYPE = Isaac.GetEntitySubTypeByName(\"Blue Chest\")\n\n-- First, let's create our WeightedOutcomePicker.\n-- This allows us to assign weights to a number outcome, and randomly chooses an outcome based on the total weight.\n-- To be specific, it's (itemWeight / sumOfItemWeights).\n-- We will be making a WeightedOutcomePicker for the items in which the chest can give.\nlocal itemOutcomes = WeightedOutcomePicker()\n\n-- Just add a few blue items. You don't HAVE to make the weights add up to 100, they can add up to anything, but it's easier to understand this way.\nitemOutcomes:AddOutcomeWeight(CollectibleType.COLLECTIBLE_CONVERTER, 10)\nitemOutcomes:AddOutcomeWeight(CollectibleType.COLLECTIBLE_ISAACS_TEARS, 10)\nitemOutcomes:AddOutcomeWeight(CollectibleType.COLLECTIBLE_BLUE_BOX, 10) -- Pandora's Box\nitemOutcomes:AddOutcomeWeight(CollectibleType.COLLECTIBLE_TELEPORT, 10)\nitemOutcomes:AddOutcomeWeight(CollectibleType.COLLECTIBLE_D12, 10)\nitemOutcomes:AddOutcomeWeight(CollectibleType.COLLECTIBLE_CUBE_BABY, 10)\nitemOutcomes:AddOutcomeWeight(CollectibleType.COLLECTIBLE_PISCES, 10)\nitemOutcomes:AddOutcomeWeight(CollectibleType.COLLECTIBLE_BLUE_MAP, 10)\nitemOutcomes:AddOutcomeWeight(CollectibleType.COLLECTIBLE_BLANKET, 5)\nitemOutcomes:AddOutcomeWeight(CollectibleType.COLLECTIBLE_EVIL_CHARM, 5)\nitemOutcomes:AddOutcomeWeight(CollectibleType.COLLECTIBLE_FATE, 1)\nitemOutcomes:AddOutcomeWeight(CollectibleType.COLLECTIBLE_RELIC, 1)\nitemOutcomes:AddOutcomeWeight(CollectibleType.COLLECTIBLE_GLOWING_HOUR_GLASS, 1)\nitemOutcomes:AddOutcomeWeight(CollectibleType.COLLECTIBLE_PARASITOID, 1)\nitemOutcomes:AddOutcomeWeight(CollectibleType.COLLECTIBLE_VENUS, 1)\n\n-- Creates a pedestal that looks like our chest.\nfunction mod:CreateChestPedestal(location, rng, isCoinChest)\n    -- Get an outcome, aka a collectible type.\n    local collectibleId = itemOutcomes:PickOutcome(rng)\n\n    -- Spawn a pedestal with that item, and change\n    local itemPedestal = Isaac.Spawn(EntityType.ENTITY_PICKUP, PickupVariant.PICKUP_COLLECTIBLE, collectibleId, location, Vector.Zero, nil):ToPickup()\n\n    -- Replace the item pedestal's altar spritesheet with our own.\n    local sprite = itemPedestal:GetSprite()\n    sprite:ReplaceSpritesheet(5, \"gfx/items/blue_chest_altar.png\", true)\n\n    -- Remove the poof effect from the pedestal spawning.\n    itemPedestal:ClearEntityFlags(EntityFlag.FLAG_APPEAR)\n\n    -- Change the sprite. In the anm2, 5 is the frame with the opened golden chest, and 16 is the frame with the coin version.\n    -- Our altar spritesheet replaces those two sprites, so we will use those frames.\n    if isCoinChest then\n        itemPedestal:SetAlternatePedestal(16)\n    else\n        itemPedestal:SetAlternatePedestal(4)\n    end\n\n    --! To be clear, leaving and entering the room again or leaving and continuing the run will cause the pedestal to turn into a normal golden chest pedestal.\n    --! This can be fixed by using save data to track what pedestals are blue chest pedestals.\n    --! That is outside the scope of this example mod, but keep this in mind.\nend\n\n-- Handle giving an item.\nfunction mod:HandleGivingLoot(chest, collider)\n    local player = collider:ToPlayer()\n    local sprite = chest:GetSprite()\n\n    -- If a player didn't touch the chest, return (collider:ToPlayer() returns nil if it's not a player).\n    -- Also return if it's not our chest.\n    if not player or chest.SubType ~= BLUE_CHEST_SUBTYPE then\n        return\n    end\n\n    -- Make sure it's not already being opened.\n    if not sprite:IsPlaying(\"Open\")  then\n        -- Check if we should open the chest, and remove either a coin or a key if so.\n        local shouldOpen = false\n        local someoneHasPayToPlay = PlayerManager.AnyoneHasCollectible(CollectibleType.COLLECTIBLE_PAY_TO_PLAY)\n        if someoneHasPayToPlay and player:GetNumCoins() &gt; 0 then\n            player:AddCoins(-1)\n            shouldOpen = true\n        elseif player:HasGoldenKey() or player:GetNumKeys() &gt; 0 then\n            player:AddKeys(-1)\n            shouldOpen = true\n        end\n\n        -- If we are opening the chest, make an RNG object based on the drop seed of the chest and run the pedestal creation code.\n        if shouldOpen then\n            local rng = RNG()\n            rng:SetSeed(chest.DropSeed)\n\n            -- Spawn our pedestal.\n            mod:CreateChestPedestal(chest.Position, rng, someoneHasPayToPlay)\n\n            -- Remove the opened chest.\n            -- Wait 4 frames to do this so that there isn't a brief period where there's no visible sprite.\n            -- We can delay the function by a frame by using a timer.\n            Isaac.CreateTimer(function ()\n                chest:Remove()\n            end, 4, 1, false)\n\n            -- Play the animation so that this doesn't happen again.\n            sprite:Play(\"Open\")\n\n            -- Play the sound.\n            sfx:Play(SoundEffect.SOUND_CHEST_OPEN)\n        end\n    end\n\n    -- Cancel internal code of the normal chest and just allow collision.\n    return {\n        Collide = true,\n        SkipCollisionEffects = true,\n    }\nend\n\nmod:AddCallback(ModCallbacks.MC_PRE_PICKUP_COLLISION, mod.HandleGivingLoot, PickupVariant.PICKUP_CHEST)\n\n-- Handle general update logic.\nfunction mod:HandleBlueChestUpdate(chest)\n    local sprite = chest:GetSprite()\n\n    -- End the callback early if it's not our chest.\n    if chest.SubType ~= BLUE_CHEST_SUBTYPE then\n        return\n    end\n\n    -- Play sound.\n    if sprite:IsEventTriggered(\"DropSound\") then\n        sfx:Play(SoundEffect.SOUND_CHEST_DROP)\n    end\n\n    -- Handle switching animations.\n    if sprite:IsFinished(\"Appear\") then\n        sprite:Play(\"Idle\", true)\n    end\nend\n\nmod:AddCallback(ModCallbacks.MC_POST_PICKUP_UPDATE, mod.HandleBlueChestUpdate, PickupVariant.PICKUP_CHEST)\n\n-- Handle the chest using the pay-to-play sprite.\nfunction mod:HandlePayToPlay(chest)\n    if chest.SubType == BLUE_CHEST_SUBTYPE and PlayerManager.AnyoneHasCollectible(CollectibleType.COLLECTIBLE_PAY_TO_PLAY) then\n        local sprite = chest:GetSprite()\n        sprite:ReplaceSpritesheet(0, \"gfx/items/pick ups/blue_chest_coinslot.png\", true)\n    end\nend\n\nmod:AddCallback(ModCallbacks.MC_POST_PICKUP_INIT, mod.HandlePayToPlay, PickupVariant.PICKUP_CHEST)\n</code></pre>"},{"location":"menus/BestiaryMenu.html","title":"Global Class \"BestiaryMenu\"","text":"Info <p>You can get this class by using the <code>BestiaryMenu</code> global table.</p> <p>Note that to call these functions, you must use a <code>.</code> (period) instead of a <code>:</code> (colon)!</p> Example Code <pre><code>local sprite = BestiaryMenu.GetBestiaryMenuSprite()\n</code></pre>","tags":["Global","Class"]},{"location":"menus/BestiaryMenu.html#functions","title":"Functions","text":"","tags":["Global","Class"]},{"location":"menus/BestiaryMenu.html#getbestiarymenusprite","title":"GetBestiaryMenuSprite ()","text":"","tags":["Global","Class"]},{"location":"menus/BestiaryMenu.html#sprite-getbestiarymenusprite","title":"Sprite GetBestiaryMenuSprite ( )","text":"<p>Paper sprite and all other decoration.</p>","tags":["Global","Class"]},{"location":"menus/BestiaryMenu.html#getdeathscreensprite","title":"GetDeathScreenSprite ()","text":"","tags":["Global","Class"]},{"location":"menus/BestiaryMenu.html#sprite-getdeathscreensprite","title":"Sprite GetDeathScreenSprite ( )","text":"<p>Selectable elements that show the DeathScreen sprite of the enemies.</p>","tags":["Global","Class"]},{"location":"menus/BestiaryMenu.html#getenemysprite","title":"GetEnemySprite ()","text":"","tags":["Global","Class"]},{"location":"menus/BestiaryMenu.html#sprite-getenemysprite","title":"Sprite GetEnemySprite ( )","text":"<p>Used for the animated enemy preview.</p>","tags":["Global","Class"]},{"location":"menus/BestiaryMenu.html#getselectedpage","title":"GetSelectedPage ()","text":"","tags":["Global","Class"]},{"location":"menus/BestiaryMenu.html#int-getselectedpage","title":"int GetSelectedPage ( )","text":"","tags":["Global","Class"]},{"location":"menus/BestiaryMenu.html#getnumbosspages","title":"GetNumBossPages ()","text":"","tags":["Global","Class"]},{"location":"menus/BestiaryMenu.html#int-getnumbosspages","title":"int GetNumBossPages ( )","text":"<p>Returns the number of bestiary pages used for bosses. The boss pages come after the monster pages.</p>","tags":["Global","Class"]},{"location":"menus/BestiaryMenu.html#getnummonsterpages","title":"GetNumMonsterPages ()","text":"","tags":["Global","Class"]},{"location":"menus/BestiaryMenu.html#int-getnummonsterpages","title":"int GetNumMonsterPages ( )","text":"<p>Returns the number of bestiary pages used for enemies. Enemy pages come first, the pages afterwards are reserved for bosses.</p>","tags":["Global","Class"]},{"location":"menus/BestiaryMenu.html#getnumpages","title":"GetNumPages ()","text":"","tags":["Global","Class"]},{"location":"menus/BestiaryMenu.html#int-getnumpages","title":"int GetNumPages ( )","text":"<p>Returns the total number of pages currently in the bestiary, with both monster and boss pages included.</p>","tags":["Global","Class"]},{"location":"menus/BestiaryMenu.html#getselectedelement","title":"GetSelectedElement ()","text":"","tags":["Global","Class"]},{"location":"menus/BestiaryMenu.html#int-getselectedelement","title":"int GetSelectedElement ( )","text":"","tags":["Global","Class"]},{"location":"menus/BestiaryMenu.html#setselectedpage","title":"SetSelectedPage ()","text":"","tags":["Global","Class"]},{"location":"menus/BestiaryMenu.html#void-setselectedpage-int-page","title":"void SetSelectedPage ( int Page )","text":"","tags":["Global","Class"]},{"location":"menus/BestiaryMenu.html#setselectedelement","title":"SetSelectedElement ()","text":"","tags":["Global","Class"]},{"location":"menus/BestiaryMenu.html#void-setselectedelement-int-element","title":"void SetSelectedElement ( int Element )","text":"","tags":["Global","Class"]},{"location":"menus/ChallengeMenu.html","title":"Global Class \"ChallengeMenu\"","text":"Info <p>You can get this class by using the <code>ChallengeMenu</code> global table.</p> <p>Note that to call these functions, you must use a <code>.</code> (period) instead of a <code>:</code> (colon)!</p> Example Code <pre><code>local sprite = ChallengeMenu.GetSprite()\n</code></pre>","tags":["Global","Class"]},{"location":"menus/ChallengeMenu.html#functions","title":"Functions","text":"","tags":["Global","Class"]},{"location":"menus/ChallengeMenu.html#getsprite","title":"GetSprite ()","text":"","tags":["Global","Class"]},{"location":"menus/ChallengeMenu.html#sprite-getsprite","title":"Sprite GetSprite ( )","text":"","tags":["Global","Class"]},{"location":"menus/ChallengeMenu.html#getselectedchallengeid","title":"GetSelectedChallengeID ()","text":"","tags":["Global","Class"]},{"location":"menus/ChallengeMenu.html#int-getselectedchallengeid","title":"int GetSelectedChallengeID ( )","text":"","tags":["Global","Class"]},{"location":"menus/ChallengeMenu.html#setselectedchallengeid","title":"SetSelectedChallengeID ()","text":"","tags":["Global","Class"]},{"location":"menus/ChallengeMenu.html#void-setselectedchallengeid-int-challengeid","title":"void SetSelectedChallengeID ( int ChallengeID )","text":"","tags":["Global","Class"]},{"location":"menus/CharacterMenu.html","title":"Global Class \"CharacterMenu\"","text":"Info <p>You can get this class by using the <code>CharacterMenu</code> global table.</p> <p>Note that to call these functions, you must use a <code>.</code> (period) instead of a <code>:</code> (colon)!</p> Example Code <pre><code>local sprite = CharacterMenu.GetBGSprite()\n</code></pre>","tags":["Global","Class"]},{"location":"menus/CharacterMenu.html#functions","title":"Functions","text":"","tags":["Global","Class"]},{"location":"menus/CharacterMenu.html#getbigcharpagesprite","title":"GetBigCharPageSprite ()","text":"","tags":["Global","Class"]},{"location":"menus/CharacterMenu.html#sprite-getbigcharpagesprite","title":"Sprite GetBigCharPageSprite ( )","text":"","tags":["Global","Class"]},{"location":"menus/CharacterMenu.html#getbgsprite","title":"GetBGSprite ()","text":"","tags":["Global","Class"]},{"location":"menus/CharacterMenu.html#sprite-getbgsprite","title":"Sprite GetBGSprite ( )","text":"","tags":["Global","Class"]},{"location":"menus/CharacterMenu.html#getcharacterportraitsprite","title":"GetCharacterPortraitSprite ()","text":"","tags":["Global","Class"]},{"location":"menus/CharacterMenu.html#sprite-getcharacterportraitsprite","title":"Sprite GetCharacterPortraitSprite ( )","text":"","tags":["Global","Class"]},{"location":"menus/CharacterMenu.html#getcharacterwheeldepth","title":"GetCharacterWheelDepth ()","text":"","tags":["Global","Class"]},{"location":"menus/CharacterMenu.html#float-getcharacterwheeldepth","title":"float GetCharacterWheelDepth ( )","text":"<p>Returns the depth of the character selection wheel object.</p>","tags":["Global","Class"]},{"location":"menus/CharacterMenu.html#getcharacterwheelwidth","title":"GetCharacterWheelWidth ()","text":"","tags":["Global","Class"]},{"location":"menus/CharacterMenu.html#float-getcharacterwheelwidth","title":"float GetCharacterWheelWidth ( )","text":"<p>Returns the width of the character selection wheel object.</p>","tags":["Global","Class"]},{"location":"menus/CharacterMenu.html#getdifficulty","title":"GetDifficulty ()","text":"","tags":["Global","Class"]},{"location":"menus/CharacterMenu.html#int-getdifficulty","title":"int GetDifficulty ( )","text":"","tags":["Global","Class"]},{"location":"menus/CharacterMenu.html#getdifficultypagesprite","title":"GetDifficultyPageSprite ()","text":"","tags":["Global","Class"]},{"location":"menus/CharacterMenu.html#sprite-getdifficultypagesprite","title":"Sprite GetDifficultyPageSprite ( )","text":"","tags":["Global","Class"]},{"location":"menus/CharacterMenu.html#getdifficultyoverlaysprite","title":"GetDifficultyOverlaySprite ()","text":"","tags":["Global","Class"]},{"location":"menus/CharacterMenu.html#sprite-getdifficultyoverlaysprite","title":"Sprite GetDifficultyOverlaySprite ( )","text":"<p>The blood stain when selecting Hard mode / Greedier</p>","tags":["Global","Class"]},{"location":"menus/CharacterMenu.html#geteastereggpagesprite","title":"GetEastereggPageSprite ()","text":"","tags":["Global","Class"]},{"location":"menus/CharacterMenu.html#sprite-geteastereggpagesprite","title":"Sprite GetEastereggPageSprite ( )","text":"","tags":["Global","Class"]},{"location":"menus/CharacterMenu.html#getischaracterunlocked","title":"GetIsCharacterUnlocked ()","text":"","tags":["Global","Class"]},{"location":"menus/CharacterMenu.html#boolean-getischaracterunlocked","title":"boolean GetIsCharacterUnlocked ( )","text":"","tags":["Global","Class"]},{"location":"menus/CharacterMenu.html#getgreeddecosprite","title":"GetGreedDecoSprite ()","text":"","tags":["Global","Class"]},{"location":"menus/CharacterMenu.html#sprite-getgreeddecosprite","title":"Sprite GetGreedDecoSprite ( )","text":"<p>Displayed when greedmode is selected</p>","tags":["Global","Class"]},{"location":"menus/CharacterMenu.html#getnumcharacters","title":"GetNumCharacters ()","text":"","tags":["Global","Class"]},{"location":"menus/CharacterMenu.html#int-getnumcharacters","title":"int GetNumCharacters ( )","text":"<p>Number of characters in the wheel. </p>","tags":["Global","Class"]},{"location":"menus/CharacterMenu.html#getpageswapwidgetsprite","title":"GetPageSwapWidgetSprite ()","text":"","tags":["Global","Class"]},{"location":"menus/CharacterMenu.html#sprite-getpageswapwidgetsprite","title":"Sprite GetPageSwapWidgetSprite ( )","text":"","tags":["Global","Class"]},{"location":"menus/CharacterMenu.html#getscrollspeed","title":"GetScrollSpeed ()","text":"","tags":["Global","Class"]},{"location":"menus/CharacterMenu.html#float-getscrollspeed","title":"float GetScrollSpeed ( )","text":"<p>Returns the speed of the animation playing when rotating the character selection wheel.</p>","tags":["Global","Class"]},{"location":"menus/CharacterMenu.html#getseedentrysprite","title":"GetSeedEntrySprite ()","text":"","tags":["Global","Class"]},{"location":"menus/CharacterMenu.html#sprite-getseedentrysprite","title":"Sprite GetSeedEntrySprite ( )","text":"","tags":["Global","Class"]},{"location":"menus/CharacterMenu.html#getseedpagesprite","title":"GetSeedPageSprite ()","text":"","tags":["Global","Class"]},{"location":"menus/CharacterMenu.html#sprite-getseedpagesprite","title":"Sprite GetSeedPageSprite ( )","text":"","tags":["Global","Class"]},{"location":"menus/CharacterMenu.html#getseedunlockpagesprite","title":"GetSeedUnlockPageSprite ()","text":"","tags":["Global","Class"]},{"location":"menus/CharacterMenu.html#sprite-getseedunlockpagesprite","title":"Sprite GetSeedUnlockPageSprite ( )","text":"","tags":["Global","Class"]},{"location":"menus/CharacterMenu.html#getselectedcharactermenu","title":"GetSelectedCharacterMenu ()","text":"","tags":["Global","Class"]},{"location":"menus/CharacterMenu.html#int-getselectedcharactermenu","title":"int GetSelectedCharacterMenu ( )","text":"<p>0 for Normal, 1 for Tainted</p>","tags":["Global","Class"]},{"location":"menus/CharacterMenu.html#getselectedcharacterid","title":"GetSelectedCharacterID ()","text":"","tags":["Global","Class"]},{"location":"menus/CharacterMenu.html#int-getselectedcharacterid","title":"int GetSelectedCharacterID ( )","text":"","tags":["Global","Class"]},{"location":"menus/CharacterMenu.html#gettaintedbgdecosprite","title":"GetTaintedBGDecoSprite ()","text":"","tags":["Global","Class"]},{"location":"menus/CharacterMenu.html#sprite-gettaintedbgdecosprite","title":"Sprite GetTaintedBGDecoSprite ( )","text":"","tags":["Global","Class"]},{"location":"menus/CharacterMenu.html#getwinstreakpagesprite","title":"GetWinStreakPageSprite ()","text":"","tags":["Global","Class"]},{"location":"menus/CharacterMenu.html#sprite-getwinstreakpagesprite","title":"Sprite GetWinStreakPageSprite ( )","text":"","tags":["Global","Class"]},{"location":"menus/CharacterMenu.html#setcharacterwheeldepth","title":"SetCharacterWheelDepth ()","text":"","tags":["Global","Class"]},{"location":"menus/CharacterMenu.html#void-setcharacterwheeldepth-float-value","title":"void SetCharacterWheelDepth ( float Value )","text":"<p>Set the depth of the character selection wheel object.</p>","tags":["Global","Class"]},{"location":"menus/CharacterMenu.html#setcharacterwheelwidth","title":"SetCharacterWheelWidth ()","text":"","tags":["Global","Class"]},{"location":"menus/CharacterMenu.html#void-setcharacterwheelwidth-float-value","title":"void SetCharacterWheelWidth ( float Value )","text":"<p>Set the width of the character selection wheel object.</p>","tags":["Global","Class"]},{"location":"menus/CharacterMenu.html#setdifficulty","title":"SetDifficulty ()","text":"","tags":["Global","Class"]},{"location":"menus/CharacterMenu.html#void-setdifficulty-difficulty-difficulty","title":"void SetDifficulty ( Difficulty Difficulty )","text":"","tags":["Global","Class"]},{"location":"menus/CharacterMenu.html#setischaracterunlocked","title":"SetIsCharacterUnlocked ()","text":"","tags":["Global","Class"]},{"location":"menus/CharacterMenu.html#void-setischaracterunlocked-boolean-isunlocked","title":"void SetIsCharacterUnlocked ( boolean IsUnlocked )","text":"","tags":["Global","Class"]},{"location":"menus/CharacterMenu.html#setscrollspeed","title":"SetScrollSpeed ()","text":"","tags":["Global","Class"]},{"location":"menus/CharacterMenu.html#void-setscrollspeed-float-speed","title":"void SetScrollSpeed ( float Speed )","text":"<p>Set the speed of the animation playing when rotating the character selection wheel.</p>","tags":["Global","Class"]},{"location":"menus/CharacterMenu.html#setselectedcharactermenu","title":"SetSelectedCharacterMenu ()","text":"","tags":["Global","Class"]},{"location":"menus/CharacterMenu.html#void-setselectedcharactermenu-int-menu","title":"void SetSelectedCharacterMenu ( int Menu )","text":"<p>0 for Normal, 1 for Tainted</p>","tags":["Global","Class"]},{"location":"menus/CharacterMenu.html#setselectedcharacterid","title":"SetSelectedCharacterID ()","text":"","tags":["Global","Class"]},{"location":"menus/CharacterMenu.html#void-setselectedcharacterid-int-characterid","title":"void SetSelectedCharacterID ( int CharacterID )","text":"","tags":["Global","Class"]},{"location":"menus/CollectionMenu.html","title":"Global Class \"CollectionMenu\"","text":"Info <p>You can get this class by using the <code>CollectionMenu</code> global table.</p> <p>Note that to call these functions, you must use a <code>.</code> (period) instead of a <code>:</code> (colon)!</p> Example Code <pre><code>local sprite = CollectionMenu.GetDeathScreenSprite()\n</code></pre>","tags":["Global","Class"]},{"location":"menus/CollectionMenu.html#functions","title":"Functions","text":"","tags":["Global","Class"]},{"location":"menus/CollectionMenu.html#getcollectionmenusprite","title":"GetCollectionMenuSprite ()","text":"","tags":["Global","Class"]},{"location":"menus/CollectionMenu.html#sprite-getcollectionmenusprite","title":"Sprite GetCollectionMenuSprite ( )","text":"<p>Paper sprite and all other decoration.</p>","tags":["Global","Class"]},{"location":"menus/CollectionMenu.html#getdeathscreensprite","title":"GetDeathScreenSprite ()","text":"","tags":["Global","Class"]},{"location":"menus/CollectionMenu.html#sprite-getdeathscreensprite","title":"Sprite GetDeathScreenSprite ( )","text":"<p>Selectable elements that show the DeathScreen sprite of the items.</p>","tags":["Global","Class"]},{"location":"menus/CollectionMenu.html#getselectedpage","title":"GetSelectedPage ()","text":"","tags":["Global","Class"]},{"location":"menus/CollectionMenu.html#int-getselectedpage","title":"int GetSelectedPage ( )","text":"","tags":["Global","Class"]},{"location":"menus/CollectionMenu.html#getselectedelement","title":"GetSelectedElement ()","text":"","tags":["Global","Class"]},{"location":"menus/CollectionMenu.html#int-getselectedelement","title":"int GetSelectedElement ( )","text":"","tags":["Global","Class"]},{"location":"menus/CollectionMenu.html#setselectedpage","title":"SetSelectedPage ()","text":"","tags":["Global","Class"]},{"location":"menus/CollectionMenu.html#void-setselectedpage-int-page","title":"void SetSelectedPage ( int Page )","text":"","tags":["Global","Class"]},{"location":"menus/CollectionMenu.html#setselectedelement","title":"SetSelectedElement ()","text":"","tags":["Global","Class"]},{"location":"menus/CollectionMenu.html#void-setselectedelement-int-element","title":"void SetSelectedElement ( int Element )","text":"","tags":["Global","Class"]},{"location":"menus/ControllerSelectMenu.html","title":"Global Class \"ControllerSelectMenu\"","text":"Info <p>You can get this class by using the <code>ControllerSelectMenu</code> global table.</p> <p>Note that to call these functions, you must use a <code>.</code> (period) instead of a <code>:</code> (colon)!</p> Example Code <pre><code>local sprite = ControllerSelectMenu.GetSprite()\n</code></pre>","tags":["Global","Class"]},{"location":"menus/ControllerSelectMenu.html#functions","title":"Functions","text":"","tags":["Global","Class"]},{"location":"menus/ControllerSelectMenu.html#getsprite","title":"GetSprite ()","text":"","tags":["Global","Class"]},{"location":"menus/ControllerSelectMenu.html#sprite-getsprite","title":"Sprite GetSprite ( )","text":"","tags":["Global","Class"]},{"location":"menus/ControllerSelectMenu.html#getselectedelement","title":"GetSelectedElement ()","text":"","tags":["Global","Class"]},{"location":"menus/ControllerSelectMenu.html#int-getselectedelement","title":"int GetSelectedElement ( )","text":"","tags":["Global","Class"]},{"location":"menus/ControllerSelectMenu.html#setselectedelement","title":"SetSelectedElement ()","text":"","tags":["Global","Class"]},{"location":"menus/ControllerSelectMenu.html#void-setselectedelement-int-element","title":"void SetSelectedElement ( int Element )","text":"","tags":["Global","Class"]},{"location":"menus/CustomChallengeMenu.html","title":"Global Class \"CustomChallengeMenu\"","text":"Info <p>You can get this class by using the <code>CustomChallengeMenu</code> global table.</p> <p>Note that to call these functions, you must use a <code>.</code> (period) instead of a <code>:</code> (colon)!</p> Example Code <pre><code>local sprite = CustomChallengeMenu.GetSprite()\n</code></pre>","tags":["Global","Class"]},{"location":"menus/CustomChallengeMenu.html#functions","title":"Functions","text":"","tags":["Global","Class"]},{"location":"menus/CustomChallengeMenu.html#getsprite","title":"GetSprite ()","text":"","tags":["Global","Class"]},{"location":"menus/CustomChallengeMenu.html#sprite-getsprite","title":"Sprite GetSprite ( )","text":"","tags":["Global","Class"]},{"location":"menus/CustomChallengeMenu.html#getselectedchallengeid","title":"GetSelectedChallengeID ()","text":"","tags":["Global","Class"]},{"location":"menus/CustomChallengeMenu.html#int-getselectedchallengeid","title":"int GetSelectedChallengeID ( )","text":"","tags":["Global","Class"]},{"location":"menus/CustomChallengeMenu.html#setselectedchallengeid","title":"SetSelectedChallengeID ()","text":"","tags":["Global","Class"]},{"location":"menus/CustomChallengeMenu.html#void-setselectedchallengeid-int-challengeid","title":"void SetSelectedChallengeID ( int ChallengeID )","text":"","tags":["Global","Class"]},{"location":"menus/CutscenesMenu.html","title":"Global Class \"CutscenesMenu\"","text":"Info <p>You can get this class by using the <code>CutscenesMenu</code> global table.</p> <p>Note that to call these functions, you must use a <code>.</code> (period) instead of a <code>:</code> (colon)!</p> Example Code <pre><code>local sprite = CutscenesMenu.GetSprite()\n</code></pre>","tags":["Global","Class"]},{"location":"menus/CutscenesMenu.html#functions","title":"Functions","text":"","tags":["Global","Class"]},{"location":"menus/CutscenesMenu.html#getsprite","title":"GetSprite ()","text":"","tags":["Global","Class"]},{"location":"menus/CutscenesMenu.html#sprite-getsprite","title":"Sprite GetSprite ( )","text":"","tags":["Global","Class"]},{"location":"menus/CutscenesMenu.html#getselectedelement","title":"GetSelectedElement ()","text":"","tags":["Global","Class"]},{"location":"menus/CutscenesMenu.html#int-getselectedelement","title":"int GetSelectedElement ( )","text":"","tags":["Global","Class"]},{"location":"menus/CutscenesMenu.html#setselectedelement","title":"SetSelectedElement ()","text":"","tags":["Global","Class"]},{"location":"menus/CutscenesMenu.html#void-setselectedelement-int-element","title":"void SetSelectedElement ( int Element )","text":"","tags":["Global","Class"]},{"location":"menus/DailyChallengeMenu.html","title":"Global Class \"DailyChallengeMenu\"","text":"Info <p>You can get this class by using the <code>DailyChallengeMenu</code> global table.</p> <p>Note that to call these functions, you must use a <code>.</code> (period) instead of a <code>:</code> (colon)!</p> Example Code <pre><code>local sprite = DailyChallengeMenu.GetSprite()\n</code></pre>","tags":["Global","Class"]},{"location":"menus/DailyChallengeMenu.html#functions","title":"Functions","text":"","tags":["Global","Class"]},{"location":"menus/DailyChallengeMenu.html#getsprite","title":"GetSprite ()","text":"","tags":["Global","Class"]},{"location":"menus/DailyChallengeMenu.html#sprite-getsprite","title":"Sprite GetSprite ( )","text":"","tags":["Global","Class"]},{"location":"menus/DailyChallengeMenu.html#getleaderboardsprite","title":"GetLeaderboardSprite ()","text":"","tags":["Global","Class"]},{"location":"menus/DailyChallengeMenu.html#sprite-getleaderboardsprite","title":"Sprite GetLeaderboardSprite ( )","text":"","tags":["Global","Class"]},{"location":"menus/DailyChallengeMenu.html#getleaderboardscoremenusprite","title":"GetLeaderboardScoreMenuSprite ()","text":"","tags":["Global","Class"]},{"location":"menus/DailyChallengeMenu.html#sprite-getleaderboardscoremenusprite","title":"Sprite GetLeaderboardScoreMenuSprite ( )","text":"","tags":["Global","Class"]},{"location":"menus/DailyChallengeMenu.html#getselectedelement","title":"GetSelectedElement ()","text":"","tags":["Global","Class"]},{"location":"menus/DailyChallengeMenu.html#int-getselectedelement","title":"int GetSelectedElement ( )","text":"","tags":["Global","Class"]},{"location":"menus/DailyChallengeMenu.html#gettimelefthours","title":"GetTimeLeftHours ()","text":"","tags":["Global","Class"]},{"location":"menus/DailyChallengeMenu.html#int-gettimelefthours","title":"int GetTimeLeftHours ( )","text":"","tags":["Global","Class"]},{"location":"menus/DailyChallengeMenu.html#gettimeleftminutes","title":"GetTimeLeftMinutes ()","text":"","tags":["Global","Class"]},{"location":"menus/DailyChallengeMenu.html#int-gettimeleftminutes","title":"int GetTimeLeftMinutes ( )","text":"","tags":["Global","Class"]},{"location":"menus/DailyChallengeMenu.html#gettimeleftseconds","title":"GetTimeLeftSeconds ()","text":"","tags":["Global","Class"]},{"location":"menus/DailyChallengeMenu.html#int-gettimeleftseconds","title":"int GetTimeLeftSeconds ( )","text":"","tags":["Global","Class"]},{"location":"menus/DailyChallengeMenu.html#isleaderboardvisible","title":"IsLeaderboardVisible ()","text":"","tags":["Global","Class"]},{"location":"menus/DailyChallengeMenu.html#boolean-isleaderboardvisible","title":"boolean IsLeaderboardVisible ( )","text":"","tags":["Global","Class"]},{"location":"menus/DailyChallengeMenu.html#setselectedelement","title":"SetSelectedElement ()","text":"","tags":["Global","Class"]},{"location":"menus/DailyChallengeMenu.html#void-setselectedelement-int-elementid","title":"void SetSelectedElement ( int ElementID )","text":"","tags":["Global","Class"]},{"location":"menus/KeyConfigMenu.html","title":"Global Class \"KeyConfigMenu\"","text":"Info <p>You can get this class by using the <code>KeyConfigMenu</code> global table.</p> <p>Note that to call these functions, you must use a <code>.</code> (period) instead of a <code>:</code> (colon)!</p> Example Code <pre><code>local sprite = KeyConfigMenu.GetSprite()\n</code></pre>","tags":["Global","Class"]},{"location":"menus/KeyConfigMenu.html#functions","title":"Functions","text":"","tags":["Global","Class"]},{"location":"menus/KeyConfigMenu.html#getsprite","title":"GetSprite ()","text":"","tags":["Global","Class"]},{"location":"menus/KeyConfigMenu.html#sprite-getsprite","title":"Sprite GetSprite ( )","text":"","tags":["Global","Class"]},{"location":"menus/KeyConfigMenu.html#getselectedcolumn","title":"GetSelectedColumn ()","text":"","tags":["Global","Class"]},{"location":"menus/KeyConfigMenu.html#int-getselectedcolumn","title":"int GetSelectedColumn ( )","text":"","tags":["Global","Class"]},{"location":"menus/KeyConfigMenu.html#getselectedelement","title":"GetSelectedElement ()","text":"","tags":["Global","Class"]},{"location":"menus/KeyConfigMenu.html#int-getselectedelement","title":"int GetSelectedElement ( )","text":"","tags":["Global","Class"]},{"location":"menus/KeyConfigMenu.html#setselectedcolumn","title":"SetSelectedColumn ()","text":"","tags":["Global","Class"]},{"location":"menus/KeyConfigMenu.html#void-setselectedcolumn-int-column","title":"void SetSelectedColumn ( int Column )","text":"","tags":["Global","Class"]},{"location":"menus/KeyConfigMenu.html#setselectedelement","title":"SetSelectedElement ()","text":"","tags":["Global","Class"]},{"location":"menus/KeyConfigMenu.html#void-setselectedelement-int-element","title":"void SetSelectedElement ( int Element )","text":"","tags":["Global","Class"]},{"location":"menus/KeyConfigMenu.html#iseditactive","title":"IsEditActive ()","text":"","tags":["Global","Class"]},{"location":"menus/KeyConfigMenu.html#boolean-iseditactive","title":"boolean IsEditActive ( )","text":"","tags":["Global","Class"]},{"location":"menus/MainMenu.html","title":"Global Class \"MainMenu\"","text":"Info <p>You can get this class by using the <code>MainMenu</code> global table.</p> <p>Note that to call these functions, you must use a <code>.</code> (period) instead of a <code>:</code> (colon)!</p> Example Code <pre><code>local sprite = MainMenu.GetGameMenuSprite()\n</code></pre>","tags":["Global","Class"]},{"location":"menus/MainMenu.html#functions","title":"Functions","text":"","tags":["Global","Class"]},{"location":"menus/MainMenu.html#getcontinuewidgetsprite","title":"GetContinueWidgetSprite ()","text":"","tags":["Global","Class"]},{"location":"menus/MainMenu.html#sprite-getcontinuewidgetsprite","title":"Sprite GetContinueWidgetSprite ( )","text":"","tags":["Global","Class"]},{"location":"menus/MainMenu.html#getgamemenusprite","title":"GetGameMenuSprite ()","text":"","tags":["Global","Class"]},{"location":"menus/MainMenu.html#sprite-getgamemenusprite","title":"Sprite GetGameMenuSprite ( )","text":"","tags":["Global","Class"]},{"location":"menus/MainMenu.html#getselectedelement","title":"GetSelectedElement ()","text":"","tags":["Global","Class"]},{"location":"menus/MainMenu.html#int-getselectedelement","title":"int GetSelectedElement ( )","text":"","tags":["Global","Class"]},{"location":"menus/MainMenu.html#setselectedelement","title":"SetSelectedElement ()","text":"","tags":["Global","Class"]},{"location":"menus/MainMenu.html#void-setselectedelement-int-element","title":"void SetSelectedElement ( int Element )","text":"","tags":["Global","Class"]},{"location":"menus/MenuManager.html","title":"Global Class \"MenuManager\"","text":"Info <p>You can get this class by using the <code>MenuManager</code> global table.</p> <p>Note that to call these functions, you must use a <code>.</code> (period) instead of a <code>:</code> (colon)!</p> Example Code <pre><code>local sprite = MenuManager.GetBackWidgetSprite()\n</code></pre>","tags":["Global","Class"]},{"location":"menus/MenuManager.html#functions","title":"Functions","text":"","tags":["Global","Class"]},{"location":"menus/MenuManager.html#getactivemenu","title":"GetActiveMenu ()","text":"","tags":["Global","Class"]},{"location":"menus/MenuManager.html#mainmenutype-getactivemenu","title":"MainMenuType GetActiveMenu ( )","text":"<p>Returns the MainMenuType of the currently active (visible) section of the main menu.</p>","tags":["Global","Class"]},{"location":"menus/MenuManager.html#getbackwidgetsprite","title":"GetBackWidgetSprite ()","text":"","tags":["Global","Class"]},{"location":"menus/MenuManager.html#sprite-getbackwidgetsprite","title":"Sprite GetBackWidgetSprite ( )","text":"","tags":["Global","Class"]},{"location":"menus/MenuManager.html#getcolormodifierlerpamount","title":"GetColorModifierLerpAmount ()","text":"","tags":["Global","Class"]},{"location":"menus/MenuManager.html#colormodifier-getcolormodifierlerpamount","title":"ColorModifier GetColorModifierLerpAmount ( )","text":"Info <p>This is formatted as the absolute rate of change (ie, all values are positive).</p>","tags":["Global","Class"]},{"location":"menus/MenuManager.html#getcurrentcolormodifier","title":"GetCurrentColorModifier ()","text":"","tags":["Global","Class"]},{"location":"menus/MenuManager.html#colormodifier-getcurrentcolormodifier","title":"ColorModifier GetCurrentColorModifier ( )","text":"","tags":["Global","Class"]},{"location":"menus/MenuManager.html#getinputmask","title":"GetInputMask ()","text":"","tags":["Global","Class"]},{"location":"menus/MenuManager.html#buttonactionbitwise-getinputmask","title":"ButtonActionBitwise GetInputMask ( )","text":"<p>Returns the input mask of allowed inputs on the main menu.</p>","tags":["Global","Class"]},{"location":"menus/MenuManager.html#getselectwidgetsprite","title":"GetSelectWidgetSprite ()","text":"","tags":["Global","Class"]},{"location":"menus/MenuManager.html#sprite-getselectwidgetsprite","title":"Sprite GetSelectWidgetSprite ( )","text":"","tags":["Global","Class"]},{"location":"menus/MenuManager.html#getshadowsprite","title":"GetShadowSprite ()","text":"","tags":["Global","Class"]},{"location":"menus/MenuManager.html#sprite-getshadowsprite","title":"Sprite GetShadowSprite ( )","text":"<p>Shadow decoration that looks like isaacs head.</p>","tags":["Global","Class"]},{"location":"menus/MenuManager.html#gettargetcolormodifier","title":"GetTargetColorModifier ()","text":"","tags":["Global","Class"]},{"location":"menus/MenuManager.html#colormodifier-gettargetcolormodifier","title":"ColorModifier GetTargetColorModifier ( )","text":"","tags":["Global","Class"]},{"location":"menus/MenuManager.html#getviewposition","title":"GetViewPosition ()","text":"","tags":["Global","Class"]},{"location":"menus/MenuManager.html#vector-getviewposition","title":"Vector GetViewPosition ( )","text":"","tags":["Global","Class"]},{"location":"menus/MenuManager.html#setactivemenu","title":"SetActiveMenu ()","text":"","tags":["Global","Class"]},{"location":"menus/MenuManager.html#int-setactivemenu-mainmenutype-menu","title":"int SetActiveMenu (MainMenuType Menu )","text":"<p>Changes the active menu on the main menu to match the given <code>MainMenuType</code>.</p>","tags":["Global","Class"]},{"location":"menus/MenuManager.html#setcolormodifier","title":"SetColorModifier ()","text":"","tags":["Global","Class"]},{"location":"menus/MenuManager.html#void-setcolormodifier-colormodifier-colormodifier-boolean-lerp-true-float-rate-0015","title":"void SetColorModifier ( ColorModifier ColorModifier, boolean Lerp = true, float Rate = 0.015 )","text":"","tags":["Global","Class"]},{"location":"menus/MenuManager.html#setinputmask","title":"SetInputMask ()","text":"","tags":["Global","Class"]},{"location":"menus/MenuManager.html#void-setinputmask-buttonactionbitwise-inputmask","title":"void SetInputMask ( ButtonActionBitwise InputMask )","text":"<p>Sets the input mask of allowed inputs on the main menu. Useful for custom menus.</p>","tags":["Global","Class"]},{"location":"menus/MenuManager.html#setviewposition","title":"SetViewPosition ()","text":"","tags":["Global","Class"]},{"location":"menus/MenuManager.html#void-setviewposition-vector-position","title":"void SetViewPosition ( Vector Position )","text":"","tags":["Global","Class"]},{"location":"menus/ModsMenu.html","title":"Global Class \"ModsMenu\"","text":"Info <p>You can get this class by using the <code>ModsMenu</code> global table.</p> <p>Note that to call these functions, you must use a <code>.</code> (period) instead of a <code>:</code> (colon)!</p> Example Code <pre><code>local sprite = ModsMenu.GetSprite()\n</code></pre>","tags":["Global","Class"]},{"location":"menus/ModsMenu.html#functions","title":"Functions","text":"","tags":["Global","Class"]},{"location":"menus/ModsMenu.html#getsprite","title":"GetSprite ()","text":"","tags":["Global","Class"]},{"location":"menus/ModsMenu.html#sprite-getsprite","title":"Sprite GetSprite ( )","text":"","tags":["Global","Class"]},{"location":"menus/ModsMenu.html#getselectedelement","title":"GetSelectedElement ()","text":"","tags":["Global","Class"]},{"location":"menus/ModsMenu.html#int-getselectedelement","title":"int GetSelectedElement ( )","text":"","tags":["Global","Class"]},{"location":"menus/ModsMenu.html#setselectedelement","title":"SetSelectedElement ()","text":"","tags":["Global","Class"]},{"location":"menus/ModsMenu.html#void-setselectedelement-int-element","title":"void SetSelectedElement ( int Element )","text":"","tags":["Global","Class"]},{"location":"menus/ModsMenu.html#waslistedited","title":"WasListEdited ()","text":"","tags":["Global","Class"]},{"location":"menus/ModsMenu.html#boolean-waslistedited","title":"boolean WasListEdited ( )","text":"","tags":["Global","Class"]},{"location":"menus/OptionsMenu.html","title":"Global Class \"OptionsMenu\"","text":"Info <p>You can get this class by using the <code>OptionsMenu</code> global table.</p> <p>Note that to call these functions, you must use a <code>.</code> (period) instead of a <code>:</code> (colon)!</p> Example Code <pre><code>local sprite = OptionsMenu.GetGammaWidgetSprite()\n</code></pre>","tags":["Global","Class"]},{"location":"menus/OptionsMenu.html#functions","title":"Functions","text":"","tags":["Global","Class"]},{"location":"menus/OptionsMenu.html#getgammawidgetsprite","title":"GetGammaWidgetSprite ()","text":"","tags":["Global","Class"]},{"location":"menus/OptionsMenu.html#sprite-getgammawidgetsprite","title":"Sprite GetGammaWidgetSprite ( )","text":"","tags":["Global","Class"]},{"location":"menus/OptionsMenu.html#getoptionsmenusprite","title":"GetOptionsMenuSprite ()","text":"","tags":["Global","Class"]},{"location":"menus/OptionsMenu.html#sprite-getoptionsmenusprite","title":"Sprite GetOptionsMenuSprite ( )","text":"","tags":["Global","Class"]},{"location":"menus/OptionsMenu.html#getselectedelement","title":"GetSelectedElement ()","text":"","tags":["Global","Class"]},{"location":"menus/OptionsMenu.html#int-getselectedelement","title":"int GetSelectedElement ( )","text":"","tags":["Global","Class"]},{"location":"menus/OptionsMenu.html#setselectedelement","title":"SetSelectedElement ()","text":"","tags":["Global","Class"]},{"location":"menus/OptionsMenu.html#void-setselectedelement-int-element","title":"void SetSelectedElement ( int Element )","text":"","tags":["Global","Class"]},{"location":"menus/PauseMenu.html","title":"Global Class \"PauseMenu\"","text":"Info <p>You can get this class by using the <code>PauseMenu</code> global table.</p> <p>Note that to call these functions, you must use a <code>.</code> (period) instead of a <code>:</code> (colon)!</p> Example Code <pre><code>local sprite = PauseMenu.GetSprite()\n</code></pre>","tags":["Global","Class"]},{"location":"menus/PauseMenu.html#functions","title":"Functions","text":"","tags":["Global","Class"]},{"location":"menus/PauseMenu.html#getcompletionmarkssprite","title":"GetCompletionMarksSprite ()","text":"","tags":["Global","Class"]},{"location":"menus/PauseMenu.html#sprite-getcompletionmarkssprite","title":"Sprite GetCompletionMarksSprite ( )","text":"","tags":["Global","Class"]},{"location":"menus/PauseMenu.html#getmystuffsprite","title":"GetMyStuffSprite ()","text":"","tags":["Global","Class"]},{"location":"menus/PauseMenu.html#sprite-getmystuffsprite","title":"Sprite GetMyStuffSprite ( )","text":"","tags":["Global","Class"]},{"location":"menus/PauseMenu.html#getselectedelement","title":"GetSelectedElement ()","text":"","tags":["Global","Class"]},{"location":"menus/PauseMenu.html#int-getselectedelement","title":"int GetSelectedElement ( )","text":"","tags":["Global","Class"]},{"location":"menus/PauseMenu.html#getsprite","title":"GetSprite ()","text":"","tags":["Global","Class"]},{"location":"menus/PauseMenu.html#sprite-getsprite","title":"Sprite GetSprite ( )","text":"","tags":["Global","Class"]},{"location":"menus/PauseMenu.html#getstatssprite","title":"GetStatsSprite ()","text":"","tags":["Global","Class"]},{"location":"menus/PauseMenu.html#sprite-getstatssprite","title":"Sprite GetStatsSprite ( )","text":"","tags":["Global","Class"]},{"location":"menus/PauseMenu.html#getstate","title":"GetState ()","text":"","tags":["Global","Class"]},{"location":"menus/PauseMenu.html#pausemenustate-getstate","title":"PauseMenuState GetState ( )","text":"","tags":["Global","Class"]},{"location":"menus/PauseMenu.html#setselectedelement","title":"SetSelectedElement ()","text":"","tags":["Global","Class"]},{"location":"menus/PauseMenu.html#void-setselectedelement-int-element","title":"void SetSelectedElement ( int Element )","text":"","tags":["Global","Class"]},{"location":"menus/PauseMenu.html#setstate","title":"SetState ()","text":"","tags":["Global","Class"]},{"location":"menus/PauseMenu.html#void-setstate-pausemenustate-state","title":"void SetState ( PauseMenuState State )","text":"","tags":["Global","Class"]},{"location":"menus/SaveMenu.html","title":"Global Class \"SaveMenu\"","text":"Info <p>You can get this class by using the <code>SaveMenu</code> global table.</p> <p>Note that to call these functions, you must use a <code>.</code> (period) instead of a <code>:</code> (colon)!</p> Example Code <pre><code>local sprite = SaveMenu.GetSaveSelectMenuSprite()\n</code></pre>","tags":["Global","Class"]},{"location":"menus/SaveMenu.html#functions","title":"Functions","text":"","tags":["Global","Class"]},{"location":"menus/SaveMenu.html#getsaveselectionmenusprite","title":"GetSaveSelectionMenuSprite ()","text":"","tags":["Global","Class"]},{"location":"menus/SaveMenu.html#sprite-getsaveselectmenusprite","title":"Sprite GetSaveSelectMenuSprite ( )","text":"","tags":["Global","Class"]},{"location":"menus/SaveMenu.html#getdeletebuttonsprite","title":"GetDeleteButtonSprite ()","text":"","tags":["Global","Class"]},{"location":"menus/SaveMenu.html#sprite-getdeletebuttonsprite","title":"Sprite GetDeleteButtonSprite ( )","text":"","tags":["Global","Class"]},{"location":"menus/SaveMenu.html#getdeletepopupsprite","title":"GetDeletePopupSprite ()","text":"","tags":["Global","Class"]},{"location":"menus/SaveMenu.html#sprite-getdeletepopupsprite","title":"Sprite GetDeletePopupSprite ( )","text":"","tags":["Global","Class"]},{"location":"menus/SaveMenu.html#getsave1drawingsprite","title":"GetSave1DrawingSprite ()","text":"","tags":["Global","Class"]},{"location":"menus/SaveMenu.html#sprite-getsave1drawingsprite","title":"Sprite GetSave1DrawingSprite ( )","text":"","tags":["Global","Class"]},{"location":"menus/SaveMenu.html#getsave2drawingsprite","title":"GetSave2DrawingSprite ()","text":"","tags":["Global","Class"]},{"location":"menus/SaveMenu.html#sprite-getsave2drawingsprite","title":"Sprite GetSave2DrawingSprite ( )","text":"","tags":["Global","Class"]},{"location":"menus/SaveMenu.html#getsave3drawingsprite","title":"GetSave3DrawingSprite ()","text":"","tags":["Global","Class"]},{"location":"menus/SaveMenu.html#sprite-getsave3drawingsprite","title":"Sprite GetSave3DrawingSprite ( )","text":"","tags":["Global","Class"]},{"location":"menus/SaveMenu.html#getselectedelement","title":"GetSelectedElement ()","text":"","tags":["Global","Class"]},{"location":"menus/SaveMenu.html#int-getselectedelement","title":"int GetSelectedElement ( )","text":"","tags":["Global","Class"]},{"location":"menus/SaveMenu.html#isdeleteactive","title":"IsDeleteActive ()","text":"","tags":["Global","Class"]},{"location":"menus/SaveMenu.html#boolean-isdeleteactive","title":"boolean IsDeleteActive ( )","text":"","tags":["Global","Class"]},{"location":"menus/SaveMenu.html#setselectedelement","title":"SetSelectedElement ()","text":"","tags":["Global","Class"]},{"location":"menus/SaveMenu.html#void-setselectedelement-int-element","title":"void SetSelectedElement ( int Element )","text":"","tags":["Global","Class"]},{"location":"menus/SpecialSeedsMenu.html","title":"Global Class \"SpecialSeedsMenu\"","text":"Info <p>You can get this class by using the <code>SpecialSeedsMenu</code> global table.</p> <p>Note that to call these functions, you must use a <code>.</code> (period) instead of a <code>:</code> (colon)!</p> Example Code <pre><code>local sprite = SpecialSeedsMenu.GetSprite()\n</code></pre>","tags":["Global","Class"]},{"location":"menus/SpecialSeedsMenu.html#functions","title":"Functions","text":"","tags":["Global","Class"]},{"location":"menus/SpecialSeedsMenu.html#getsprite","title":"GetSprite ()","text":"","tags":["Global","Class"]},{"location":"menus/SpecialSeedsMenu.html#sprite-getsprite","title":"Sprite GetSprite ( )","text":"","tags":["Global","Class"]},{"location":"menus/SpecialSeedsMenu.html#getselectedelement","title":"GetSelectedElement ()","text":"","tags":["Global","Class"]},{"location":"menus/SpecialSeedsMenu.html#int-getselectedelement","title":"int GetSelectedElement ( )","text":"","tags":["Global","Class"]},{"location":"menus/SpecialSeedsMenu.html#setselectedelement","title":"SetSelectedElement ()","text":"","tags":["Global","Class"]},{"location":"menus/SpecialSeedsMenu.html#void-setselectedelement-int-element","title":"void SetSelectedElement ( int Element )","text":"","tags":["Global","Class"]},{"location":"menus/StatsMenu.html","title":"Global Class \"StatsMenu\"","text":"Info <p>You can get this class by using the <code>StatsMenu</code> global table.</p> <p>Note that to call these functions, you must use a <code>.</code> (period) instead of a <code>:</code> (colon)!</p> Example Code <pre><code>local sprite = StatsMenu.GetSecretsMenuSprite()\n</code></pre>","tags":["Global","Class"]},{"location":"menus/StatsMenu.html#functions","title":"Functions","text":"","tags":["Global","Class"]},{"location":"menus/StatsMenu.html#getsecretsmenusprite","title":"GetSecretsMenuSprite ()","text":"","tags":["Global","Class"]},{"location":"menus/StatsMenu.html#sprite-getsecretsmenusprite","title":"Sprite GetSecretsMenuSprite ( )","text":"","tags":["Global","Class"]},{"location":"menus/StatsMenu.html#getsecretsmenucursorleftsprite","title":"GetSecretsMenuCursorLeftSprite ()","text":"","tags":["Global","Class"]},{"location":"menus/StatsMenu.html#sprite-getsecretsmenucursorleftsprite","title":"Sprite GetSecretsMenuCursorLeftSprite ( )","text":"","tags":["Global","Class"]},{"location":"menus/StatsMenu.html#getsecretsmenucursorrightsprite","title":"GetSecretsMenuCursorRightSprite ()","text":"","tags":["Global","Class"]},{"location":"menus/StatsMenu.html#sprite-getsecretsmenucursorrightsprite","title":"Sprite GetSecretsMenuCursorRightSprite ( )","text":"","tags":["Global","Class"]},{"location":"menus/StatsMenu.html#getsecretsmenuminisprite1","title":"GetSecretsMenuMiniSprite1 ()","text":"","tags":["Global","Class"]},{"location":"menus/StatsMenu.html#sprite-getsecretsmenuminisprite1","title":"Sprite GetSecretsMenuMiniSprite1 ( )","text":"<p>Used for left scroll transition animation.</p>","tags":["Global","Class"]},{"location":"menus/StatsMenu.html#getsecretsmenuminisprite2","title":"GetSecretsMenuMiniSprite2 ()","text":"","tags":["Global","Class"]},{"location":"menus/StatsMenu.html#sprite-getsecretsmenuminisprite2","title":"Sprite GetSecretsMenuMiniSprite2 ( )","text":"","tags":["Global","Class"]},{"location":"menus/StatsMenu.html#getsecretsmenuminisprite3","title":"GetSecretsMenuMiniSprite3 ()","text":"","tags":["Global","Class"]},{"location":"menus/StatsMenu.html#sprite-getsecretsmenuminisprite3","title":"Sprite GetSecretsMenuMiniSprite3 ( )","text":"","tags":["Global","Class"]},{"location":"menus/StatsMenu.html#getsecretsmenuminisprite4","title":"GetSecretsMenuMiniSprite4 ()","text":"","tags":["Global","Class"]},{"location":"menus/StatsMenu.html#sprite-getsecretsmenuminisprite4","title":"Sprite GetSecretsMenuMiniSprite4 ( )","text":"","tags":["Global","Class"]},{"location":"menus/StatsMenu.html#getsecretsmenuminisprite5","title":"GetSecretsMenuMiniSprite5 ()","text":"","tags":["Global","Class"]},{"location":"menus/StatsMenu.html#sprite-getsecretsmenuminisprite5","title":"Sprite GetSecretsMenuMiniSprite5 ( )","text":"<p>Center mini paper. Used to display currently highlighted achievement.</p>","tags":["Global","Class"]},{"location":"menus/StatsMenu.html#getsecretsmenuminisprite6","title":"GetSecretsMenuMiniSprite6 ()","text":"","tags":["Global","Class"]},{"location":"menus/StatsMenu.html#sprite-getsecretsmenuminisprite6","title":"Sprite GetSecretsMenuMiniSprite6 ( )","text":"","tags":["Global","Class"]},{"location":"menus/StatsMenu.html#getsecretsmenuminisprite7","title":"GetSecretsMenuMiniSprite7 ()","text":"","tags":["Global","Class"]},{"location":"menus/StatsMenu.html#sprite-getsecretsmenuminisprite7","title":"Sprite GetSecretsMenuMiniSprite7 ( )","text":"","tags":["Global","Class"]},{"location":"menus/StatsMenu.html#getsecretsmenuminisprite8","title":"GetSecretsMenuMiniSprite8 ()","text":"","tags":["Global","Class"]},{"location":"menus/StatsMenu.html#sprite-getsecretsmenuminisprite8","title":"Sprite GetSecretsMenuMiniSprite8 ( )","text":"","tags":["Global","Class"]},{"location":"menus/StatsMenu.html#getsecretsmenuminisprite9","title":"GetSecretsMenuMiniSprite9 ()","text":"","tags":["Global","Class"]},{"location":"menus/StatsMenu.html#sprite-getsecretsmenuminisprite9","title":"Sprite GetSecretsMenuMiniSprite9 ( )","text":"<p>Used for right scroll transition animation.</p>","tags":["Global","Class"]},{"location":"menus/StatsMenu.html#getselectedelement","title":"GetSelectedElement ()","text":"","tags":["Global","Class"]},{"location":"menus/StatsMenu.html#int-getselectedelement","title":"int GetSelectedElement ( )","text":"","tags":["Global","Class"]},{"location":"menus/StatsMenu.html#getstatsmenusprite","title":"GetStatsMenuSprite ()","text":"","tags":["Global","Class"]},{"location":"menus/StatsMenu.html#sprite-getstatsmenusprite","title":"Sprite GetStatsMenuSprite ( )","text":"","tags":["Global","Class"]},{"location":"menus/StatsMenu.html#issecretsmenuvisible","title":"IsSecretsMenuVisible ()","text":"","tags":["Global","Class"]},{"location":"menus/StatsMenu.html#boolean-issecretsmenuvisible","title":"boolean IsSecretsMenuVisible ( )","text":"","tags":["Global","Class"]},{"location":"menus/StatsMenu.html#setselectedelement","title":"SetSelectedElement ()","text":"","tags":["Global","Class"]},{"location":"menus/StatsMenu.html#void-setselectedelement-int-element","title":"void SetSelectedElement ( int Element )","text":"","tags":["Global","Class"]},{"location":"menus/TitleMenu.html","title":"Global Class \"TitleMenu\"","text":"Info <p>You can get this class by using the <code>TitleMenu</code> global table.</p> <p>Note that to call these functions, you must use a <code>.</code> (period) instead of a <code>:</code> (colon)!</p> Example Code <pre><code>local sprite = TitleMenu.GetSprite()\n</code></pre>","tags":["Global","Class"]},{"location":"menus/TitleMenu.html#functions","title":"Functions","text":"","tags":["Global","Class"]},{"location":"menus/TitleMenu.html#getsprite","title":"GetSprite ()","text":"","tags":["Global","Class"]},{"location":"menus/TitleMenu.html#sprite-getsprite","title":"Sprite GetSprite ( )","text":"","tags":["Global","Class"]},{"location":"renderer/Beam.html","title":"Class \"Beam\"","text":"<p>An example mod using the Beam class can be found here.</p> <p>This class provides more streamlined access to the <code>BeamRenderer</code> used internally for rendering cords, ie Evis, Gello, Vis Fatty, etc. Note that this is a low-level class that strictly handles rendering. We hope to later provide an extension of this class capable of handling the physics calculations and automatic point adjustment required for cords, but this is a complex system that will require a non-trivial amount of effort to implement.</p>","tags":["Class"]},{"location":"renderer/Beam.html#constructors","title":"Constructors","text":"","tags":["Class"]},{"location":"renderer/Beam.html#beam","title":"Beam ()","text":"","tags":["Class"]},{"location":"renderer/Beam.html#beam-beam-sprite-sprite-int-layer-boolean-useoverlay-boolean-unkbool","title":"Beam Beam ( Sprite Sprite, int Layer, boolean UseOverlay, boolean UnkBool )","text":"","tags":["Class"]},{"location":"renderer/Beam.html#beam-beam-sprite-sprite-string-layername-boolean-useoverlay-boolean-unkbool","title":"Beam Beam ( Sprite Sprite, string LayerName, boolean UseOverlay, boolean UnkBool )","text":"Warning <p>The <code>Sprite</code> used in the constructor is copied to Beam as a separate object. To acccess the new copy and make changes to it, use <code>Beam:GetSprite</code>.</p> Example Code <p>Here is an example of how you would use this class:</p> <pre><code>local spritesheetHeight = 64\n\nlocal sprite = Sprite()\nsprite:Load(\"gfx/1000.193_anima chain.anm2\", true)\nsprite:Play(\"Idle\", false)\n\nlocal layer = sprite:GetLayer(\"chain\")\n\nlocal chain = Beam(sprite, \"chain\", false, false)\n\nmod:AddCallback(ModCallbacks.MC_PRE_PLAYER_RENDER, function(_, player)\n    local origin = Isaac.WorldToScreen(Game():GetRoom():GetCenterPos())\n    local target = Isaac.WorldToScreen(player.Position)\n    local coord = target:Distance(origin)\n    chain:Add(origin,0)\n    chain:Add(target,coord)\n    chain:Render()\nend)\n</code></pre>","tags":["Class"]},{"location":"renderer/Beam.html#functions","title":"Functions","text":"","tags":["Class"]},{"location":"renderer/Beam.html#add","title":"Add ()","text":"","tags":["Class"]},{"location":"renderer/Beam.html#void-add-vector-position-float-spritesheetcoordinate-float-width-10","title":"void Add ( Vector Position, float SpritesheetCoordinate, float Width = 1.0 )","text":"","tags":["Class"]},{"location":"renderer/Beam.html#void-add-point-point","title":"void Add ( Point Point )","text":"<p>Adds a point to the beam. Points are stored in order of adding.</p> Info <p><code>SpritesheetCoordinate</code> is the <code>Y</code> position of the spritesheet that should be drawn by the time this Point is reached. For example, two points of <code>0</code> and <code>64</code> SpritesheetCoordinate will render the spritesheet starting from <code>y 0</code> to <code>y 64</code>, while an additional third point of <code>0</code> will draw it in reverse from <code>y 64</code> to <code>y 0</code>. <code>Width</code> acts as a multiplier for how wide the beam should be. A non-zero value will scale the spritesheet width accordingly. This is interpolated between points.</p>","tags":["Class"]},{"location":"renderer/Beam.html#getlayer","title":"GetLayer ()","text":"","tags":["Class"]},{"location":"renderer/Beam.html#int-getlayer","title":"int GetLayer ( )","text":"","tags":["Class"]},{"location":"renderer/Beam.html#getpoints","title":"GetPoints ()","text":"","tags":["Class"]},{"location":"renderer/Beam.html#point-getpoints","title":"Point[] GetPoints ( )","text":"<p>Returns a table of the Points currently stored.</p>","tags":["Class"]},{"location":"renderer/Beam.html#getsprite","title":"GetSprite ()","text":"","tags":["Class"]},{"location":"renderer/Beam.html#sprite-getsprite","title":"Sprite GetSprite ( )","text":"","tags":["Class"]},{"location":"renderer/Beam.html#getunkbool","title":"GetUnkBool ()","text":"","tags":["Class"]},{"location":"renderer/Beam.html#boolean-getunkbool","title":"boolean GetUnkBool ( )","text":"","tags":["Class"]},{"location":"renderer/Beam.html#getuseoverlay","title":"GetUseOverlay ()","text":"","tags":["Class"]},{"location":"renderer/Beam.html#boolean-getuseoverlay","title":"boolean GetUseOverlay ( )","text":"","tags":["Class"]},{"location":"renderer/Beam.html#render","title":"Render ()","text":"","tags":["Class"]},{"location":"renderer/Beam.html#void-render-boolean-clearpoints-true","title":"void Render ( boolean ClearPoints = true )","text":"","tags":["Class"]},{"location":"renderer/Beam.html#setlayer","title":"SetLayer ()","text":"","tags":["Class"]},{"location":"renderer/Beam.html#void-setlayer-int-layerid","title":"void SetLayer ( int LayerID )","text":"","tags":["Class"]},{"location":"renderer/Beam.html#void-setlayer-string-layername","title":"void SetLayer ( string LayerName )","text":"","tags":["Class"]},{"location":"renderer/Beam.html#setpoints","title":"SetPoints ()","text":"","tags":["Class"]},{"location":"renderer/Beam.html#void-setpoints-point-points","title":"void SetPoints ( Point[] Points )","text":"<p>Sets the Points used by this.</p>","tags":["Class"]},{"location":"renderer/Beam.html#setsprite","title":"SetSprite ()","text":"","tags":["Class"]},{"location":"renderer/Beam.html#void-setsprite-sprite-sprite","title":"void SetSprite ( Sprite Sprite )","text":"","tags":["Class"]},{"location":"renderer/Beam.html#void-setsprite-sprite-sprite-string-layername-bool-useoverlay","title":"void SetSprite ( Sprite Sprite, string LayerName, bool UseOverlay )","text":"","tags":["Class"]},{"location":"renderer/Beam.html#void-setsprite-sprite-sprite-int-layerid-bool-useoverlay","title":"void SetSprite ( Sprite Sprite, int LayerID, bool UseOverlay )","text":"","tags":["Class"]},{"location":"renderer/Beam.html#setunkbool","title":"SetUnkBool ()","text":"","tags":["Class"]},{"location":"renderer/Beam.html#void-setunkbool-boolean-unkbool","title":"void SetUnkBool ( boolean UnkBool )","text":"","tags":["Class"]},{"location":"renderer/Beam.html#setuseoverlay","title":"SetUseOverlay ()","text":"","tags":["Class"]},{"location":"renderer/Beam.html#void-setuseoverlay-boolean-useoverlay","title":"void SetUseOverlay ( boolean UseOverlay )","text":"","tags":["Class"]},{"location":"renderer/BlendMode.html","title":"Class \"BlendMode\"","text":"<p>Determines how a LayerState should blend with the elements rendered behind it. Specifically, these parameters are used in calls to glBlendFuncSeparate.</p> Info <p>You can get this class by using the following functions:</p> <ul> <li>LayerState:GetBlendMode()</li> </ul> Example Code <pre><code>local blendMode = Sprite():GetLayer(0):GetBlendMode()\n</code></pre>","tags":["Class"]},{"location":"renderer/BlendMode.html#functions","title":"Functions","text":"","tags":["Class"]},{"location":"renderer/BlendMode.html#setmode","title":"SetMode ()","text":"","tags":["Class"]},{"location":"renderer/BlendMode.html#void-setmode-blendtype-type","title":"void SetMode ( BlendType Type )","text":"Mode usages <p>The game uses:</p> <ul> <li><code>CONSTANT</code> for the flat blue Planetarium backdrop layer and the flat color layers of the Hell backdrop</li> <li><code>NORMAL</code> as the default value</li> <li><code>ADDITIVE</code> for Planetarium backdrop starfield layers, <code>8bitclouds_utero</code> backdrop layer, the <code>lava_add</code> layer of the Hell backdrop, Beast death spotlight, and various other misc effects</li> <li><code>MULTIPLICATIVE</code> for EffectVariant.HALO (specifically the one used by Cursed Death's Head), EffectVariant.PURGATORY, and the <code>lava_multiply</code> layer of the Hell backdrop</li> <li><code>OVERLAY</code> for EffectVariant.HUSH_ASHES &amp; the overlay layer of the Boss Intro versus Sprite</li> </ul> Nonstandard modes <p>There have also been a couple nonstandard modes seen used for specific situations:</p> <ul> <li>EffectVariant.BACKDROP_DECORATION, as used by Mother for the fake backdrop wall, uses <code>{ RGBSourceFactor.ZERO, RGBDestinationFactor.SRC_COLOR, AlphaSourceFactor.ONE, AlphaDestinationFactor.ONE }</code></li> <li>Light rendering uses <code>{ RGBSourceFactor.DST_COLOR, RGBDestinationFactor.DST_ALPHA, AlphaSourceFactor.DST_COLOR, AlphaDestinationFactor.ONE_MINUS_SRC_ALPHA }</code></li> </ul>","tags":["Class"]},{"location":"renderer/BlendMode.html#variables","title":"Variables","text":"","tags":["Class"]},{"location":"renderer/BlendMode.html#alphadestinationfactor","title":"AlphaDestinationFactor","text":"","tags":["Class"]},{"location":"renderer/BlendMode.html#blendfactor-alphadestinationfactor","title":"BlendFactor AlphaDestinationFactor","text":"<p><code>ZERO</code> in mode <code>CONSTANT</code>, <code>ONE_MINUS_SRC_ALPHA</code> in mode <code>NORMAL</code> and <code>OVERLAY</code>, <code>ONE</code> in mode <code>ADDITIVE</code>, and <code>SRC_COLOR</code> in <code>MULTIPLICATIVE</code>.</p> Depreciation history <p>This variable was previously known as <code>Flag4</code>.</p>","tags":["Class"]},{"location":"renderer/BlendMode.html#alphasourcefactor","title":"AlphaSourceFactor","text":"","tags":["Class"]},{"location":"renderer/BlendMode.html#blendfactor-alphasourcefactor","title":"BlendFactor AlphaSourceFactor","text":"<p><code>ZERO</code> in mode <code>MULTIPLICATIVE</code>, <code>ONE</code> in all other modes.</p> Depreciation history <p>This variable was previously known as <code>Flag3</code>.</p>","tags":["Class"]},{"location":"renderer/BlendMode.html#rgbdestinationfactor","title":"RGBDestinationFactor","text":"","tags":["Class"]},{"location":"renderer/BlendMode.html#blendfactor-rgbdestinationfactor","title":"BlendFactor RGBDestinationFactor","text":"<p><code>ZERO</code> in mode <code>CONSTANT</code>, <code>ONE_MINUS_SRC_ALPHA</code> in mode <code>NORMAL</code> and <code>OVERLAY</code>, <code>ONE</code> in mode <code>ADDITIVE</code>, and <code>SRC_COLOR</code> in <code>MULTIPLICATIVE</code>.</p> Depreciation history <p>This variable was previously known as <code>Flag2</code>.</p>","tags":["Class"]},{"location":"renderer/BlendMode.html#rgbsourcefactor","title":"RGBSourceFactor","text":"","tags":["Class"]},{"location":"renderer/BlendMode.html#blendfactor-rgbsourcefactor","title":"BlendFactor RGBSourceFactor","text":"<p><code>ZERO</code> in mode <code>MULTIPLICATIVE</code>, <code>ONE</code> in all other modes (there's a possibility for this to be <code>SRC_ALPHA</code> if an internal <code>UsePremultipliedAlpha</code> variable in the graphics manager class isn't set, but this has not yet been observed)</p> Depreciation history <p>This variable was previously known as <code>Flag1</code>.</p>","tags":["Class"]},{"location":"renderer/CustomRendering.html","title":"Introduction","text":"<p>Custom rendering is a feature in Repentogon that gives you an extremely fine grained control over  what gets rendered by the game in any given frame. In particular, it allows you to run custom  shaders when the game renders individual objects, instead of being limited to running a shader on  the entire scene once it has been computed.</p>"},{"location":"renderer/CustomRendering.html#on-rendering","title":"On rendering","text":"<p>This section presents how the render system of the game works. It is not crucial to understand it,  but it can give some insight in case you get stuck on how to achieve something with the tools at your disposal in Repentogon.</p> <p>On the PC version of Repentance, the game uses OpenGL for rendering. I will assume that you have a  passing knowledge of OpenGL in this tutorial. If you wish to get familiar with it,  this website has a very easy to follow tutorial on the  topic.</p> <p>Render operations on the C++ side are much more complicated than what the Lua side might suggest. For  instance, to draw a sprite playing a certain animation at a certain frame, one would simply create the  sprite, bind an ANM2 to it, configure the animation and frame, and call Render. On the C++ side, this  results in multiple render operations. More precisely, there will be one render operation for every  visible animation layer at the given frame. So an ANM2 with an animation that uses two layers will  result in two render operations on the C++ side.</p> <p>Render operations are not performed on the fly; they are queued. The game uses an array that stores  the description of every render operation (what is the source texture, where to render it etc.), and  the <code>KAGE::Graphics::Manager::apply_frame_images</code> function iterates over this array and apply the render operations in the order in which they were queued. </p> <p>Render operations are extremely inconsistent. For instance, in order to render six gapers in a room, the  game will queue six different operations. On the other hand, to render ten bullets fired by a single enemy, the game will queue a single render operation. The data at your disposal in Lua therefore needs to be  interpreted relative to the context that is associated with it. See the table TODO at TODO for  a breakdown.</p> <p>The game uses the <code>glDrawElements</code>  function to draw a set of vertices. The <code>mode</code> parameter is always set to <code>GL_TRIANGLES</code>. Isaac is a sprite-based game, and as such the game draws rectangles, i.e. two triangles.</p> C++ devs note <p>Most developers would perform a call to <code>glBindBuffer(GL_ELEMENT_ARRAY_BUFFER, ...)</code> prior to calling <code>glDrawElements</code> in order to tell the function where to find the indices of the vertices in the vertex buffer. In Isaac no such call is made, and the elements array is always given as the <code>data</code> parameter of the call to <code>glDrawElements</code>. </p> <p>Additionnally, the game does not use a vertex array and computes both the vertex array and the elements array on the fly when render operations are performed. As a result, you won't find call to <code>glBindVertexArray</code> in the source of the game.</p> <p>Calls to <code>glDrawElements</code> abound across rendering, with the game performing dozens of them in order to render a  single frame. This is due to the fact that render operations are dequeued and performed one after the other.</p> <p>The <code>MC_PRE_OPENGL_RENDER</code> callback is fired prior to every call to <code>glDrawElements</code>.</p> C++ devs note <p>To be extremely precise, the execution of the callback happens immediately before the call to <code>glDrawElements</code>: the C++ stack already holds all the parameters of the function.</p>"},{"location":"renderer/CustomRendering.html#custom-rendering","title":"Custom rendering","text":"<p>In order to perform custom rendering, you need to attach a function to <code>MC_PRE_OPENGL_RENDER</code> callback. This  function is called with the following parameters :</p> <ul> <li>The vertex buffer that contains the vertices that are going to be sent to the vertex shader. This is an instance of the <code>NativeVertexBuffer</code> class.</li> <li>The elements array indicating in which order the vertices will be drawn. This is an instance of the <code>ElementsArray</code> class.</li> <li>The ID of the shader that will be executed. This is a value from the <code>Renderer.Shaders</code> enumeration.</li> <li>TODO The context of the render operation. In other words, what is being drawn.</li> </ul> <p>There are two ways to work in this callback. The first is limited modifications to the input. The second is completely custom rendering.</p>"},{"location":"renderer/CustomRendering.html#modifications-of-the-input-of-mc_pre_opengl_render","title":"Modifications of the input of <code>MC_PRE_OPENGL_RENDER</code>","text":"<p>To indicate to the Repentogon runtime that you want to perform this kind of rendering, return a value from the  <code>Renderer.Shaders</code> enumeration, or <code>nil</code>.</p> <p>Modification here is limited to editing the content of the vertices in the vertex buffer, the indices in the elements array and the currently bound shader. It is not possible to add or remove vertices, nor is it possible to add or  remove elements. Furthermore, if the bound shader is changed, then the new shader must be compatible with the previous  one, i.e they must have exactly the same structure.</p> <p>In order to modify the content of the vertex buffer, you can use the <code>GetVertex</code> method of the <code>NativeVertexBuffer</code> class. It will return a representation of the i-th vertex (indexed from 0). This representation can be manipulated like a Lua  table, where the keys are the attributes of an input vertex in the currently bound vertex shader. For instance, if the  vertex shader has the following structure:</p> <pre><code>attribute vec3 Position;\nattribute vec4 Color;\n</code></pre> <p>Then you have access to the <code>Position</code> and <code>Color</code> keys on the <code>Vertex</code> object returned by <code>GetVertex</code>. You can then edit  these values as you see fit. Example:</p> <pre><code>mod:AddCallback(ModCallbacks.MC_PRE_OPENGL_RENDER, function(_, buffer, elements, shader, ctx)\n    local vertex = buffer:GetVertex(0)\n    vertex.Position.x = vertex.Position.x + 1\nend)\n</code></pre> <p>In order to modify the content of the elements array, you can use the <code>[]</code> operator on the object, and give the index  you want to access. You may use the <code>#</code> operator to get the maximum valid index you can use.</p> <p>In order to change the currently bound shader, return either:</p> <ul> <li>A value of the <code>Renderer.Shaders</code> enumeration.</li> <li>An object of type <code>Shader</code> obtained by a call to <code>Renderer.Shader()</code></li> </ul> Rationale of the design <p>Due to the way the game manages the vertex buffer and the elements array on his side, adding / removing vertices at  will would require copying the entire content of these buffers into new ones. As such, I (Sylmir) decided to consciously limit what can be done with this rendering mode.</p>"},{"location":"renderer/CustomRendering.html#completely-custom-rendering","title":"Completely custom rendering","text":"<p>In order to use completely custom rendering, one must return a <code>Pipeline</code> object in the <code>MC_PRE_OPENGL_RENDER</code> callback.</p> <p>In order to create a <code>Pipeline</code>, use the <code>Renderer.Pipeline()</code> function.</p> <p>A <code>Pipeline</code> object acts as a container for a sequence of render passes on a single input.  In other words, the purpose of the <code>Pipeline</code> is to allow you to alter an existing render operation. If you want to render an arbitrary sprite, then first create this sprite, use Render() on it, and  then change its rendering in this callback. Do not use the callback as a way to render anything.</p> <p>To understand the idea of \"sequence of render passes\", consider the following code: </p> <pre><code>mod.EdgeDetectionShader = &lt;create shader&gt;\nmod.BloomShader = &lt;create shader&gt;\n\nmod:AddCallback(ModCallbacks.MC_PRE_OPENGL_RENDER, function(_, vertexBuffer, elements, shader, ctx)\n    local pipeline = Renderer.Pipeline()\n    local edgeBuffer = pipeline:NewPass(#vertexBuffer, elements, mod.EdgeDetectionShader)\n    &lt;copy content of vertexBuffer into edgeBuffer&gt;\n    local bloomBuffer = pipeline:NewPass(4, &lt;define elements array&gt;, mod.BloomShader)\n    &lt;bind the uniforms in the two shaders&gt;\n    return pipeline\nend)\n</code></pre> <p>In the function attached to the callback, we create new <code>Pipeline</code> and register two render passes in  it, using the <code>NewPass</code> method (read more). The first pass will use an edge detection shader. The second pass will work on the output of the first pass and further apply a bloom shader on this result. We have a pipeline consisting of two sequential passes.</p> <p>The <code>NewPass</code> function creates a new pass in a pipeline. You need three elements to define a pass:  how many vertices will be defined, the elements array, and the shader program that will be used  to perform the rendering. The function then returns a <code>VertexBuffer</code> object containing the specified number of vertices.</p>"},{"location":"renderer/CustomRendering.html#creating-a-shader","title":"Creating a shader","text":"<p>In order to create a shader, you need to use the <code>Renderer.Shader</code> function. This function takes three parameters: the path to the vertex shader file, the path to the fragment shader file, and a descriptor (<code>VertexDescriptor</code>).</p> <p>To create a <code>VertexDescriptor</code>, use the <code>Renderer.VertexDescriptor()</code> function.</p> <p>A <code>VertexDescriptor</code> acts as a representation of the vertex shader's attributes. For example, consider  the following vertex shader.</p> <pre><code>attribute vec3 Position;\nattribute vec4 Color;\nvarying vec4 ColorOut;\n\nuniform mat4 Transform;\n\nvoid main() {\n    ColorOut = Color;\n    gl_Position = Transform * vec4(Position, 1);\n}\n</code></pre> <p>This vertex shader has two attributes, <code>Position</code> of type <code>vec3</code> and <code>Color</code> of type <code>vec4</code>. Uniforms do  not count as attributes.</p> Modern OpenGL <p>If you write your shaders in a reasonnably recent version of the GLSL language, the <code>attribute</code> keyword is either deprecated or outright removed, and you use the <code>in</code> keyword instead.</p> <p>A <code>VertexDescriptor</code> for this vertex shader is a Lua representation of these attributes. The purpose of this descriptor is to let Lua structure the <code>Vertex</code> objects in a <code>VertexBuffer</code> in a way that mirrors  the attributes of the vertex shader.</p> <p>To define the attributes of a <code>VertexDescriptor</code> use the <code>AddAttribute</code> method. This method takes as  parameters the name of the attribute (a string) as well as the type of the attribute (a value from the <code>Renderer.GLSLType</code> enumeration). To keep with the previous example, here is how one would define the  descriptor of the previous vertex shader, and create a shader object:</p> <pre><code>local descriptor = Renderer.VertexDescriptor()\ndescriptor:AddAttribute(\"Position\", Renderer.GLSLType.VEC3)\ndescriptor:AddAttribute(\"Color\", Renderer.GLSLType.VEC4)\nlocal shader = Renderer.Shader(\"shaders/vertex.vs\", \"shaders/fragment.fs\", descriptor)\n</code></pre> Copies and references <p>When a <code>VertexDescriptor</code> is used to create a shader, its content are copied inside the  C++ representation of the shader, and not stored by reference. As a consequence, further  modifications of the descriptor will not be reflected in the shader. Furthermore, this  avoids an issue where losing all references to the descriptor on the Lua side could  accidentally cause a memory corruption on the C++ side.</p> Rationale of the copy <p>The description of a shader is not supposed to change as the program runs. Therefore I think  it makes no sense to store a reference to the descriptor. Furthermore, this avoids confusion when accidental modifications to the descriptor result in black squares being rendered.</p>"},{"location":"renderer/CustomRendering.html#creating-an-elements-array","title":"Creating an elements array","text":"<p>In order to create an elements array, use the <code>Renderer.NewElements()</code> functions. This function takes  as parameters the number of vertices that will be rendered.</p> <p>You can then use the <code>[]</code> operator with a number as parameter to access the element at a given index. Using a number outside the range defined in <code>NewElements</code> results in an error.</p> <p>The code below shows an example on how to define an elements array that can be used to render a rectangle.</p> <pre><code>local elements = Renderer.NewElements(6)\nelements[0] = 0\nelements[1] = 1\nelements[2] = 2\nelements[3] = 2\nelements[4] = 1\nelements[5] = 3\n</code></pre>"},{"location":"renderer/CustomRendering.html#defining-the-vertices","title":"Defining the vertices","text":"<p>Before the call to <code>Pipeline:NewPass()</code> returns, the runtime ensures that the values defined in the  elements array are consistent with the number of requested vertices in the vertex buffer.</p> <p>The call returns a <code>VertexBuffer</code> object, on which you can use the <code>GetVertex()</code> method to get access to the i-th vertex (0-based) as a <code>Vertex</code>. This <code>Vertex</code> contains attributes named and typed after the content of the <code>VertexDescriptor</code> object. Keeping with our above example: </p> <pre><code>local buffer = pipeline:NewPass(...)\nlocal vertex = buffer:GetVertex(0)\nvertex.Position = Renderer.Vec3(1, 0, 0)\nvertex.Color = Renderer.Vec4(0.2, 0.3, 0.4, 0.5)\n</code></pre>"},{"location":"renderer/CustomRendering.html#binding-uniforms","title":"Binding uniforms","text":"<p>The final step in custom rendering is to bind values to the uniforms of shaders.</p> <p>In order to bind a uniform in a shader, use the appropriate <code>Bind*</code> function on a  <code>Shader</code> object. All these functions take as parameter the name of the uniform to bind and the value to bind to it.</p> <p>Due to the way OpenGL works, every time a value is bound to a uniform further  modifications of the variable holding this value have no effect on the uniform's  value.</p> <p>The uniform you'll probably need in almost any situation is the projection matrix,  that converts coordinates from view space (the coordinates returned by the  <code>WorldToScreen()</code> function) into clip space (the screen on which rendering is being done). This matrix can be accessed by using the <code>Renderer.ProjectionMatrix()</code> function.</p> <pre><code>mod.EdgeDetectionShader:BindMat4(\"Transform\", Renderer.ProjectionMatrix())\n</code></pre>"},{"location":"renderer/CustomRendering.html#successive-passes-and-the-view-space","title":"Successive passes and the view space","text":"<p>One of the difficulties in writing multiple successive passes is to consider what the vertices of the all passes from the second onwards are. In particular, what are the  coordinates (and in which space they are) of the vertices. </p> <p>In the vanilla API, if  multiple mods define custom shaders, they are executed in a sequence.  Each time, the input vertices are positionned at the boundaries of the view space, in such a way that transforming them through the projection matrix results in the boundaries of clip space.</p> <p>In the custom render system, you are free to use whatever method you feel is the most suited to  what you want to achieve.</p> <p>And there you go, you're free to do whatever you want with rendering now. Have fun.</p>"},{"location":"renderer/DestinationQuad.html","title":"Class \"DestinationQuad\"","text":"","tags":["Class"]},{"location":"renderer/DestinationQuad.html#constructors","title":"Constructors","text":"","tags":["Class"]},{"location":"renderer/DestinationQuad.html#destinationquad","title":"DestinationQuad ()","text":"","tags":["Class"]},{"location":"renderer/DestinationQuad.html#destinationquad-destinationquad-vector-topleft-vector-topright-vector-bottomleft-vector-bottomright","title":"DestinationQuad DestinationQuad ( Vector TopLeft, Vector TopRight, Vector BottomLeft, Vector BottomRight )","text":"","tags":["Class"]},{"location":"renderer/DestinationQuad.html#functions","title":"Functions","text":"","tags":["Class"]},{"location":"renderer/DestinationQuad.html#getbottomleft","title":"GetBottomLeft ()","text":"","tags":["Class"]},{"location":"renderer/DestinationQuad.html#vector-getbottomleft","title":"Vector GetBottomLeft ( )","text":"","tags":["Class"]},{"location":"renderer/DestinationQuad.html#getbottomright","title":"GetBottomRight ()","text":"","tags":["Class"]},{"location":"renderer/DestinationQuad.html#vector-getbottomright","title":"Vector GetBottomRight ( )","text":"","tags":["Class"]},{"location":"renderer/DestinationQuad.html#gettopleft","title":"GetTopLeft ()","text":"","tags":["Class"]},{"location":"renderer/DestinationQuad.html#vector-gettopleft","title":"Vector GetTopLeft ( )","text":"","tags":["Class"]},{"location":"renderer/DestinationQuad.html#gettopright","title":"GetTopRight ()","text":"","tags":["Class"]},{"location":"renderer/DestinationQuad.html#vector-gettopright","title":"Vector GetTopRight ( )","text":"","tags":["Class"]},{"location":"renderer/DestinationQuad.html#setbottomleft","title":"SetBottomLeft ()","text":"","tags":["Class"]},{"location":"renderer/DestinationQuad.html#void-setbottomleft-vector-vector","title":"void SetBottomLeft ( Vector Vector )","text":"","tags":["Class"]},{"location":"renderer/DestinationQuad.html#setbottomright","title":"SetBottomRight ()","text":"","tags":["Class"]},{"location":"renderer/DestinationQuad.html#void-setbottomright-vector-vector","title":"void SetBottomRight ( Vector Vector )","text":"","tags":["Class"]},{"location":"renderer/DestinationQuad.html#settopleft","title":"SetTopLeft ()","text":"","tags":["Class"]},{"location":"renderer/DestinationQuad.html#void-settopleft-vector-vector","title":"void SetTopLeft ( Vector Vector )","text":"","tags":["Class"]},{"location":"renderer/DestinationQuad.html#settopright","title":"SetTopRight ()","text":"","tags":["Class"]},{"location":"renderer/DestinationQuad.html#void-settopright-vector-vector","title":"void SetTopRight ( Vector Vector )","text":"","tags":["Class"]},{"location":"renderer/GLSLValue.html","title":"Class \"GLSLValue\"","text":"<p>Helper Classes to store GL data.</p> <p>Those meta classes are: - GLFloatMT - GLVec2MT - GLVec3MT - GLVec4MT - GLMat2MT - GLMat3MT - GLMat4MT</p>","tags":["Class"]},{"location":"renderer/GLSLValue.html#functions","title":"Functions","text":"","tags":["Class"]},{"location":"renderer/GLSLValue.html#__index","title":"__index ()","text":"","tags":["Class"]},{"location":"renderer/GLSLValue.html#float-__index","title":"float __index ( )","text":"<p>meta function to access data in a given table key.</p>","tags":["Class"]},{"location":"renderer/GLSLValue.html#__newindex","title":"__newindex ()","text":"","tags":["Class"]},{"location":"renderer/GLSLValue.html#void-__newindex-float-value","title":"void __newindex ( float value )","text":"<p>meta function to write data in a given table key.</p>","tags":["Class"]},{"location":"renderer/Image.html","title":"Class \"Image\"","text":"Info <p>You can get this class by using the following function:</p> <ul> <li>Renderer:LoadImage()</li> </ul>","tags":["Class"]},{"location":"renderer/Pipeline.html","title":"Class \"Pipeline\"","text":"","tags":["Class"]},{"location":"renderer/Pipeline.html#functions","title":"Functions","text":"","tags":["Class"]},{"location":"renderer/Pipeline.html#newpass","title":"NewPass ()","text":"","tags":["Class"]},{"location":"renderer/Pipeline.html#vertexbuffer-newpass-int-nbvertices-shader-shader-int-nbelements","title":"VertexBuffer NewPass ( int nbVertices, Shader shader, int nbElements )","text":"","tags":["Class"]},{"location":"renderer/Point.html","title":"Class \"Point\"","text":"<p>Used for Beam.</p>","tags":["Class"]},{"location":"renderer/Point.html#constructors","title":"Constructors","text":"","tags":["Class"]},{"location":"renderer/Point.html#beam","title":"Beam ()","text":"","tags":["Class"]},{"location":"renderer/Point.html#point-point-vector-position-float-spritesheetcoordinate-float-width-10-color-color-default-boolean-isworldspace-false","title":"Point Point ( Vector Position, float SpritesheetCoordinate, float Width = 1.0, Color Color = Default, boolean IsWorldSpace = false )","text":"","tags":["Class"]},{"location":"renderer/Point.html#functions","title":"Functions","text":"","tags":["Class"]},{"location":"renderer/Point.html#getcolor","title":"GetColor  ()","text":"","tags":["Class"]},{"location":"renderer/Point.html#color-getcolor","title":"Color GetColor ( )","text":"<p>The color the Beam should be at this Point. This is interpolated between points.</p>","tags":["Class"]},{"location":"renderer/Point.html#getisworldspace","title":"GetIsWorldSpace ()","text":"","tags":["Class"]},{"location":"renderer/Point.html#boolean-getisworldspace","title":"boolean GetIsWorldSpace ( )","text":"<p>If this is set, <code>Position</code> will be automatically converted from worldspace to screenspace during rendering.</p>","tags":["Class"]},{"location":"renderer/Point.html#getspritesheetcoordinate","title":"GetSpritesheetCoordinate  ()","text":"","tags":["Class"]},{"location":"renderer/Point.html#float-getspritesheetcoordinate","title":"float GetSpritesheetCoordinate ( )","text":"<p>The <code>Y</code> position of the spritesheet that should be drawn by the time this Point is reached. For example, two points of <code>0</code> and <code>64</code> SpritesheetCoordinate will render the spritesheet starting from <code>y 0</code> to <code>y 64</code>, while an additional third point of <code>0</code> will draw it in reverse from <code>y 64</code> to <code>y 0</code>.</p>","tags":["Class"]},{"location":"renderer/Point.html#getwidth","title":"GetWidth ()","text":"","tags":["Class"]},{"location":"renderer/Point.html#float-getwidth","title":"float GetWidth ( )","text":"<p>A multiplier for how wide the beam should be. A non-zero value will scale the spritesheet width accordingly. This is interpolated between points.</p>","tags":["Class"]},{"location":"renderer/Point.html#getposition","title":"GetPosition ()","text":"","tags":["Class"]},{"location":"renderer/Point.html#vector-getposition","title":"Vector GetPosition ( )","text":"<p>Where (in screenspace) to render the Point.</p>","tags":["Class"]},{"location":"renderer/Point.html#setcolor","title":"SetColor  ()","text":"","tags":["Class"]},{"location":"renderer/Point.html#void-setcolor-color-color","title":"void SetColor ( Color Color )","text":"","tags":["Class"]},{"location":"renderer/Point.html#setisworldspace","title":"SetIsWorldSpace ()","text":"","tags":["Class"]},{"location":"renderer/Point.html#void-setisworldspace-boolean-value","title":"void SetIsWorldSpace ( boolean Value )","text":"","tags":["Class"]},{"location":"renderer/Point.html#setspritesheetcoordinate","title":"SetSpritesheetCoordinate ()","text":"","tags":["Class"]},{"location":"renderer/Point.html#void-setspritesheetcoordinate-float-coordinate","title":"void SetSpritesheetCoordinate ( float Coordinate )","text":"","tags":["Class"]},{"location":"renderer/Point.html#setwidth","title":"SetWidth ()","text":"","tags":["Class"]},{"location":"renderer/Point.html#void-setwidth-float-width","title":"void SetWidth ( float Width )","text":"","tags":["Class"]},{"location":"renderer/Point.html#setposition","title":"SetPosition ()","text":"","tags":["Class"]},{"location":"renderer/Point.html#void-setposition-vector-position","title":"void SetPosition ( Vector Position )","text":"","tags":["Class"]},{"location":"renderer/RenderSet.html","title":"Class \"RenderSet\"","text":"","tags":["Class"]},{"location":"renderer/RenderSet.html#functions","title":"Functions","text":"","tags":["Class"]},{"location":"renderer/RenderSet.html#slicesingle","title":"SliceSingle ()","text":"","tags":["Class"]},{"location":"renderer/RenderSet.html#void-slicesingle-vertexbuffer-vertexbuffer-shader-shader-int-nelements-int-first-int-second-1","title":"void SliceSingle ( VertexBuffer vertexBuffer, Shader shader, int nElements, int first, int second = -1 )","text":"","tags":["Class"]},{"location":"renderer/RenderSet.html#slicepipeline","title":"SlicePipeline ()","text":"","tags":["Class"]},{"location":"renderer/RenderSet.html#void-slicepipeline-string-filepath","title":"void SlicePipeline ( string filePath )","text":"","tags":["Class"]},{"location":"renderer/Renderer.html","title":"Class \"Renderer\"","text":"","tags":["Class"]},{"location":"renderer/Renderer.html#functions","title":"Functions","text":"","tags":["Class"]},{"location":"renderer/Renderer.html#loadimage","title":"LoadImage ()","text":"","tags":["Class"]},{"location":"renderer/Renderer.html#image-loadimage-string-filepath","title":"Image LoadImage ( string filePath )","text":"","tags":["Class"]},{"location":"renderer/Renderer.html#pipeline","title":"Pipeline ()","text":"","tags":["Class"]},{"location":"renderer/Renderer.html#pipeline-pipeline","title":"Pipeline Pipeline ( )","text":"","tags":["Class"]},{"location":"renderer/Renderer.html#projectionmatrix","title":"ProjectionMatrix ()","text":"","tags":["Class"]},{"location":"renderer/Renderer.html#glmat4-projectionmatrix","title":"GLMat4 ProjectionMatrix ( )","text":"","tags":["Class"]},{"location":"renderer/Renderer.html#renderset","title":"RenderSet ()","text":"","tags":["Class"]},{"location":"renderer/Renderer.html#void-renderset","title":"void RenderSet ( )","text":"","tags":["Class"]},{"location":"renderer/Renderer.html#shader","title":"Shader ()","text":"","tags":["Class"]},{"location":"renderer/Renderer.html#shader-shader-string-vertexshader-string-fragmentshader-vertexdescriptor-vertexdescriptor","title":"Shader Shader ( string vertexShader, string fragmentShader, VertexDescriptor vertexDescriptor )","text":"","tags":["Class"]},{"location":"renderer/Renderer.html#starttransformation","title":"StartTransformation ()","text":"","tags":["Class"]},{"location":"renderer/Renderer.html#transformer-starttransformation","title":"Transformer StartTransformation ( )","text":"","tags":["Class"]},{"location":"renderer/Renderer.html#vec2","title":"Vec2 ()","text":"","tags":["Class"]},{"location":"renderer/Renderer.html#glvec2-vec2-float-x-0-float-y-0","title":"GLVec2 Vec2 ( float x = 0, float y = 0 )","text":"","tags":["Class"]},{"location":"renderer/Renderer.html#vec3","title":"Vec3 ()","text":"","tags":["Class"]},{"location":"renderer/Renderer.html#glvec3-vec3-float-x-0-float-y-0-float-z-0","title":"GLVec3 Vec3 ( float x = 0 float y = 0, float z = 0 )","text":"","tags":["Class"]},{"location":"renderer/Renderer.html#vec4","title":"Vec4 ()","text":"","tags":["Class"]},{"location":"renderer/Renderer.html#glvec4-vec4-float-x-0-float-y-0-float-z-0-float-w-0","title":"GLVec4 Vec4 ( float x = 0 float y = 0, float z = 0, float w = 0 )","text":"","tags":["Class"]},{"location":"renderer/Renderer.html#vertexdescriptor","title":"VertexDescriptor ()","text":"","tags":["Class"]},{"location":"renderer/Renderer.html#vertexdescriptor-vertexdescriptor","title":"VertexDescriptor VertexDescriptor ( )","text":"","tags":["Class"]},{"location":"renderer/Shader.html","title":"Class \"Shader\"","text":"","tags":["Class"]},{"location":"renderer/Shader.html#functions","title":"Functions","text":"","tags":["Class"]},{"location":"renderer/Shader.html#bindfloat","title":"BindFloat ()","text":"","tags":["Class"]},{"location":"renderer/Shader.html#void-bindfloat-string-name-glfloat-value","title":"void BindFloat ( string name, GLFloat value )","text":"","tags":["Class"]},{"location":"renderer/Shader.html#bindvec2","title":"BindVec2 ()","text":"","tags":["Class"]},{"location":"renderer/Shader.html#void-bindvec2-string-name-glvec2-value","title":"void BindVec2 ( string name, GLVec2 value )","text":"","tags":["Class"]},{"location":"renderer/Shader.html#bindvec3","title":"BindVec3 ()","text":"","tags":["Class"]},{"location":"renderer/Shader.html#void-bindvec3-string-name-glvec3-value","title":"void BindVec3 ( string name, GLVec3 value )","text":"","tags":["Class"]},{"location":"renderer/Shader.html#bindvec4","title":"BindVec4 ()","text":"","tags":["Class"]},{"location":"renderer/Shader.html#void-bindvec4-string-name-glvec4-value","title":"void BindVec4 ( string name, GLVec4 value )","text":"","tags":["Class"]},{"location":"renderer/Shader.html#bindmat2","title":"BindMat2 ()","text":"","tags":["Class"]},{"location":"renderer/Shader.html#void-bindmat2-string-name-glmat2-value","title":"void BindMat2 ( string name, GLMat2 value )","text":"","tags":["Class"]},{"location":"renderer/Shader.html#bindmat3","title":"BindMat3 ()","text":"","tags":["Class"]},{"location":"renderer/Shader.html#void-bindmat3-string-name-glmat3-value","title":"void BindMat3 ( string name, GLMat3 value )","text":"","tags":["Class"]},{"location":"renderer/Shader.html#bindmat4","title":"BindMat4 ()","text":"","tags":["Class"]},{"location":"renderer/Shader.html#void-bindmat4-string-name-glmat4-value","title":"void BindMat4 ( string name, GLMat4 value )","text":"","tags":["Class"]},{"location":"renderer/Shape.html","title":"Class \"Shape\"","text":"Info <p>You can get this class by using the following functions:</p> <ul> <li>DebugRenderer:Get()</li> <li>Entity:GetDebugShape()</li> </ul>","tags":["Class"]},{"location":"renderer/Shape.html#functions","title":"Functions","text":"","tags":["Class"]},{"location":"renderer/Shape.html#circle","title":"Circle ()","text":"","tags":["Class"]},{"location":"renderer/Shape.html#void-circle-vector-position-float-size","title":"void Circle ( Vector Position, float Size )","text":"","tags":["Class"]},{"location":"renderer/Shape.html#gettimeout","title":"GetTimeout ()","text":"","tags":["Class"]},{"location":"renderer/Shape.html#int-gettimeout","title":"int GetTimeout ( )","text":"","tags":["Class"]},{"location":"renderer/Shape.html#settimeout","title":"SetTimeout ()","text":"","tags":["Class"]},{"location":"renderer/Shape.html#void-settimeout-int-timeout","title":"void SetTimeout ( int Timeout )","text":"","tags":["Class"]},{"location":"renderer/Shape.html#capsule","title":"Capsule ()","text":"","tags":["Class"]},{"location":"renderer/Shape.html#void-capsule-capsule-capsule","title":"void Capsule (Capsule Capsule )","text":"<p>Assign a capsule collider to the shape.</p>","tags":["Class"]},{"location":"renderer/SourceQuad.html","title":"Class \"SourceQuad\"","text":"","tags":["Class"]},{"location":"renderer/SourceQuad.html#constructors","title":"Constructors","text":"","tags":["Class"]},{"location":"renderer/SourceQuad.html#sourcequad","title":"SourceQuad ()","text":"","tags":["Class"]},{"location":"renderer/SourceQuad.html#sourcequad-sourcequad-vector-topleft-vector-topright-vector-bottomleft-vector-bottomright","title":"SourceQuad SourceQuad ( Vector TopLeft, Vector TopRight, Vector BottomLeft, Vector BottomRight )","text":"","tags":["Class"]},{"location":"renderer/SourceQuad.html#functions","title":"Functions","text":"","tags":["Class"]},{"location":"renderer/SourceQuad.html#getbottomleft","title":"GetBottomLeft ()","text":"","tags":["Class"]},{"location":"renderer/SourceQuad.html#vector-getbottomleft","title":"Vector GetBottomLeft ( )","text":"","tags":["Class"]},{"location":"renderer/SourceQuad.html#getbottomright","title":"GetBottomRight ()","text":"","tags":["Class"]},{"location":"renderer/SourceQuad.html#vector-getbottomright","title":"Vector GetBottomRight ( )","text":"","tags":["Class"]},{"location":"renderer/SourceQuad.html#gettopleft","title":"GetTopLeft ()","text":"","tags":["Class"]},{"location":"renderer/SourceQuad.html#vector-gettopleft","title":"Vector GetTopLeft ( )","text":"","tags":["Class"]},{"location":"renderer/SourceQuad.html#gettopright","title":"GetTopRight ()","text":"","tags":["Class"]},{"location":"renderer/SourceQuad.html#vector-gettopright","title":"Vector GetTopRight ( )","text":"","tags":["Class"]},{"location":"renderer/SourceQuad.html#setbottomleft","title":"SetBottomLeft ()","text":"","tags":["Class"]},{"location":"renderer/SourceQuad.html#void-setbottomleft-vector-vector","title":"void SetBottomLeft ( Vector Vector )","text":"","tags":["Class"]},{"location":"renderer/SourceQuad.html#setbottomright","title":"SetBottomRight ()","text":"","tags":["Class"]},{"location":"renderer/SourceQuad.html#void-setbottomright-vector-vector","title":"void SetBottomRight ( Vector Vector )","text":"","tags":["Class"]},{"location":"renderer/SourceQuad.html#settopleft","title":"SetTopLeft ()","text":"","tags":["Class"]},{"location":"renderer/SourceQuad.html#void-settopleft-vector-vector","title":"void SetTopLeft ( Vector Vector )","text":"","tags":["Class"]},{"location":"renderer/SourceQuad.html#settopright","title":"SetTopRight ()","text":"","tags":["Class"]},{"location":"renderer/SourceQuad.html#void-settopright-vector-vector","title":"void SetTopRight ( Vector Vector )","text":"","tags":["Class"]},{"location":"renderer/Transformer.html","title":"Class \"Transformer\"","text":"","tags":["Class"]},{"location":"renderer/Transformer.html#functions","title":"Functions","text":"","tags":["Class"]},{"location":"renderer/Transformer.html#apply","title":"Apply ()","text":"","tags":["Class"]},{"location":"renderer/Transformer.html#void-apply","title":"void Apply ( )","text":"","tags":["Class"]},{"location":"renderer/Transformer.html#isvalid","title":"IsValid ()","text":"","tags":["Class"]},{"location":"renderer/Transformer.html#boolean-isvalid","title":"boolean IsValid ( )","text":"","tags":["Class"]},{"location":"renderer/Transformer.html#render","title":"Render ()","text":"","tags":["Class"]},{"location":"renderer/Transformer.html#void-render-image-image-sourcequad-source-destinationquad-dest-color-modifier","title":"void Render ( Image image, SourceQuad source, DestinationQuad dest, Color modifier )","text":"","tags":["Class"]},{"location":"renderer/Transformer.html#renderex","title":"RenderEx ()","text":"","tags":["Class"]},{"location":"renderer/Transformer.html#void-renderex-image-image-sourcequad-source-destinationquad-dest-color-modifier1-color-modifier2-color-modifier3-color-modifier4","title":"void RenderEx ( Image image, SourceQuad source, DestinationQuad dest, Color modifier1, Color modifier2, Color modifier3, Color modifier4 )","text":"","tags":["Class"]},{"location":"renderer/Vertex.html","title":"Class \"Vertex\"","text":"","tags":["Class"]},{"location":"renderer/Vertex.html#functions","title":"Functions","text":"","tags":["Class"]},{"location":"renderer/Vertex.html#dump","title":"Dump ()","text":"","tags":["Class"]},{"location":"renderer/Vertex.html#table-dump","title":"table Dump ( )","text":"","tags":["Class"]},{"location":"renderer/Vertex.html#__index","title":"__index ()","text":"","tags":["Class"]},{"location":"renderer/Vertex.html#float-__index","title":"float __index ( )","text":"<p>meta function to access data in a given table key.</p>","tags":["Class"]},{"location":"renderer/Vertex.html#__newindex","title":"__newindex ()","text":"","tags":["Class"]},{"location":"renderer/Vertex.html#void-__newindex-float-value","title":"void __newindex ( float value )","text":"<p>meta function to write data in a given table key.</p>","tags":["Class"]},{"location":"renderer/VertexBuffer.html","title":"Class \"VertexBuffer\"","text":"","tags":["Class"]},{"location":"renderer/VertexBuffer.html#functions","title":"Functions","text":"","tags":["Class"]},{"location":"renderer/VertexBuffer.html#getelements","title":"GetElements ()","text":"","tags":["Class"]},{"location":"renderer/VertexBuffer.html#table-getelements","title":"table GetElements ( )","text":"<p>List of Elements</p>","tags":["Class"]},{"location":"renderer/VertexBuffer.html#getvertex","title":"GetVertex ()","text":"","tags":["Class"]},{"location":"renderer/VertexBuffer.html#vertex-getvertex-int-vertexid","title":"Vertex GetVertex ( int vertexId )","text":"","tags":["Class"]},{"location":"renderer/VertexDescriptor.html","title":"Class \"VertexDescriptor\"","text":"","tags":["Class"]},{"location":"renderer/VertexDescriptor.html#functions","title":"Functions","text":"","tags":["Class"]},{"location":"renderer/VertexDescriptor.html#addattribute","title":"AddAttribute ()","text":"","tags":["Class"]},{"location":"renderer/VertexDescriptor.html#void-addattribute-glsltype-type-string-name","title":"void AddAttribute ( GLSLType type, string name )","text":"","tags":["Class"]},{"location":"snippets/EntityClassDiagram_NewFunkyMode.html","title":"EntityClassDiagram NewFunkyMode","text":"<pre><code>    classDiagram\n    class Entity:::diagramCurrentPage\n    class EntityBomb\n    class EntityEffect\n    class EntityFamiliar\n    class EntityKnife\n    class EntityLaser\n    class EntityNPC\n    class EntityPickup\n    class EntityPlayer\n    class EntityProjectile\n    class EntitySlot\n    class EntityTear\n    Entity &lt;|-- EntityBomb\n    Entity &lt;|-- EntityEffect\n    Entity &lt;|-- EntityFamiliar\n    Entity &lt;|-- EntityKnife\n    Entity &lt;|-- EntityLaser\n    Entity &lt;|-- EntityNPC\n    Entity &lt;|-- EntityPickup\n    Entity &lt;|-- EntityPlayer\n    Entity &lt;|-- EntityProjectile\n    Entity &lt;|-- EntitySlot\n    Entity &lt;|-- EntityTear\n    link Entity \"https://wofsauge.github.io/IsaacDocs/rep/Entity.html\" \"Go to page for 'Entity' class\"\n    link EntityBomb \"https://wofsauge.github.io/IsaacDocs/rep/EntityBomb.html\" \"Go to page for 'EntityBomb' class\"\n    link EntityEffect \"https://wofsauge.github.io/IsaacDocs/rep/EntityEffect.html\" \"Go to page for 'EntityEffect' class\"\n    link EntityFamiliar \"https://wofsauge.github.io/IsaacDocs/rep/EntityFamiliar.html\" \"Go to page for 'EntityFamiliar' class\"\n    link EntityKnife \"https://wofsauge.github.io/IsaacDocs/rep/EntityKnife.html\" \"Go to page for 'EntityKnife' class\"\n    link EntityLaser \"EntityLaser.html\" \"Go to page for 'EntityLaser' class\"\n    link EntityNPC \"EntityNPC.html\" \"Go to page for 'EntityNPC' class\"\n    link EntityPickup \"EntityPickup.html\" \"Go to page for 'EntityPickup' class\"\n    link EntityPlayer \"EntityPlayer.html\" \"Go to page for 'EntityPlayer' class\"\n    link EntityProjectile \"https://wofsauge.github.io/IsaacDocs/rep/EntityProjectile.html\" \"Go to page for 'EntityProjectile' class\"\n    link EntitySlot \"EntitySlot.html\" \"Go to page for 'EntitySlot' class\"\n    link EntityTear \"https://wofsauge.github.io/IsaacDocs/rep/EntityTear.html\" \"Go to page for 'EntityTear' class\"</code></pre>"},{"location":"xml/achievements.html","title":"File \"achievements.xml\"","text":"<p>Resource-Folder: Using this file in a resource folder of a mod will replace the original file.</p> <p>Content-Folder: Using this file in a content folder will add new achievements.</p> <p>With REPENTOGON, you have the ability to add new achievements in an organic way, they should work just as vanilla achievements do with the same xml structure.  Take in mind that, in the same way as other content xmls, ids are automatically assigned and shouldnt be specified. If you do specify an id for a xml node, it will be ignored.   To get the Id of an achievement in lua, you can use Isaac.GetAchievementIdByName, you can unlock modded achievements using the PersistentGameData.TryUnlock function. When modded achievements are unlocked, they will play the animation as normal and they will interact with vanilla achievements if several are unlocked at once. REPENTOGON also tracks modded achievements and saves them internally, so you dont need to handle them on your side. Take in mind that you can lock achievements by using the <code>lockachievement</code> console command.</p> <p>The following custom attributes can be defined for achievements in the achievements xml.</p> Variable-Name Possible Values Description name string used for the GetXByName functions (when this is not present, text is used instead) gfxback string path of the png sprite to use as a background paper for the achievement hidden bool any value other than 'false', preferably 'true', will make it not show the achievement popup on unlock nor display the achievement in the secrets menu More Info <p>For more information about this xml, check the original docs entry here.</p>","tags":["File"]},{"location":"xml/ambush.html","title":"File \"ambush.xml\"","text":"<p>Resource-Folder: Using this file in a resource folder of a mod will replace the original file.</p> <p>Content-Folder: Using this file in a content folder will add new boss rush waves!</p> <p>With REPENTOGON, you have the ability to add new boss rush waves in an organic way, they should work just as vanilla boss rush waves do with the same xml structure.  Take in mind that the only thing thats read by the game on this xml is bossrush waves, the challenge room stuff was deprecated in repentance and is no longer relevant (so dont bother adding those).</p> More Info <p>For more information about this xml, check the original docs entry here. </p>","tags":["File"]},{"location":"xml/backdrops.html","title":"File \"backdrops.xml\"","text":"<p>Resource-Folder: Using this file in a resource folder of a mod will replace the original file.</p> <p>Content-Folder: Using this file in a content folder will add new backdrops animations.</p> <p>With REPENTOGON, you have the ability to add new backdrops in an organic way, they should work just as vanilla backdrops do with the same xml structure.  Take in mind that, in the same way as other content xmls, ids are automatically assigned and shouldnt be specified. If you do specify an id for a xml node, it will be ignored. Instead, you should use the added \"name\" variable, then use Isaac.GetBackdropIdByName to retrieve its id. You can then set modded backdrops using the Room.SetBackdropType () function.</p> Example XML <pre><code>&lt;backdrops gfxroot=\"gfx/backdrop/\" gridgfxroot=\"gfx/grid/\" effectsgfxroot=\"gfx/effects/\"&gt;\n    &lt;backdrop name=\"placement\" reftype=\"1\" gfx=\"01_Basement.png\" walls=\"1\" wallvariants=\"3\" floors=\"1\" floorvariants=\"6\"\n        lfloorgfx   = \"01_LBasementFloor.png\"\n        nfloorgfx   = \"01_Basement_nfloor.png\"\n        props       = \"Props_01_Basement.anm2\"\n        rocks       = \"rocks_basement.png\"\n        pit         = \"grid_pit.png\"\n        bridge      = \"grid_bridge.png\"\n        door        = \"door_01_normaldoor.png\"\n        holeinwall  = \"door_08_holeinwall.png\"\n    /&gt;\n&lt;/backdrops&gt;\n</code></pre> <p>The following custom attributes can be defined for backdrop in the backdrops xml:</p> Variable-Name Possible Values Description reftype int Defines the id of the backdrop to use as a base for the custom backdrop. This is useful to grab elements from preexistent backdrops, like running water and the such name string The name of the custom backdrop, for use with Isaac.GetBackdropIdByName More Info <p>For more information about this xml, check the original docs entry here.</p>","tags":["File"]},{"location":"xml/bosscolors.html","title":"File \"bosscolors.xml\"","text":"<p>Resource-Folder: Using this file in a resource folder of a mod will replace the original file.</p> <p>Content-Folder: Using this file in a content folder will add new bosscolors animations.</p> <p>With REPENTOGON, you have the ability to add new bosscolors in an organic way, they should work just as vanilla bosscolors do with the same xml structure.   </p> <p>The following custom attributes can be defined for bosscolors in the bosscolors xml.</p> Variable-Name Possible Values Description name string used for the GetXByName functions, should be assigned to the color node More Info <p>For more information about this xml, check the original docs entry here.</p>","tags":["File"]},{"location":"xml/challenges.html","title":"File \"challenges.xml\"","text":"<p>Resource-Folder: Using this file in a resource folder of a mod will replace the original file.</p> <p>Content-Folder: Using this file in a content folder will add new challenges.</p> <p>With REPENTOGON, some attributes have specially mod support capatibilites added to them, see below:</p> Variable-Name Possible Values Description unlockachievement string Sets the achievement(preferably a modded one using the name of the achievement) to unlock when the challenge is completed startingitems string This now supports modded items by using the names of the items instead of the ids. Same format as in vanilla, a comma separated list of values startingitems2 string This now supports modded items by using the names of the items instead of the ids. Same format as in vanilla, a comma separated list of values startingtrinkets string This now supports modded trinkets by using the names of the trinkets instead of the ids. Same format as in vanilla, a comma separated list of values playertype string This now supports modded characters by using the names of the items instead of the ids hidden boolean Anything but \"false\" would result in a hidden challenge that wont show up in the menu achievements string Same as vanilla, comma-separated list (without spaces) of achievements required to unlock the challenge, you can use achievement names for modded achievements lockeddesc string Hint to display instead of the challenge name when its locked, the default phrase is \"LOCKED :(\" (yes, it includes the sad face) More Info <p>For more information about this xml, check the original docs entry here.</p>","tags":["File"]},{"location":"xml/costumes.html","title":"File \"costumes2.xml\"","text":"<p>Resource-Folder: Using this file in a resource folder of a mod will replace the original file.</p> <p>Content-Folder: Using this file in a content folder will add new costumes.</p> <p>With REPENTOGON, the \"id\" attribute of a costume with type=\"none\" can now be used to assign that costume to a character or a \"null\" item/effect from the same mod.</p> Variable-Name Possible Values Description id int Assign the same \"id\" to a type=\"none\" costume and a corresponding \"null\" item in items.xml to have that \"null\" item automatically apply the costume, similarly to what could already be done for typical item costumes. See the page for items.xml for more information on \"null items\".Setting the \"id\" of a type=\"none\" costume and the \"modcostume\" attribute of a character in players.xml to the same number will permanantly apply that costume to that character, like the hair costumes of vanilla characters.Note that the id used must be at least 1. This id is not the one that will be used in-game, and is only for associating the costume with other things defined in a mod's xmls. name string used as a general way to identify xml nodes (when this is not present, the filename of the anm2path attribute is used instead) More Info <p>For more information about this xml, check the original docs entry here. </p>","tags":["File"]},{"location":"xml/cutscenes.html","title":"File \"cutscenes.xml\"","text":"<p>Resource-Folder: Using this file in a resource folder of a mod will replace the original file.</p> <p>Content-Folder: Using this file in a content folder will add new cutscenes.</p> <p>With REPENTOGON, you have the ability to add new cutscenes in an organic way, they should work just as vanilla cutscenes do with the same xml structure.  Take in mind that, in the same way as other content xmls, ids are automatically assigned and shouldnt be specified. If you do specify an id for a xml node, it will be ignored.   To get the Id of a cutscene in lua, you can use Isaac.GetCutsceneIdByName, you can also play modded cutscenes from the console command \"cutscene\" to test them out.</p> <p>The following custom attributes can be defined for cutscenes in the cutscenes xml.</p> Variable-Name Possible Values Description name string used for the GetXByName functions (when this is not present, the filename of the gfx attribute is used instead) music string or int used for the anm2 cutscenes, its available in vanilla but in rgon it now allows to set it to a modded music name More Info <p>For more information about this xml, check the original docs entry here.</p>","tags":["File"]},{"location":"xml/entities.html","title":"File \"entities2.xml\"","text":"<p>Resource-Folder: Using this file in a resource folder of a mod will replace the original file.</p> <p>Content-Folder: Using this file in a content folder will add new entities.</p> Variable-Name Possible Values Description coinvalue int How much this coin pickup is worth when using GetCoinValue (either by the game or a lua call). customtags string Space-separated list of strings. See \"CustomTags\" section below. nosplit boolean Allows preventing this NPC from being split by Meat Cleaver.","tags":["File"]},{"location":"xml/entities.html#customtags","title":"CustomTags","text":"<p>Repentogon adds a new <code>customtags</code> attribute that can contain a space-separated list of strings that can then be checked in-game. Mods can freely add arbitrary string tags to this attribute in the XML and check if they were added to an entity in-game. This makes it easier for mods to add common entity behaviour/traits similar to the existing EntityTags without needing to individually list each entity in lua code, and mods can also use <code>customtags</code> from other mods in their own XMLs for easier mod compatability.</p> <p>Capitalization does not matter and is ignored entirely when adding or checking for <code>customtags</code>.</p> <p>Example XML: <pre><code>customtags=\"yourcustomtag familiarignorebffs familiarblockprojectiles\"\n</code></pre></p> <p><code>customtags</code> can be checked in-game using the EntityConfig:</p> <p>Example Code: <pre><code>local entConfig = EntityConfig.GetEntity(entType, entVar, entSub)\n\n-- Returns true if the entity has the tag string specified.\n-- Capitalization does not matter.\nif entConfig:HasCustomTag(\"yourcustomtag\") then\n  -- ...\nend\n\n-- Returns a table containing all customtags specified for this entity.\n-- Tags are provided in all lowercase.\nlocal customTags = entConfig:GetCustomTags()\n</code></pre></p> <p>Repentogon itself adds some tags that can be used to apply certain behaviours to custom familiars with no required lua code at all:</p> customtag Effects familiarignorebffs The BFFS item will no longer affect this familiar. familiarcantakedamage Familiars with baseHP above 0 will be able to take damage and die, such as from enemy contact, lasers or explosions. Note that they will only take damage from projectiles if they also have the \"familiarblockprojectiles\" tag. familiarblockprojectiles The familiar automatically destroys enemy projectiles on contact. nocharm Makes the familiar not be charmed by Siren. More Info <p>For more information about this xml, check the original docs entry here. </p>","tags":["File"]},{"location":"xml/giantbook.html","title":"File \"giantbook.xml\"","text":"<p>Resource-Folder: Using this file in a resource folder of a mod will replace the original file.</p> <p>Content-Folder: Using this file in a content folder will add new giantbook animations.</p> <p>With REPENTOGON, you have the ability to add new giantbook animations in an organic way, they should work just as vanilla giantbook animations do with the same xml structure.  Take in mind that, in the same way as other content xmls, ids are automatically assigned and shouldnt be specified. If you do specify an id for a xml node, it will be ignored.   To get the Id of a Giant Book animation in lua, you can use Isaac.GetGiantBookIdByName, you can then play modded giant book animations using the ItemOverlay.Show function.</p> <p>The following custom attributes can be defined for giantbook in the giantbook xml.</p> Variable-Name Possible Values Description name string used for the GetXByName functions (when this is not present, the filename of the gfx attribute is used instead) More Info <p>For more information about this xml, check the original docs entry here.</p>","tags":["File"]},{"location":"xml/itempools.html","title":"File \"itempools.xml\"","text":"<p>Resource-Folder: Using this file in a resource folder of a mod will replace the original file.</p> <p>Content-Folder: Using this file in a content folder will add new item pools.</p> <p>With REPENTOGON, you have the ability to add new itempools in an organic way, following the vanilla format.</p> More Info <p>For more information about this xml, check the original docs entry here.</p>","tags":["File"]},{"location":"xml/items.html","title":"File \"items.xml\"","text":"<p>Resource-Folder: Using this file in a resource folder of a mod will replace the original file.</p> <p>Content-Folder: Using this file in a content folder will add new items.</p>","tags":["File"]},{"location":"xml/items.html#items-trinkets","title":"Items &amp; Trinkets","text":"<p>With REPENTOGON, the following xml attributes have changed functionality for regular items and trinkets:</p> Variable-Name Possible Values Description achievement int or string Ties the item/trinket to be unlocked by an achievement. For modded achievements use the corresponding <code>name</code> xml attribute value.","tags":["File"]},{"location":"xml/items.html#null-items","title":"\"Null\" Items","text":"<p>With REPENTOGON, you can now define custom \"null\" items. \"Null\" items are not typical items that can be spawned or visually seen in-game. They are typically used by the game to handle various costumes, buffs and effects (both temporary and persistent).</p> <p>For example, touching the white fire in downpour/dross actually grants a null item effect to you that applies the costume/flight/effects (NullItemID.ID_LOST_CURSE) and removes itself when exiting the mirror dimension. Obtaining a transformation adds a null item effect to the player that grants the actual costume/effects of the transformation (such as NullItemID.ID_GUPPY) which may remove itself if the transformation's requirements are lost.</p> <p>Null items can be very useful for implementing temporary or persistent effects that can be freely added or removed.</p> Variable-Name Possible Values Description id int Assign the same \"id\" to a null item and a corresponding costume with type=\"none\" costume in costumes2.xml to have the null item automatically apply that costume, similarly to what could already be done for typical item costumes.Note that the id used must be at least 1. This id is not the one that will be used in-game, and is only for associating the null item with a costume. cache string Can be used to specify stats that should be re-evaluated when the effect of the null item is added or removed, same as regular items.Possible values : [firedelay, damage, speed, range, tearcolor, tearflag, color, size. shotspeed, all, luck, flying, weapon, familiars] persistent bool By default null item effects only last for the current room. Set persistent to true to have the effect persist between rooms. cooldown int If set, defines how long the effect of the null item lasts, in update frames (30 frames ~= 1 second). After this duration, the effect removes itself. <p>Null item examples: <pre><code>&lt;!-- Null item whose effect stays on the player permanantly, unless removed. --&gt;\n&lt;null id=\"1\" name=\"my null item 1\" persistent=\"true\" /&gt;\n\n&lt;!-- Null item that triggers a damage &amp; tears cache evaluation when added or removed. Only lasts for the current room. --&gt;\n&lt;null id=\"2\" name=\"my null item 2\" cache=\"damage firedelay\" /&gt;\n\n&lt;!-- Null item whose effect lasts for 10 seconds, then removes itself. --&gt;\n&lt;null id=\"3\" name=\"my null item 3\" cooldown=\"300\" persistent=\"true\" /&gt;\n</code></pre></p> <p>You can use <code>Isaac.GetNullItemIdByName(\"my null item\")</code> to get the in-game ID of your null item.</p> <p>Additionally, you can use the functions in the TemporaryEffects class to add, remove, count, or check the current cooldown of null item effects on the player.</p>","tags":["File"]},{"location":"xml/items.html#customtags","title":"CustomTags","text":"<p>Repentogon adds a new <code>customtags</code> attribute that can contain a space-separated list of strings that can then be checked in-game. Mods can freely add arbitrary string tags to this attribute in the XML and check if they were added to an item in-game. This can be used for something similar to vanilla's item tags without needing to individually list each item in lua code, and mods can also use <code>customtags</code> from other mods in their own XMLs for easier mod compatability.</p> <p>Supported for all item types (collectibles, trinkets, and null items).</p> <p>Capitalization does not matter and is ignored entirely when adding or checking for <code>customtags</code>.</p> <p>Example XML: <pre><code>customtags=\"yourcustomtag nometronome\"\n</code></pre></p> <p><code>customtags</code> can be checked in-game via the item's ItemConfigItem:</p> <p>Example Code: <pre><code>local item = Isaac.GetItemConfig():GetCollectible(id)\n\n-- Returns true if the entity has the tag string specified.\n-- Capitalization does not matter.\nif item:HasCustomTag(\"yourcustomtag\") then\n  -- ...\nend\n\n-- Returns a table containing all customtags specified for this entity.\n-- Tags are provided in all lowercase.\nlocal customTags = item:GetCustomTags()\n</code></pre></p> <p>Repentogon itself adds some tags that can be used to apply certain features to items with little to no required lua code at all:</p> customtag Effects nometronome Prevents the item from being picked by Metronome. revive Each copy of the collectible/trinket/null effect held is counted as an extra life (on the HUD, etc) and prevents the game from deleting the run save upon death, making reviving the player safe. EntityPlayer functions such as <code>player:GetExtraLives()</code> and <code>player:WillPlayerRevive()</code> respect this. Note that this tag does NOT automatically revive the player, you are still responsible for removing your item/effect and reviving the player when desired, either by calling <code>player:Revive()</code> or returning false on either the <code>MC_PRE_TRIGGER_PLAYER_DEATH</code> or <code>MC_TRIGGER_PLAYER_DEATH_POST_CHECK_REVIVES</code> callbacks. See below for some sample code. reviveeffect Same as \"revive\" but instead applies to the corresponding TemporaryEffect of the collectible or trinket. You may want to specify <code>persistent=\"true\"</code> on the collectible/trinket to make its TemporaryEffect persist between rooms. There is no difference between \"revive\" and \"reviveeffect\" for null items. chancerevive If the \"revive\" or \"reviveeffect\" tag is present, also displays a \"?\" next to the extra life count, like Guppy's Collar. hiddenrevive If the \"revive\" or \"reviveeffect\" tag is present, this prevents it from being counted on the hud. Overrides \"chancerevive\". <p>Sample revive XML: <pre><code>&lt;passive name=\"Revive Item\" description=\"test\" gfx=\"image.png\" customtags=\"revive\" /&gt;\n&lt;trinket name=\"Trinket whose TemporaryEffect grants a persistent revive, but...?\" description=\"test\" gfx=\"image.png\" persistent=\"true\" customtags=\"reviveeffect chancerevive\" /&gt;\n&lt;null name=\"Null Item that counts as a revive, but is not shown on the HUD\" persistent=\"true\" customtags=\"revive hiddenrevive\" /&gt;\n</code></pre></p> <p>Sample simple revive code: <pre><code>-- \"Real\" held collectible-based revive with higher priority than all vanilla revives, like 1UP.\nmod:AddCallback(ModCallbacks.MC_PRE_TRIGGER_PLAYER_DEATH, function(_, player)\n    if player:HasCollectible(yourItemID, true) then\n        player:RemoveCollectible(yourItemID)\n        player:SetMinDamageCooldown(120)  -- Grant iframes to the player.\n        return false  -- Causes the player to revive on the spot with half a heart.\n    end\nend)\n\n-- Null Item-based revive effect with lower priority than vanilla revives such as 1UP.\n-- Null Items (or any item TemporaryEffect) can be a good way to handle multiple extra lives.\nlocal nullID = Isaac.GetNullItemIdByName(\"my null item\")\nmod:AddCallback(ModCallbacks.MC_TRIGGER_PLAYER_DEATH_POST_CHECK_REVIVES, function(_, player)\n    if player:GetEffects():HasNullEffect(nullID) then\n        player:GetEffects():RemoveNullEffect(nullID)\n        player:Revive()  -- Calling Revive manually like this is acceptable, and will still prevent later callbacks from running.\n        -- You can manipulate the player's post-revive health here, such as fully healing them, or setting them to a single red heart container.\n    end\nend)\n</code></pre></p>","tags":["File"]},{"location":"xml/items.html#customcache","title":"CustomCache","text":"<p>Repentogon also adds a <code>customcache</code> attribute. It is similar to <code>customtags</code>, in that it is a space-separated list of strings, but it has special behaviour to emulate the basegame's <code>cache</code> attribute.</p> <p>Whenever an item with one of these tags (or their associated TemporaryEffect) is added or removed, the callback MC_EVALUATE_CUSTOM_CACHE will run, allowing for a value associated with the <code>customcache</code> tag to be recalculated.</p> <p>The resultant value of this callback can be obtained using <code>player:GetCustomCacheValue(\"mycustomcache\")</code>. Note that the value is 0 by default.</p> <p>MC_EVALUATE_CUSTOM_CACHE will also run for every <code>customcache</code> that has been specified on at least one item in <code>items.xml</code> whenever a cache evaluation for <code>CacheFlag.CACHE_ALL</code> is run (such as the start of a run). Evaluations can also be triggered manually, even for tags not present in <code>items.xml</code>.</p> <p>Supported for all item types (collectibles, trinkets, and null items).</p> <p>Capitalization does not matter and is ignored in most cases, but prefer to keep things all lowercase.</p> <p>Example XML: <pre><code>customcache=\"mycustomcache familiarmultiplier\"\n</code></pre></p> <p>Example Code: <pre><code>-- Returns a table containing all customtags specified for this entity.\n-- Tags are provided in all lowercase.\nlocal customTags = item:GetCustomCacheTags()\n\n-- Triggers evaluation for the customcache immediately.\nplayer:AddCustomCacheTag(\"mycustomcache\", true)\n\n-- Queue multiple customcaches for evaluation, but does not trigger evaluation immediately.\n-- The evaluation will happen whenever a standard cache evaluation is triggered, such as via `player:EvaluateItems()`.\nplayer:AddCustomCacheTag({\"mycustomcache\", \"myothercustomcache\"}, false)\n\n-- Get the current cached value.\nlocal cacheValue = player:GetCustomCacheValue(\"mycustomcache\")\n\n-- The tags listed in the `customcache` attribute can be checked via the ItemConfig.\nlocal item = Isaac.GetItemConfig():GetCollectible(id)\n\n-- Returns true if the entity has the tag string specified.\n-- Capitalization does not matter.\nif item:HasCustomCacheTag(\"mycustomcache\") then\n  -- ...\nend\n</code></pre></p> <p>Repentogon itself adds some tags that can be used to apply certain features to items with minimal lua code:</p> customcache Effects familiarmultiplier Does not trigger MC_EVALUATE_CUSTOM_CACHE, instead triggers MC_EVALUATE_FAMILIAR_MULTIPLIER for each of the player's familiars the next time any code checks their multiplier. maxcoins Triggers re-evaluation of the max coins for all players, which can be modified using MC_EVALUATE_CUSTOM_CACHE for this tag. Note that since all players share max coins, the callback only runs for player 1. maxkeys Triggers re-evaluation of the max keys for all players, which can be modified using MC_EVALUATE_CUSTOM_CACHE for this tag. Note that since all players share max keys, the callback only runs for player 1. maxbombs Triggers re-evaluation of the max bombs for all players, which can be modified using MC_EVALUATE_CUSTOM_CACHE for this tag. Note that since all players share max bombs, the callback only runs for player 1. More Info <p>For more information about this xml, check the original docs entry here. </p>","tags":["File"]},{"location":"xml/overview.html","title":"XML-File Documentations","text":"<p>REPENTOGON changes how some xmls are able to be loaded, from enabling content adding on xmls where it was not originally possible to adding new parameters with new attached functionality, on this section you'll be able to find the xmls that feature these sort of changes.</p> <p>XML variables introduced in REPENTOGON are not case sensitive, so naming conventions like camelCase are allowed.</p>"},{"location":"xml/players.html","title":"File \"players.xml\"","text":"<p>Resource-Folder: Using this file in a resource folder of a mod will replace the original file.</p> <p>Content-Folder: Using this file in a content folder will add new characters.</p> <p>With REPENTOGON, the vanilla HP variables can be omitted and fully replaced by our more advanced variables.</p> Variable-Name Possible Values Description items string This now supports modded items by using the names of the items instead of the ids. Same format as in vanilla, a comma separated list of values heartcontainers int The amount of empty heart containers the character should start with. 1 unit = 1/2 a heart redhearts int The amount of red hearts the character should start with. 1 unit = 1/2 a heart soulhearts int The amount of soul hearts the character should start with. 1 unit = 1/2 a heart blackhearts int The amount of black hearts the character should start with. These do not replace soul hearts and are applied after soul hearts. 1 unit = 1/2 a heart goldenhearts int The amount of golden hearts the character should start with. 1 unit = 1 golden heart bonehearts int The amount of empty bone hearts the character should start with. 1 unit = 1 bone heart eternalheart int If a character should start with an eternal heart. 1 = yes brokenhearts int The amount of broken hearts the character should start with. 1 unit = 1 broken heart rottenhearts int The amount of rotten hearts the character should start with. 1 unit = 1 rotten heart healthtype int The health type the player should start with. The int corresponds to the HealthType enum. healthlimit int A maximum amount of HP the character should be able to have. 1 unit = 1/2 heart speedmodifier float An inherent offset to the speed stat the character should start with. Base this offset off of Isaac's stats. firedelaymodifier float An inherent offset to the fire delay stat the character should start with. Base this offset off of Isaac's stats. damagemodifier float An inherent offset to the damage stat the character should start with. Base this offset off of Isaac's stats. rangemodifier float An inherent offset to the range stat the character should start with. Base this offset off of Isaac's stats. shotspeedmodifier float An inherent offset to the shot speed stat the character should start with. Base this offset off of Isaac's stats. luckmodifier float An inherent offset to the luck stat the character should start with. Base this offset off of Isaac's stats. gigabombs int The amount of giga bombs the character should start with. These do not replace normal bombs. completionparent string Used for characters that have shared completion marks with a preexistent character, like Dark Judas and Judas. The name of the parent character should be used for this attribute nomarks bool If it has any value other than 'false', it will hide the completion marks for the given character noshake bool Will prevent character's shaking during stage/boss screen transition (similarly to Keeper) if set to 'true' achievement int or string This is now respected on modded characters. For mods, it's best to define this as the name of the achievement (for example, <code>achievement='TaintedPeter'</code>, TaintedPeter being the name attribute of the achievement). Characters with this tag should have a second frame in their <code>characterportraits(alt).anm2</code> which should be the \"locked\" picture for the character. In addition, all stat/item layers on the main menu will be hidden and the <code>Unlocked By</code> layer will be visible. See the achievements XML section for more info. modcostume int Set this to match the \"id\" attribute of a costume with type=\"none\" defined in the same mod (in costumes2.xml) to have that costume permanantly applied to the character (including during the mineshaft chase sequence). You cannot set both this and the \"costume\" attribute for vanilla costumes at the same time. More Info <p>For more information about this xml, check the original docs entry here.</p>","tags":["File"]},{"location":"xml/pocketitems.html","title":"File \"pocketitems.xml\"","text":"<p>Resource-Folder: Using this file in a resource folder of a mod will replace the original file.</p> <p>Content-Folder: Using this file in a content folder will add new pocketitems.</p>","tags":["File"]},{"location":"xml/pocketitems.html#cards","title":"Cards","text":"<p>With REPENTOGON, the following xml attributes have been added for cards: </p> Variable-Name Possible Values Description hidden bool <code>Optional</code> <code>Default = false</code>Prevents the card from being randomly chosen by the game or when using the ItemPool:GetCard() and ItemPool:GetCardEx() functions. weight float <code>Optional</code> <code>Default = 1.0</code>Relative \"likelihood\" for this card to be chosen over others of the same card type pool.Does not alter the chance for the specific card type pool to be chosen.","tags":["File"]},{"location":"xml/pocketitems.html#cards-pill-effects","title":"Cards &amp; Pill Effects","text":"<p>With REPENTOGON, the following xml attributes have changed functionality for regular cards and pills: </p> Variable-Name Possible Values Description achievement int or string Ties the card/pill-effect to be unlocked by an achievement. For modded ones, use the provided achievement name xml attribute(define one if it doesn't have one already). More Info <p>For more information about this xml, check the original docs entry here.</p>","tags":["File"]},{"location":"blog/archive/2023.html","title":"2023","text":""}]}