#pragma once
#include "IsaacRepentance.h"
#include "ASMPatcher.hpp"

// default empty register, tells patcher to use offset as the variant
std::optional<ASMPatch::Registers> NO_VARIANT_REG;
std::optional<int> NO_COND_JMP;

struct GridEntitySpawnPatchInfo {
	char* signature;
	char* comment; // for log
	int sigOffset; // offset from address found by scanner
	GridEntityType type;
	std::optional<ASMPatch::Registers> variantReg; // register containing variant. NO_VARIANT_REG if not used
	int variantOffset; // if no register is set, contains variant, otherwise contains offset to variant
	ASMPatch::Registers idxReg; // register containing grid idx
	int idxOffset; // offset from idxReg to grid idx
	ASMPatch::Registers seedReg; // register containing seed
	int seedOffset; // offset from seedReg to seed
	int jumpOffset; // offset from start of patch to jumped address
	std::optional<int> jumpCondOffset;
};

// reference for future maintainers:
// these patches mostly all start after the spawn seed is calculated, slightly before the grid idx is checked if between 0-447,
// and then end immediately after GridEntity::Init, after _spawnedFrame is filled (or where the ai function would jump to immediately after this call)
const GridEntitySpawnPatchInfo patches[23] = {
	{"8b0d????????8985????????8b81????????8985????????85f678??81fec00100007c??68????????6a03e8????????8b85????????83c40881febf0100000f87????????81bc??????????840300000f8f????????689c010000e8????????8bf083c40489b5????????8bcec745??06000000e8????????c706????????c786????????00000000c786????????00000000c786????????0f000000c686????????00c786????????00000000c786????????00000000c786????????00000000c786????????00000000a1????????8b0d????????8986????????898e????????a1????????8b0d????????8986????????898e????????8b8d????????c745??ffffffff8b85????????c786????????00000000c786????????00000000c746??0e0000008946??8b54????85d274??8b028bca6a01ff108b85????????8b8d????????ffb5????????8974????8bcec746??01000000",
	"ai_mega_fatty (red champion)", 0, GRID_POOP, NO_VARIANT_REG, 1, ASMPatch::Registers::ESI, 0, ASMPatch::Registers::EAX, 0, 0x166, NO_COND_JMP},

	{"8b0d????????8985????????8b81????????8985????????85f678??81fec00100007c??68????????6a03e8????????83c408",
	"ai_larryjr", 0, GRID_POOP, NO_VARIANT_REG, 0, ASMPatch::Registers::ESI, 0, ASMPatch::Registers::EAX, 0, 0x186, NO_COND_JMP},

	{"8b0d????????8945??8b81????????8985",
	"ai_chub (carrion queen)", 0, GRID_POOP, NO_VARIANT_REG, 1, ASMPatch::Registers::ESI, 0, ASMPatch::Registers::EAX, 0, 0x172, NO_COND_JMP},

	{"8b0d????????8985????????8b81????????8985????????85f678??81fec00100007c??68????????6a03e8????????8b85????????83c40881febf0100000f87????????81bc??????????840300000f8f????????689c010000e8????????8bf083c40489b5????????8bcec745??06000000e8????????c706????????c786????????00000000c786????????00000000c786????????0f000000c686????????00c786????????00000000c786????????00000000c786????????00000000c786????????00000000a1????????8b0d????????8986????????898e????????a1????????8b0d????????8986????????898e????????8b8d????????c745??ffffffff8b85????????c786????????00000000c786????????00000000c746??0e0000008946??8b54????85d274??8b028bca6a01ff108b85????????8b8d????????ffb5????????8974????8bcec746??00000000",
	"ai_dingle (normal)", 0, GRID_POOP, NO_VARIANT_REG, 0, ASMPatch::Registers::ESI, 0, ASMPatch::Registers::EAX, 0, 0x190, NO_COND_JMP},

	{"8b0d????????8985????????8b81????????8985????????85f678??81fec00100007c??68????????6a03e8????????8b85????????83c40881febf0100000f87????????81bc??????????840300000f8f????????689c010000e8????????8bf083c40489b5????????8bcec745??1c000000",
	"ai_dingle (red champion)", 0, GRID_POOP, NO_VARIANT_REG, 1, ASMPatch::Registers::ESI, 0, ASMPatch::Registers::EAX, 0, 0x107, NO_COND_JMP},

	// idx is being pulled from Entity_NPC._projectileDelay because it gets moved to a register AFTER we patch
	{"8b0d????????8bbb",
	"Entity_NPC_Gideon::SpawnLadder", 0, GRID_STAIRS, NO_VARIANT_REG, 1, ASMPatch::Registers::EBX, 0xb9c, ASMPatch::Registers::EAX, 0, 0xa5, NO_COND_JMP},

	{"8b0d????????8945??8b81????????8945",
	"Entity_NPC_Raglich::UpdateAI_Arm", 0, GRID_PIT, NO_VARIANT_REG, 0, ASMPatch::Registers::ESI, 0, ASMPatch::Registers::EAX, 0, 0xa5, NO_COND_JMP},

	// overwriting the move of the seed to ebx should be inconsequential
	// this fires AFTER the existing GridEntity is destroyed! custom handling will be needed to fix this
	{"8bd885f678",
	"Entity_NPC_Singe::DoExplosiveFart", 0, GRID_PIT, NO_VARIANT_REG, 0, ASMPatch::Registers::ESI, 0, ASMPatch::Registers::EAX, 0, 0xcb, NO_COND_JMP},

	{"8945??85ff78??81ffc00100007c??68????????6a03e8????????83c40881ffbf01000077",
	"make_wall (crawlspace ladder)", 0, GRID_DECORATION, NO_VARIANT_REG, 10, ASMPatch::Registers::EDI, 0, ASMPatch::Registers::EAX, 0, 0x92, NO_COND_JMP},

	{"8945??85ff78??81ffc00100007c??68????????6a03e8????????83c40885ff",
	"make_wall (crawlspace gravity)", 0, GRID_GRAVITY, NO_VARIANT_REG, 0, ASMPatch::Registers::EDI, 0, ASMPatch::Registers::EAX, 0, 0x9a, NO_COND_JMP},

	{"8b80????????8945??85ff",
	"update_card_against_humanity", 0, GRID_POOP, ASMPatch::Registers::EBP, -0x14, ASMPatch::Registers::EDI, 0, ASMPatch::Registers::EDX, 0, 0x152, NO_COND_JMP},

	// we jmp to a place that sets al to 0 if SpawnGridEntity fails
	{"8b75??85f678??81fec0010000",
	"TrySpawnSanguineBondSpikes", 0, GRID_SPIKES, NO_VARIANT_REG, 100, ASMPatch::Registers::EBP, -0x14, ASMPatch::Registers::EBX, 0, 0x98, -0x16e},

	{"8b4d??8945??85c978",
	"BombTearFlagEffects #1", 0, GRID_PIT, NO_VARIANT_REG, 0, ASMPatch::Registers::EBP, -0x4c, ASMPatch::Registers::EAX, 0, 0xb3, NO_COND_JMP},

	{"8985????????85f678??81fec00100007c??68????????6a03e8????????83c40885f60f88????????81fec0010000",
	"BombTearFlagEffects #2 (giga bomb)", 0, GRID_PIT, NO_VARIANT_REG, 0, ASMPatch::Registers::ESI, 0, ASMPatch::Registers::EAX, 0, 0xb6, NO_COND_JMP},

	// seems like this inline jumps partway through to a second inline, hence the big jmp
	{"81febf0100000f87????????50",
	"BombDamage (isaac's room staircase)", 0, GRID_STAIRS, NO_VARIANT_REG, 0, ASMPatch::Registers::ESI, 0, ASMPatch::Registers::EBP, -0x20, 0x19a, NO_COND_JMP},

	{"81febf01000077??50",
	"BombDamage (barren room trapdoor)", 0, GRID_TRAPDOOR, NO_VARIANT_REG, 0, ASMPatch::Registers::ESI, 0, ASMPatch::Registers::EBP, -0x20, 0x85, NO_COND_JMP},

	{"8b0d????????8b7e??8945",
	"TrySpawnLadder", 0, GRID_STAIRS, NO_VARIANT_REG, 0, ASMPatch::Registers::ESI, 0x24, ASMPatch::Registers::EAX, 0, 0xa2, NO_COND_JMP},

	{"8985????????8b85????????85c078",
	"Room::Init #1 (random decorations)", 0, GRID_DECORATION, NO_VARIANT_REG, 0, ASMPatch::Registers::EBP, -0x518, ASMPatch::Registers::EAX, 0, 0xd2, NO_COND_JMP},

	{"8985????????85f678??81fec00100007c??68????????6a03e8????????83c4088b85",
	"Room::Init #2 (crawlspace gravity)", 0, GRID_GRAVITY, NO_VARIANT_REG, 0, ASMPatch::Registers::ESI, 0, ASMPatch::Registers::EAX, 0, 0xa9, NO_COND_JMP},

	{"85d278??81fac00100007c",
	"Room::Init #3 (random greed decorations)", 0, GRID_DECORATION, NO_VARIANT_REG, 10, ASMPatch::Registers::EDX, 0, ASMPatch::Registers::ESI, 0, 0xc0, NO_COND_JMP},

	{"8945??85f678??81fec0010000",
	"TrySpawnSecretShop", 0, GRID_STAIRS, NO_VARIANT_REG, 2, ASMPatch::Registers::ESI, 0, ASMPatch::Registers::EAX, 0, 0x93, NO_COND_JMP},

	{"8bf885ff78??81ffc00100007c??68????????6a03e8????????83c40881ffbf0100000f87????????81bc??????????840300000f8f????????689c010000e8????????8bf083c4048975??8bcec745??06000000",
	"GridEntity_PressurePlate::Reward", 0, GRID_POOP, NO_VARIANT_REG, 3, ASMPatch::Registers::EAX, 0, ASMPatch::Registers::EBP, -0x18, 0x11e0, NO_COND_JMP},

	{"8bf885ff78??81ffc00100007c??68????????6a03e8????????83c40881ffbf0100000f87????????81bc??????????840300000f8f????????689c010000e8????????8bf083c4048975??8bcec745??1c000000",
	"GridEntity_PressurePlate::Reward", 0, GRID_POOP, NO_VARIANT_REG, 0, ASMPatch::Registers::EAX, 0, ASMPatch::Registers::EBP, -0x18, 0x1086, NO_COND_JMP},
};